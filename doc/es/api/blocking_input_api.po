msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:09\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/blocking_input_api.po\n"
"X-Crowdin-File-ID: 1758\n"
"Language: es_ES\n"

#: ../../api/blocking_input_api.rst:3
msgid "``matplotlib.blocking_input``"
msgstr "``matplotlib.blocking_input``"

#: matplotlib.blocking_input:1 of
msgid "Classes used for blocking interaction with figure windows:"
msgstr "Clases utilizadas para bloquear la interacción con las ventanas de figuras:"

#: matplotlib.blocking_input:5 of
msgid "`BlockingInput`"
msgstr "`Bloqueando entrada`"

#: matplotlib.blocking_input:4 of
msgid "Creates a callable object to retrieve events in a blocking way for interactive sessions.  Base class of the other classes listed here."
msgstr "Crea un objeto llamable para recuperar eventos de forma bloqueada para sesiones interactivas. Clase base de las otras clases listadas aquí."

#: matplotlib.blocking_input:9 of
msgid "`BlockingKeyMouseInput`"
msgstr "`BlockingKeyMouseInput`"

#: matplotlib.blocking_input:8 of
msgid "Creates a callable object to retrieve key or mouse clicks in a blocking way for interactive sessions.  Used by `~.Figure.waitforbuttonpress`."
msgstr "Crea un objeto llamable para recuperar teclas o clics del ratón de forma bloqueadora para sesiones interactivas. Utilizado por `~.Figure.waitforbuttonpress`."

#: matplotlib.blocking_input:13 of
msgid "`BlockingMouseInput`"
msgstr "`BlockingMouseInput`"

#: matplotlib.blocking_input:12 of
msgid "Creates a callable object to retrieve mouse clicks in a blocking way for interactive sessions.  Used by `~.Figure.ginput`."
msgstr "Crea un objeto llamable para recuperar los clics del ratón de forma bloqueadora para sesiones interactivas. Utilizado por `~.Figure.ginput`."

#: matplotlib.blocking_input:18 of
msgid "`BlockingContourLabeler`"
msgstr "`BlockingContourLabeler`"

#: matplotlib.blocking_input:16 of
msgid "Creates a callable object to retrieve mouse clicks in a blocking way that will then be used to place labels on a `.ContourSet`.  Used by `~.Axes.clabel`."
msgstr "Crea un objeto llamable para recuperar los clics del ratón de una manera bloqueadora que se utilizará para colocar etiquetas en un `. ontourSet`. Utilizado por `~.Axes.clabel`."

#: matplotlib.blocking_input.BlockingContourLabeler:1 of
msgid "Bases: :py:class:`matplotlib.blocking_input.BlockingMouseInput`"
msgstr "Bases: :py:class:`matplotlib.blocking_input.BlockingMouseInput`"

#: matplotlib.blocking_input.BlockingContourLabeler:2
#: matplotlib.blocking_input.BlockingKeyMouseInput:2 of
msgid "Callable for retrieving mouse clicks and key presses in a blocking way."
msgstr "Llamable para recuperar los clics del ratón y pulsaciones de teclas de forma bloqueadora."

#: matplotlib.blocking_input.BlockingContourLabeler:4 of
msgid "Used to place contour labels."
msgstr "Utilizado para colocar etiquetas de contorno."

#: matplotlib.blocking_input.BlockingContourLabeler.add_click:2
#: matplotlib.blocking_input.BlockingMouseInput.add_click:2 of
msgid "Add the coordinates of an event to the list of clicks."
msgstr "Añade las coordenadas de un evento a la lista de clics."

#: matplotlib.blocking_input.BlockingContourLabeler.add_click
#: matplotlib.blocking_input.BlockingContourLabeler.button1
#: matplotlib.blocking_input.BlockingContourLabeler.button3
#: matplotlib.blocking_input.BlockingContourLabeler.pop_click
#: matplotlib.blocking_input.BlockingMouseInput.add_click
#: matplotlib.blocking_input.BlockingMouseInput.cleanup
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_add
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_pop
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_stop
#: matplotlib.blocking_input.BlockingMouseInput.pop_click of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.blocking_input.BlockingContourLabeler.add_click:21
#: matplotlib.blocking_input.BlockingContourLabeler.button1:21
#: matplotlib.blocking_input.BlockingContourLabeler.button3:24
#: matplotlib.blocking_input.BlockingContourLabeler.pop_click:21
#: matplotlib.blocking_input.BlockingMouseInput.add_click:21
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_add:21
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_pop:21
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_stop:21
#: matplotlib.blocking_input.BlockingMouseInput.pop_click:21 of
msgid "**event** : `~.backend_bases.MouseEvent`"
msgstr "**evento** : `~.backend_bases.MouseEvent`"

#: matplotlib.blocking_input.BlockingContourLabeler.add_click:20
#: matplotlib.blocking_input.BlockingContourLabeler.button1:20
#: matplotlib.blocking_input.BlockingContourLabeler.button3:23
#: matplotlib.blocking_input.BlockingContourLabeler.pop_click:20
#: matplotlib.blocking_input.BlockingMouseInput.add_click:20
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_add:20
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_pop:20
#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_stop:20
#: matplotlib.blocking_input.BlockingMouseInput.pop_click:20 of
msgid "MouseEvent"
msgstr "Evento del ratón"

#: matplotlib.blocking_input.BlockingContourLabeler.button1:2 of
msgid "Process an button-1 event (add a label to a contour)."
msgstr "Procesar un evento botón-1 (añadir una etiqueta a un contorno)."

#: matplotlib.blocking_input.BlockingContourLabeler.button3:2 of
msgid "Process an button-3 event (remove a label if not in inline mode)."
msgstr "Procesar un evento botón-3 (remover una etiqueta si no está en modo en línea)."

#: matplotlib.blocking_input.BlockingContourLabeler.button3:4 of
msgid "Unfortunately, if one is doing inline labels, then there is currently no way to fix the broken contour - once humpty-dumpty is broken, he can't be put back together.  In inline mode, this does nothing."
msgstr "Desafortunadamente, si uno está haciendo etiquetas en línea, entonces actualmente no hay forma de arreglar el contorno roto - una vez que se rompe el dumpty humpty, no se le puede volver a juntar. En modo en línea, esto no hace nada."

#: matplotlib.blocking_input.BlockingContourLabeler.pop_click:2
#: matplotlib.blocking_input.BlockingMouseInput.pop_click:2 of
msgid "Remove a click (by default, the last) from the list of clicks."
msgstr "Eliminar un clic (por defecto, el último) de la lista de clics."

#: matplotlib.blocking_input.BlockingInput:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.blocking_input.BlockingInput:2 of
msgid "Callable for retrieving events in a blocking way."
msgstr "Llamable para recuperar eventos de forma bloqueadora."

#: matplotlib.blocking_input.BlockingInput.add_event:2 of
msgid "For base class, this just appends an event to events."
msgstr "Para la clase base, esto sólo añade un evento a los eventos."

#: matplotlib.blocking_input.BlockingInput.cleanup:2 of
msgid "Disconnect all callbacks."
msgstr "Desconectar todas las devoluciones."

#: matplotlib.blocking_input.BlockingInput.on_event:2 of
msgid "Event handler; will be passed to the current figure to retrieve events."
msgstr "Controlador de eventos; se pasará a la figura actual para recuperar eventos."

#: matplotlib.blocking_input.BlockingInput.pop_event:2 of
msgid "Remove an event from the event list -- by default, the last."
msgstr "Eliminar un evento de la lista de eventos -- de forma predeterminada, el último."

#: matplotlib.blocking_input.BlockingInput.pop_event:4 of
msgid "Note that this does not check that there are events, much like the normal pop method.  If no events exist, this will throw an exception."
msgstr "Tenga en cuenta que esto no comprueba que haya eventos, al igual que el método pop normal. Si no existen eventos, se producirá una excepción."

#: matplotlib.blocking_input.BlockingInput.post_event:2 of
msgid "For baseclass, do nothing but collect events."
msgstr "Para baseclass, no haga más que recoger eventos."

#: matplotlib.blocking_input.BlockingKeyMouseInput:1
#: matplotlib.blocking_input.BlockingMouseInput:1 of
msgid "Bases: :py:class:`matplotlib.blocking_input.BlockingInput`"
msgstr "Bases: :py:class:`matplotlib.blocking_input.BlockingInput`"

#: matplotlib.blocking_input.BlockingKeyMouseInput.post_event:2 of
msgid "Determine if it is a key event."
msgstr "Determine si es un acontecimiento clave."

#: matplotlib.blocking_input.BlockingMouseInput:2 of
msgid "Callable for retrieving mouse clicks in a blocking way."
msgstr "Llamable para recuperar los clics del ratón de forma bloqueadora."

#: matplotlib.blocking_input.BlockingMouseInput:4 of
msgid "This class will also retrieve keypresses and map them to mouse clicks: delete and backspace are a right click, enter is like a middle click, and all others are like a left click."
msgstr "Esta clase también recuperará pulsaciones de teclas y las mapeará a los clics del ratón: borrar y retroceder son un clic derecho, enter es como un clic medio, y todos los demás son como un clic izquierdo."

#: matplotlib.blocking_input.BlockingMouseInput.cleanup:21 of
msgid "**event** : `~.backend_bases.MouseEvent`, optional"
msgstr "**event** : `~.backend_bases.MouseEvent`, opcional"

#: matplotlib.blocking_input.BlockingMouseInput.cleanup:20 of
msgid "MouseEvent, optional"
msgstr "MouseEvent, opcional"

#: matplotlib.blocking_input.BlockingMouseInput.cleanup:8 of
msgid "Not used"
msgstr "No usado"

#: matplotlib.blocking_input.BlockingMouseInput.key_event:2 of
msgid "Process a key press event, mapping keys to appropriate mouse clicks."
msgstr "Procese un evento de pulsación de teclas, mapeando las teclas a los clics apropiados del ratón."

#: matplotlib.blocking_input.BlockingMouseInput.mouse_event:2 of
msgid "Process a mouse click event."
msgstr "Procesar un evento de clic del ratón."

#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_add:2 of
msgid "Process an button-1 event (add a click if inside axes)."
msgstr "Procesa un evento botón-1 (añade un clic si está dentro de los ejes)."

#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_pop:2 of
msgid "Process an button-3 event (remove the last click)."
msgstr "Procesar un evento botón-3 (eliminar el último clic)."

#: matplotlib.blocking_input.BlockingMouseInput.mouse_event_stop:2 of
msgid "Process an button-2 event (end blocking input)."
msgstr "Procesar un evento botón-2 (fin de bloqueo de entrada)."

#: matplotlib.blocking_input.BlockingMouseInput.pop:2 of
msgid "Remove a click and the associated event from the list of clicks."
msgstr "Eliminar un clic y el evento asociado de la lista de clics."

#: matplotlib.blocking_input.BlockingMouseInput.pop:4 of
msgid "Defaults to the last click."
msgstr "Por defecto es el último clic."

#: matplotlib.blocking_input.BlockingMouseInput.post_event:2 of
msgid "Process an event."
msgstr "Procesar un evento."

