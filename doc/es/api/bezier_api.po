msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/bezier_api.po\n"
"X-Crowdin-File-ID: 1756\n"
"Language: es_ES\n"

#: ../../api/bezier_api.rst:3
msgid "``matplotlib.bezier``"
msgstr "``matplotlib.bezier``"

#: matplotlib.bezier:1 of
msgid "A module providing some utility functions regarding Bezier path manipulation."
msgstr "Un módulo que proporciona algunas funciones de utilidad con respecto a la manipulación de rutas Bezier."

#: matplotlib.bezier.BezierSegment:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.bezier.BezierSegment:2 of
msgid "A d-dimensional Bezier segment."
msgstr "Un segmento d-dimensional Bézier."

#: matplotlib.bezier.BezierSegment matplotlib.bezier.check_if_parallel
#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath
#: matplotlib.bezier.split_bezier_intersecting_with_closedpath of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.bezier.BezierSegment:21 of
msgid "**control_points**"
msgstr "**control_puntos**"

#: of
msgid "(N, d) array"
msgstr "(N, d) matriz"

#: matplotlib.bezier.BezierSegment:8 of
msgid "Location of the *N* control points."
msgstr "Posición de los puntos de control *N*."

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema:2 of
msgid "Return the dimension and location of the curve's interior extrema."
msgstr "Retorna la dimensión y la ubicación del extremo interior de la curva."

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema:4 of
msgid "The extrema are the points along the curve where one of its partial derivatives is zero."
msgstr "Los extremos son los puntos a lo largo de la curva donde uno de sus derivados parciales es cero."

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema
#: matplotlib.bezier.BezierSegment.polynomial_coefficients
#: matplotlib.bezier.check_if_parallel
#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath
#: matplotlib.bezier.split_bezier_intersecting_with_closedpath of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema:12 of
msgid "**dims**"
msgstr "**dims**"

#: of
msgid "array of int"
msgstr "array de int"

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema:11 of
msgid "Index :math:`i` of the partial derivative which is zero at each interior extrema."
msgstr "Índice :math:`i` de la derivada parcial que es cero en cada extremo interior."

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema:28 of
msgid "**dzeros**"
msgstr "**dzeros**"

#: of
msgid "array of float"
msgstr "array de flotante"

#: matplotlib.bezier.BezierSegment.axis_aligned_extrema:15 of
msgid "Of same size as dims. The :math:`t` such that :math:`d/dx_i B(t) = 0`"
msgstr "De mismo tamaño que oscuros. El :math:`t` tales que :math:`d/dx_i B(t) = 0`"

#: matplotlib.bezier.BezierSegment.control_points:2 of
msgid "The control points of the curve."
msgstr "Los puntos de control de la curva."

#: matplotlib.bezier.BezierSegment.degree:2 of
msgid "Degree of the polynomial. One less the number of control points."
msgstr "Grado del polinomio, uno menos el número de puntos de control."

#: matplotlib.bezier.BezierSegment.dimension:2 of
msgid "The dimension of the curve."
msgstr "La dimensión de la curva."

#: matplotlib.bezier.BezierSegment.point_at_t:2 of
msgid "Evaluate the curve at a single point, returning a tuple of *d* floats."
msgstr "Evalúa la curva en un solo punto, devolviendo una tupla de *d* flotantes."

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:2 of
msgid "The polynomial coefficients of the Bezier curve."
msgstr "Los coeficientes polinomiales de la curva Bézier."

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:4 of
msgid "Follows opposite convention from `numpy.polyval`."
msgstr "Sigue la convención opuesta de `numpy.polyval`."

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:20 of
msgid "(n+1, d) array"
msgstr "(n+1, d) matriz"

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:10 of
msgid "Coefficients after expanding in polynomial basis, where :math:`n` is the degree of the bezier curve and :math:`d` its dimension. These are the numbers (:math:`C_j`) such that the curve can be written :math:`\\sum_{j=0}^n C_j t^j`."
msgstr "Coeficientes después de expandirse en base polinomial, donde :math:`n` es el grado de la curva bezier y :math:`d` su dimensión. Estos son los números (:math:`C_j`) tales que la curva puede ser escrita :math:`\\sum_{j=0}^n C_j t^j`."

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:23 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:24 of
msgid "The coefficients are calculated as"
msgstr "Los coeficientes se calculan como"

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:26 of
msgid "{n \\choose j} \\sum_{i=0}^j (-1)^{i+j} {j \\choose i} P_i"
msgstr "{n \\choose j} \\sum_{i=0}^j (-1)^{i+j} {j \\choose i} P_i"

#: matplotlib.bezier.BezierSegment.polynomial_coefficients:30 of
msgid "where :math:`P_i` are the control points of the curve."
msgstr "donde :math:`P_i` son los puntos de control de la curva."

#: matplotlib.bezier.NonIntersectingPathException:1 of
msgid "Bases: :py:class:`ValueError`"
msgstr "Bases: :py:class:`ValueError`"

#: matplotlib.bezier.check_if_parallel:2 of
msgid "Check if two lines are parallel."
msgstr "Compruebe si dos líneas son paralelas."

#: matplotlib.bezier.check_if_parallel:8 of
msgid "**dx1, dy1, dx2, dy2**"
msgstr "**dx1, dy1, dx2, dy2**"

#: of
msgid "float"
msgstr "float"

#: matplotlib.bezier.check_if_parallel:8 of
msgid "The gradients *dy*/*dx* of the two lines."
msgstr "Los degradados *dy*/*dx* de las dos líneas."

#: matplotlib.bezier.check_if_parallel:12
#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:30
#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:16 of
msgid "**tolerance**"
msgstr "**tolerancia**"

#: matplotlib.bezier.check_if_parallel:11 of
msgid "The angular tolerance in radians up to which the lines are considered parallel."
msgstr "La tolerancia angular en radianes hasta los cuales las líneas son consideradas paralelas."

#: matplotlib.bezier.check_if_parallel:31 of
msgid "is_parallel"
msgstr "es paralelo"

#: matplotlib.bezier.check_if_parallel:17 of
msgid "1 if two lines are parallel in same direction."
msgstr "1 si dos líneas son paralelas en la misma dirección."

#: matplotlib.bezier.check_if_parallel:18 of
msgid "-1 if two lines are parallel in opposite direction."
msgstr "-1 si dos líneas son paralelas en dirección opuesta."

#: matplotlib.bezier.check_if_parallel:19 of
msgid "False otherwise."
msgstr "De otro modo."

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:2 of
msgid "Find the intersection of the Bezier curve with a closed path."
msgstr "Encuentra la intersección de la curva Bézier con un camino cerrado."

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:4 of
msgid "The intersection point *t* is approximated by two parameters *t0*, *t1* such that *t0* <= *t* <= *t1*."
msgstr "El punto de intersección *t* está aproximado por dos parámetros *t0*, *t1* tales que *t0* <= *t* <= *t1*."

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:7 of
msgid "Search starts from *t0* and *t1* and uses a simple bisecting algorithm therefore one of the end points must be inside the path while the other doesn't. The search stops when the distance of the points parametrized by *t0* and *t1* gets smaller than the given *tolerance*."
msgstr "La búsqueda comienza desde *t0* y *t1* y usa un simple algoritmo de bisecting por lo tanto uno de los puntos finales debe estar dentro de la ruta mientras que el otro no. La búsqueda se detiene cuando la distancia de los puntos parametrizados por *t0* y *t1* es menor que la *tolerancia* dada."

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:18 of
msgid "**bezier_point_at_t**"
msgstr "**bezier_point_at_t**"

#: of
msgid "callable"
msgstr "llamable"

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:15 of
msgid "A function returning x, y coordinates of the Bezier at parameter *t*. It must have the signature::"
msgstr "Una función devolviendo x, y coordenadas del Bezier en el parámetro *t*. Debe tener la firma::"

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:24
#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:12 of
msgid "**inside_closedpath**"
msgstr "**dentro de la ruta cerrada**"

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:21 of
msgid "A function returning True if a given point (x, y) is inside the closed path. It must have the signature::"
msgstr "Una función que devuelve Verdadero si un punto dado (x, y) está dentro de la ruta cerrada. Debe tener la firma::"

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:27
#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:47 of
msgid "**t0, t1**"
msgstr "**t0, t1**"

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:27 of
msgid "Start parameters for the search."
msgstr "Parámetros de inicio para la búsqueda."

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:30 of
msgid "Maximal allowed distance between the final points."
msgstr "Distancia máxima permitida entre los puntos finales."

#: matplotlib.bezier.find_bezier_t_intersecting_with_closedpath:35 of
msgid "The Bezier path parameters."
msgstr "Los parámetros de ruta Bézier."

#: matplotlib.bezier.find_control_points:2 of
msgid "Find control points of the Bezier curve passing through (*c1x*, *c1y*), (*mmx*, *mmy*), and (*c2x*, *c2y*), at parametric values 0, 0.5, and 1."
msgstr "Encuentra los puntos de control de la curva Bezier que pasa por (*c1x*, *c1y*), (*mmx*, *mmy*), y (*c2x*, *c2y*), en los valores paramétricos 0, 0.5 y 1."

#: matplotlib.bezier.get_intersection:2 of
msgid "Return the intersection between the line through (*cx1*, *cy1*) at angle *t1* and the line through (*cx2*, *cy2*) at angle *t2*."
msgstr "Devuelve la intersección entre la línea a través de (*cx1*, *cy1*) en el ángulo *t1* y la línea a través (*cx2*, *cy2*) en el ángulo *t2*."

#: matplotlib.bezier.get_normal_points:2 of
msgid "For a line passing through (*cx*, *cy*) and having an angle *t*, return locations of the two points located along its perpendicular line at the distance of *length*."
msgstr "Para una línea que pasa por (*cx*, *cito*) y que tiene un ángulo *t*, ubicaciones de retorno de los dos puntos ubicados a lo largo de su línea perpendicular a la distancia de *longitud*."

#: matplotlib.bezier.get_parallels:2 of
msgid "Given the quadratic Bezier control points *bezier2*, returns control points of quadratic Bezier lines roughly parallel to given one separated by *width*."
msgstr "Dados los cuadráticos puntos de control Bézier *bezier2*, devuelve los puntos de control de líneas cuadráticas Bézier más o menos paralelas a uno dado separado por *ancho*."

#: matplotlib.bezier.inside_circle:2 of
msgid "Return a function that checks whether a point is in a circle with center (*cx*, *cy*) and radius *r*."
msgstr "Devuelve una función que comprueba si un punto está en un círculo con el centro (*cx*, *ci*) y el radio *r*."

#: matplotlib.bezier.inside_circle:5 of
msgid "The returned function has the signature::"
msgstr "La función devuelta tiene la firma::"

#: matplotlib.bezier.make_wedged_bezier2:2 of
msgid "Being similar to get_parallels, returns control points of two quadratic Bezier lines having a width roughly parallel to given one separated by *width*."
msgstr "Siendo similar a get_parallels, devuelve puntos de control de dos líneas cuadráticas Bézier que tienen un ancho más o menos paralelo a uno dado separado por *ancho*."

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:2 of
msgid "Split a Bezier curve into two at the intersection with a closed path."
msgstr "Divida una curva Bézier en dos en la intersección con un camino cerrado."

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:8 of
msgid "**bezier**"
msgstr "**bezier**"

#: of
msgid "(N, 2) array-like"
msgstr "(N, 2) array-like"

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:8 of
msgid "Control points of the Bezier segment. See `.BezierSegment`."
msgstr "Puntos de control del segmento Bezier. Ver `.BezierSegment`."

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:11 of
msgid "A function returning True if a given point (x, y) is inside the closed path. See also `.find_bezier_t_intersecting_with_closedpath`."
msgstr "Una función que devuelve True si un punto dado (x, y) está dentro de la ruta cerrada."

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:15 of
msgid "The tolerance for the intersection. See also `.find_bezier_t_intersecting_with_closedpath`."
msgstr "La tolerancia para la intersección. Vea también `.find_bezier_t_intersecting_with_closedpath`."

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:33 of
msgid "left, right"
msgstr "izquierda, derecha"

#: matplotlib.bezier.split_bezier_intersecting_with_closedpath:21 of
msgid "Lists of control points for the two Bezier segments."
msgstr "Lista de puntos de control para los dos segmentos Bézier."

#: matplotlib.bezier.split_de_casteljau:2 of
msgid "Split a Bezier segment defined by its control points *beta* into two separate segments divided at *t* and return their control points."
msgstr "Dividir un segmento Bezier definido por sus puntos de control *beta* en dos segmentos separados divididos en *t* y devolver sus puntos de control."

#: matplotlib.bezier.split_path_inout:2 of
msgid "Divide a path into two segments at the point where ``inside(x, y)`` becomes False."
msgstr "Divida una ruta en dos segmentos en el punto donde ``dentro (x, y)`` se convierte en False."

