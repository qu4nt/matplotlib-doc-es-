msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/contour_api.po\n"
"X-Crowdin-File-ID: 1774\n"
"Language: es_ES\n"

#: ../../api/contour_api.rst:3
msgid "``matplotlib.contour``"
msgstr "``matplotlib.contour``"

#: matplotlib.contour:1 of
msgid "Classes to support contour plotting and labelling for the Axes class."
msgstr "Clases para apoyar el trazado de contornos y el etiquetado para la clase Axes."

#: matplotlib.contour.ClabelText:1 of
msgid "Bases: :py:class:`matplotlib.text.Text`"
msgstr "Bases: :py:class:`matplotlib.text.Text`"

#: matplotlib.contour.ClabelText:2 of
msgid "Unlike the ordinary text, the get_rotation returns an updated angle in the pixel coordinate assuming that the input rotation is an angle in data coordinate (or whatever transform set)."
msgstr "A diferencia del texto ordinario, el get_rotation devuelve un ángulo actualizado en la coordenada de píxeles asumiendo que la rotación de entrada es un ángulo en las coordenadas de datos (o cualquier otro conjunto de transformación)."

#: matplotlib.contour.ClabelText:25 of
msgid "Create a `.Text` instance at *x*, *y* with string *text*."
msgstr "Crea una instancia `.Text` en *x*, *y* con la cadena *text*."

#: matplotlib.contour.ClabelText:27 of
msgid "Valid keyword arguments are:"
msgstr "Los argumentos válidos de la palabra clave son:"

#: matplotlib.artist.ClabelText.set:10 matplotlib.contour.ClabelText:33 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.ClabelText.set:10 matplotlib.contour.ClabelText:33 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.ClabelText.set:12 matplotlib.contour.ClabelText:35 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.ClabelText.set:12 matplotlib.contour.ClabelText:35 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.ClabelText.set:13 matplotlib.contour.ClabelText:36 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.artist.ClabelText.set:13 matplotlib.contour.ClabelText:36 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.artist.ClabelText.set:14 matplotlib.contour.ClabelText:37 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.ClabelText.set:14 matplotlib.artist.ClabelText.set:18
#: matplotlib.artist.ClabelText.set:31 matplotlib.artist.ClabelText.set:36
#: matplotlib.artist.ClabelText.set:40 matplotlib.artist.ClabelText.set:47
#: matplotlib.artist.ClabelText.set:51 matplotlib.artist.ClabelText.set:52
#: matplotlib.contour.ClabelText:37 matplotlib.contour.ClabelText:54
#: matplotlib.contour.ClabelText:59 matplotlib.contour.ClabelText:63
#: matplotlib.contour.ClabelText:70 matplotlib.contour.ClabelText:74
#: matplotlib.contour.ClabelText:75 of
msgid "bool"
msgstr "bool"

#: matplotlib.artist.ClabelText.set:15 matplotlib.contour.ClabelText:38 of
msgid ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"
msgstr ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"

#: matplotlib.artist.ClabelText.set:15 matplotlib.artist.ClabelText.set:20
#: matplotlib.contour.ClabelText:38 matplotlib.contour.ClabelText:43 of
msgid "color"
msgstr "color"

#: matplotlib.artist.ClabelText.set:16 matplotlib.contour.ClabelText:39 of
msgid ":meth:`bbox <matplotlib.text.Text.set_bbox>`"
msgstr ":meth:`bbox <matplotlib.text.Text.set_bbox>`"

#: matplotlib.artist.ClabelText.set:16 matplotlib.contour.ClabelText:39 of
msgid "dict with properties for `.patches.FancyBboxPatch`"
msgstr "dict con propiedades para `.patches.FancyBboxPatch`"

#: matplotlib.artist.ClabelText.set:17 matplotlib.contour.ClabelText:40 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.contour.ClabelText:40 matplotlib.contour.ClabelText:41
#: matplotlib.contour.ClabelText:42 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.artist.ClabelText.set:18 matplotlib.contour.ClabelText:41 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.ClabelText.set:19 matplotlib.contour.ClabelText:42 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.ClabelText.set:20 matplotlib.contour.ClabelText:43 of
msgid ":meth:`color <matplotlib.text.Text.set_color>` or c"
msgstr ":meth:`color <matplotlib.text.Text.set_color>` or c"

#: matplotlib.artist.ClabelText.set:21 matplotlib.contour.ClabelText:44 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.ClabelText.set:21 matplotlib.contour.ClabelText:44 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.artist.ClabelText.set:22 matplotlib.contour.ClabelText:45 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` or family"
msgstr ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` o familia"

#: matplotlib.artist.ClabelText.set:22 matplotlib.contour.ClabelText:45 of
msgid "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"
msgstr "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"

#: matplotlib.artist.ClabelText.set:23 matplotlib.contour.ClabelText:46 of
msgid ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` or font or font_properties"
msgstr ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` o font o font_properties"

#: matplotlib.artist.ClabelText.set:23 matplotlib.contour.ClabelText:46 of
msgid "`.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr "`.font_manager.FontProperties` o `str` o `pathlib.Path`"

#: matplotlib.artist.ClabelText.set:24 matplotlib.contour.ClabelText:47 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` or size"
msgstr ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` o size"

#: matplotlib.artist.ClabelText.set:24 matplotlib.contour.ClabelText:47 of
msgid "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
msgstr "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"

#: matplotlib.artist.ClabelText.set:25 matplotlib.contour.ClabelText:48 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"
msgstr ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"

#: matplotlib.artist.ClabelText.set:25 matplotlib.contour.ClabelText:48 of
msgid "{a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"

#: matplotlib.artist.ClabelText.set:26 matplotlib.contour.ClabelText:49 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` or style"
msgstr ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` o style"

#: matplotlib.artist.ClabelText.set:26 matplotlib.contour.ClabelText:49 of
msgid "{'normal', 'italic', 'oblique'}"
msgstr "{'normal', 'italic', 'oblique'}"

#: matplotlib.artist.ClabelText.set:27 matplotlib.contour.ClabelText:50 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` or variant"
msgstr ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` o variant"

#: matplotlib.artist.ClabelText.set:27 matplotlib.contour.ClabelText:50 of
msgid "{'normal', 'small-caps'}"
msgstr "{'normal', 'small-caps'}"

#: matplotlib.artist.ClabelText.set:28 matplotlib.contour.ClabelText:51 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"
msgstr ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"

#: matplotlib.artist.ClabelText.set:28 matplotlib.contour.ClabelText:51 of
msgid "{a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"

#: matplotlib.artist.ClabelText.set:29 matplotlib.contour.ClabelText:52 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.ClabelText.set:29 matplotlib.artist.ClabelText.set:34
#: matplotlib.artist.ClabelText.set:48 matplotlib.contour.ClabelText:52
#: matplotlib.contour.ClabelText:57 matplotlib.contour.ClabelText:71 of
msgid "str"
msgstr "str"

#: matplotlib.artist.ClabelText.set:30 matplotlib.contour.ClabelText:53 of
msgid ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"
msgstr ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"

#: matplotlib.artist.ClabelText.set:30 matplotlib.contour.ClabelText:53 of
msgid "{'center', 'right', 'left'}"
msgstr "{'center', 'right', 'left'}"

#: matplotlib.artist.ClabelText.set:31 matplotlib.contour.ClabelText:54 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.ClabelText.set:32 matplotlib.contour.ClabelText:55 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.ClabelText.set:32 matplotlib.artist.ClabelText.set:45
#: matplotlib.contour.ClabelText:55 matplotlib.contour.ClabelText:68 of
msgid "object"
msgstr "object"

#: matplotlib.artist.ClabelText.set:33 matplotlib.contour.ClabelText:56 of
msgid ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"
msgstr ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"

#: matplotlib.artist.ClabelText.set:33 matplotlib.contour.ClabelText:56 of
msgid "float (multiple of font size)"
msgstr "float (múltiplo del tamaño de la fuente)"

#: matplotlib.artist.ClabelText.set:34 matplotlib.contour.ClabelText:57 of
msgid ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"
msgstr ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"

#: matplotlib.artist.ClabelText.set:35 matplotlib.contour.ClabelText:58 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` or ma"
msgstr ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` o ma"

#: matplotlib.artist.ClabelText.set:35 matplotlib.contour.ClabelText:58 of
msgid "{'left', 'right', 'center'}"
msgstr "{'left', 'right', 'center'}"

#: matplotlib.artist.ClabelText.set:36 matplotlib.contour.ClabelText:59 of
msgid ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"
msgstr ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"

#: matplotlib.artist.ClabelText.set:37 matplotlib.contour.ClabelText:60 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.ClabelText.set:37 matplotlib.contour.ClabelText:60 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.ClabelText.set:38 matplotlib.contour.ClabelText:61 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.ClabelText.set:38 matplotlib.contour.ClabelText:61 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.ClabelText.set:39 matplotlib.contour.ClabelText:62 of
msgid ":meth:`position <matplotlib.text.Text.set_position>`"
msgstr ":meth:`position <matplotlib.text.Text.set_position>`"

#: matplotlib.artist.ClabelText.set:39 matplotlib.contour.ClabelText:62 of
msgid "(float, float)"
msgstr "(float, float)"

#: matplotlib.artist.ClabelText.set:40 matplotlib.contour.ClabelText:63 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.ClabelText.set:41 matplotlib.contour.ClabelText:64 of
msgid ":meth:`rotation <matplotlib.text.Text.set_rotation>`"
msgstr ":meth:`rotation <matplotlib.text.Text.set_rotation>`"

#: matplotlib.artist.ClabelText.set:41 matplotlib.contour.ClabelText:64 of
msgid "float or {'vertical', 'horizontal'}"
msgstr "float o {'vertical', 'horizontal'}"

#: matplotlib.artist.ClabelText.set:42 matplotlib.contour.ClabelText:65 of
msgid ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"
msgstr ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"

#: matplotlib.artist.ClabelText.set:42 matplotlib.contour.ClabelText:65 of
msgid "{None, 'default', 'anchor'}"
msgstr "{None, 'default', 'anchor'}"

#: matplotlib.artist.ClabelText.set:43 matplotlib.contour.ClabelText:66 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.ClabelText.set:43 matplotlib.contour.ClabelText:66 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.ClabelText.set:44 matplotlib.contour.ClabelText:67 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.ClabelText.set:44 matplotlib.artist.ClabelText.set:49
#: matplotlib.contour.ClabelText:67 matplotlib.contour.ClabelText:72 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.ClabelText.set:45 matplotlib.contour.ClabelText:68 of
msgid ":meth:`text <matplotlib.text.Text.set_text>`"
msgstr ":meth:`text <matplotlib.text.Text.set_text>`"

#: matplotlib.artist.ClabelText.set:46 matplotlib.contour.ClabelText:69 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.ClabelText.set:46 matplotlib.contour.ClabelText:69 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.artist.ClabelText.set:47 matplotlib.contour.ClabelText:70 of
msgid ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"
msgstr ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"

#: matplotlib.artist.ClabelText.set:48 matplotlib.contour.ClabelText:71 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.ClabelText.set:49 matplotlib.contour.ClabelText:72 of
msgid ":meth:`usetex <matplotlib.text.Text.set_usetex>`"
msgstr ":meth:`usetex <matplotlib.text.Text.set_usetex>`"

#: matplotlib.artist.ClabelText.set:50 matplotlib.contour.ClabelText:73 of
msgid ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"
msgstr ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"

#: matplotlib.artist.ClabelText.set:50 matplotlib.contour.ClabelText:73 of
msgid "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
msgstr "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"

#: matplotlib.artist.ClabelText.set:51 matplotlib.contour.ClabelText:74 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.ClabelText.set:52 matplotlib.contour.ClabelText:75 of
msgid ":meth:`wrap <matplotlib.text.Text.set_wrap>`"
msgstr ":meth:`wrap <matplotlib.text.Text.set_wrap>`"

#: matplotlib.artist.ClabelText.set:53 matplotlib.contour.ClabelText:76 of
msgid ":meth:`x <matplotlib.text.Text.set_x>`"
msgstr ":meth:`x <matplotlib.text.Text.set_x>`"

#: matplotlib.artist.ClabelText.set:53 matplotlib.artist.ClabelText.set:54
#: matplotlib.artist.ClabelText.set:55 matplotlib.contour.ClabelText:76
#: matplotlib.contour.ClabelText:77 matplotlib.contour.ClabelText:78 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.artist.ClabelText.set:54 matplotlib.contour.ClabelText:77 of
msgid ":meth:`y <matplotlib.text.Text.set_y>`"
msgstr ":meth:`y <matplotlib.text.Text.set_y>`"

#: matplotlib.artist.ClabelText.set:55 matplotlib.contour.ClabelText:78 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.contour.ClabelText.get_rotation:2 of
msgid "Return the text angle in degrees between 0 and 360."
msgstr "Devuelve el ángulo del texto en grados entre 0 y 360."

#: matplotlib.artist.ClabelText.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.ClabelText.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.ClabelText.set:17 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.artist.ClabelText.set:19 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.contour.ContourLabeler:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.contour.ContourLabeler:2 of
msgid "Mixin to provide labelling capability to `.ContourSet`."
msgstr "Mezcla para proporcionar capacidad de etiquetado a `.ContourSet`."

#: matplotlib.contour.ContourLabeler.add_label:2 of
msgid "Add contour label using :class:`~matplotlib.text.Text` class."
msgstr "Añade etiqueta de contorno usando la clase :class:`~matplotlib.text.Text`."

#: matplotlib.contour.ContourLabeler.add_label_clabeltext:2 of
msgid "Add contour label using :class:`ClabelText` class."
msgstr "Añade etiqueta de contorno usando la clase :class:`ClabelText`."

#: matplotlib.contour.ContourLabeler.add_label_near:2 of
msgid "Add a label near the point ``(x, y)``."
msgstr "Agrega una etiqueta cerca del punto ``(x, y)``."

#: matplotlib.contour.ContourLabeler.add_label_near
#: matplotlib.contour.ContourLabeler.clabel matplotlib.contour.ContourSet
#: matplotlib.contour.ContourSet.find_nearest_contour
#: matplotlib.contour.ContourSet.legend_elements
#: matplotlib.contour.QuadContourSet of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.contour.ContourLabeler.add_label_near:8
#: matplotlib.contour.ContourSet.find_nearest_contour:8 of
msgid "**x, y**"
msgstr "**x, y**"

#: matplotlib.contour.ContourLabeler.add_label_near:8 of
msgid "The approximate location of the label."
msgstr "Ubicación aproximada de la etiqueta."

#: matplotlib.contour.ContourLabeler.add_label_near:11
#: matplotlib.contour.ContourLabeler.clabel:31 of
msgid "**inline**"
msgstr "**en línea**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.contour.ContourLabeler.add_label_near:11 of
msgid "If *True* remove the segment of the contour beneath the label."
msgstr "Si *Verdadero* remover el segmento del contorno debajo de la etiqueta."

#: matplotlib.contour.ContourLabeler.add_label_near:16
#: matplotlib.contour.ContourLabeler.clabel:37 of
msgid "**inline_spacing**"
msgstr "**espacio_en línea**"

#: of
msgid "int, default: 5"
msgstr "int, por defecto: 5"

#: matplotlib.contour.ContourLabeler.add_label_near:14 of
msgid "Space in pixels to leave on each side of label when placing inline. This spacing will be exact for labels at locations where the contour is straight, less so for labels on curved contours."
msgstr "Espacio en píxeles para dejar en cada lado de la etiqueta cuando se coloca en línea. Este espaciado será exacto para las etiquetas en lugares donde el contorno es recto, menos para las etiquetas en contornos curvos."

#: matplotlib.contour.ContourLabeler.add_label_near:35 of
msgid "**transform** : `.Transform` or `False`, default: ``self.axes.transData``"
msgstr "**transform** : `.Transform` o `False`, por defecto: ``self.axes.transData``"

#: matplotlib.contour.ContourLabeler.add_label_near:34 of
msgid "Transform or False, default: self.axes.transData"
msgstr "Transforma o False, por defecto: self.axes.transData"

#: matplotlib.contour.ContourLabeler.add_label_near:19 of
msgid "A transform applied to ``(x, y)`` before labeling.  The default causes ``(x, y)`` to be interpreted as data coordinates.  `False` is a synonym for `.IdentityTransform`; i.e. ``(x, y)`` should be interpreted as display coordinates."
msgstr "Una transformación aplicada a ``(x, y)`` antes de etiquetar. El valor predeterminado hace que ``(x, y)`` sea interpretado como coordenadas de datos. `False` es un sinónimo de `.IdentityTransform`; es decir, ``(x, y)`` debe interpretarse como coordenadas de pantalla."

#: matplotlib.contour.ContourLabeler.calc_label_rot_and_inline:2 of
msgid "Calculate the appropriate label rotation given the linecontour coordinates in screen units, the index of the label location and the label width."
msgstr "Calcula la rotación adecuada de la etiqueta, dadas las coordenadas de la línea en unidades de pantalla, el índice de la ubicación de la etiqueta y el ancho de la etiqueta."

#: matplotlib.contour.ContourLabeler.calc_label_rot_and_inline:6 of
msgid "If *lc* is not None or empty, also break contours and compute inlining."
msgstr "Si *lc* no es Ninguno o vacío, también rompe contornos y calcula el incrustado."

#: matplotlib.contour.ContourLabeler.calc_label_rot_and_inline:9 of
msgid "*spacing* is the empty space to leave around the label, in pixels."
msgstr "*espacio* es el espacio vacío para dejar alrededor de la etiqueta, en píxeles."

#: matplotlib.contour.ContourLabeler.calc_label_rot_and_inline:11 of
msgid "Both tasks are done together to avoid calculating path lengths multiple times, which is relatively costly."
msgstr "Ambas tareas se realizan juntas para evitar calcular las longitudes de las rutas múltiples veces, lo que es relativamente costoso."

#: matplotlib.contour.ContourLabeler.calc_label_rot_and_inline:14 of
msgid "The method used here involves computing the path length along the contour in pixel coordinates and then looking approximately (label width / 2) away from central point to determine rotation and then to break contour if desired."
msgstr "El método utilizado aquí consiste en calcular la longitud de la ruta a lo largo del contorno en coordenadas de píxeles y luego mirar aproximadamente (ancho de la etiqueta / 2) lejos del punto central para determinar la rotación y luego romper el contorno si se desea."

#: matplotlib.contour.ContourLabeler.clabel:2 of
msgid "Label a contour plot."
msgstr "Etiqueta una parcela de contorno."

#: matplotlib.contour.ContourLabeler.clabel:4 of
msgid "Adds labels to line contours in this `.ContourSet` (which inherits from this mixin class)."
msgstr "Añade etiquetas a los contornos de línea en este `.ContourSet` (que hereda de esta clase mixin)."

#: matplotlib.contour.ContourLabeler.clabel:11 matplotlib.contour.ContourSet:12
#: matplotlib.contour.ContourSet:62 matplotlib.contour.ContourSet:87
#: matplotlib.contour.QuadContourSet:29 matplotlib.contour.QuadContourSet:54 of
msgid "**levels**"
msgstr "**Niveles**"

#: of
msgid "array-like, optional"
msgstr "tipo arreglo, opcional"

#: matplotlib.contour.ContourLabeler.clabel:10 of
msgid "A list of level values, that should be labeled. The list must be a subset of ``cs.levels``. If not given, all levels are labeled."
msgstr "Una lista de valores de nivel, que debe ser etiquetada. La lista debe ser un subconjunto de ``cs.levels``. Si no se proporciona, todos los niveles están etiquetados."

#: matplotlib.contour.ContourLabeler.clabel:15 of
msgid "**fontsize** : str or float, default: :rc:`font.size`"
msgstr "**fontsize** : str or float, default: :rc:`font.size`"

#: of
msgid "str or float, default:"
msgstr "str o float, por defecto:"

#: matplotlib.contour.ContourLabeler.clabel:14 of
msgid "Size in points or relative size e.g., 'smaller', 'x-large'. See `.Text.set_size` for accepted string values."
msgstr "Tamaño en puntos o tamaño relativo, por ejemplo, 'smaller', 'x-large'. Vea `.Text.set_size` para valores aceptados de cadena."

#: matplotlib.contour.ContourLabeler.clabel:27 of
msgid "**colors**"
msgstr "**colores**"

#: of
msgid "color or colors or None, default: None"
msgstr "color o colores o ninguno, por defecto: ninguno"

#: matplotlib.contour.ContourLabeler.clabel:18 of
msgid "The label colors:"
msgstr "Los colores de la etiqueta:"

#: matplotlib.contour.ContourLabeler.clabel:20 of
msgid "If *None*, the color of each label matches the color of the corresponding contour."
msgstr "Si *nunca*, el color de cada etiqueta coincide con el color del contorno correspondiente."

#: matplotlib.contour.ContourLabeler.clabel:23 of
msgid "If one string color, e.g., *colors* = 'r' or *colors* = 'red', all labels will be plotted in this color."
msgstr "Si un color de cadena, por ejemplo, *colores* = 'r' o *colores* = 'rojo', todas las etiquetas se trazarán en este color."

#: matplotlib.contour.ContourLabeler.clabel:26 of
msgid "If a tuple of colors (string, float, rgb, etc), different labels will be plotted in different colors in the order specified."
msgstr "Si una tupla de colores (cadena, flotante, rgb, etc), diferentes etiquetas se trazarán en diferentes colores en el orden especificado."

#: matplotlib.contour.ContourLabeler.clabel:30 of
msgid "If ``True`` the underlying contour is removed where the label is placed."
msgstr "Si es ``True`` se elimina el contorno subyacente donde se coloca la etiqueta."

#: of
msgid "float, default: 5"
msgstr "float, por defecto: 5"

#: matplotlib.contour.ContourLabeler.clabel:34 of
msgid "Space in pixels to leave on each side of label when placing inline."
msgstr "Espacio en píxeles para dejar en cada lado de la etiqueta cuando se coloca en línea."

#: matplotlib.contour.ContourLabeler.clabel:36 of
msgid "This spacing will be exact for labels at locations where the contour is straight, less so for labels on curved contours."
msgstr "Este espaciado será exacto para las etiquetas en lugares donde el contorno es recto, menos para las etiquetas en contornos curvos."

#: matplotlib.contour.ContourLabeler.clabel:49 of
msgid "**fmt** : `.Formatter` or str or callable or dict, optional"
msgstr "**fmt** : `.Formatter` o str o callable o dictamen, opcional"

#: matplotlib.contour.ContourLabeler.clabel:48 of
msgid "Formatter or str or callable or dict, optional"
msgstr "Formatear o str o callable o diccionario, opcional"

#: matplotlib.contour.ContourLabeler.clabel:40 of
msgid "How the levels are formatted:"
msgstr "Cómo se formatean los niveles:"

#: matplotlib.contour.ContourLabeler.clabel:42 of
msgid "If a `.Formatter`, it is used to format all levels at once, using its `.Formatter.format_ticks` method."
msgstr "Si es un `.Formatter`, se utiliza para formatear todos los niveles a la vez, utilizando su método `.Formatter.format_ticks`."

#: matplotlib.contour.ContourLabeler.clabel:44 of
#, python-format
msgid "If a str, it is interpreted as a %-style format string."
msgstr "Si una str, se interpreta como una cadena de formato de tipo %-s."

#: matplotlib.contour.ContourLabeler.clabel:45 of
msgid "If a callable, it is called with one level at a time and should return the corresponding label."
msgstr "Si es llamable, se llama con un nivel a la vez y debe devolver la etiqueta correspondiente."

#: matplotlib.contour.ContourLabeler.clabel:47 of
msgid "If a dict, it should directly map levels to labels."
msgstr "Si un dictamen, debe asignar directamente los niveles a las etiquetas."

#: matplotlib.contour.ContourLabeler.clabel:49 of
msgid "The default is to use a standard `.ScalarFormatter`."
msgstr "El valor por defecto es utilizar un `.ScalarFormatter`."

#: matplotlib.contour.ContourLabeler.clabel:64 of
msgid "**manual**"
msgstr "**manual**"

#: of
msgid "bool or iterable, default: False"
msgstr "libro o iterable, por defecto: False"

#: matplotlib.contour.ContourLabeler.clabel:52 of
msgid "If ``True``, contour labels will be placed manually using mouse clicks. Click the first button near a contour to add a label, click the second button (or potentially both mouse buttons at once) to finish adding labels. The third button can be used to remove the last label added, but only if labels are not inline. Alternatively, the keyboard can be used to select label locations (enter to end label placement, delete or backspace act like the third mouse button, and any other key will select a label location)."
msgstr "Si es ``Verdadero``, las etiquetas de contorno se colocarán manualmente usando clic del ratón. Haga clic en el primer botón cerca de un contorno para añadir una etiqueta, haga clic en el segundo botón (o posiblemente en ambos botones del ratón a la vez) para terminar de añadir etiquetas. El tercer botón se puede utilizar para eliminar la última etiqueta añadida, pero sólo si las etiquetas no están en línea. Alternativamente, el teclado puede utilizarse para seleccionar ubicaciones de la etiqueta (introduzca para la posición final de la etiqueta, borrar o retroceder actuar como el tercer botón del ratón, y cualquier otra tecla seleccionará una ubicación de etiqueta)."

#: matplotlib.contour.ContourLabeler.clabel:62 of
msgid "*manual* can also be an iterable object of (x, y) tuples. Contour labels will be created as if mouse is clicked at each (x, y) position."
msgstr "*manual* también puede ser un objeto iterable de (x, y). Las etiquetas de contorno se crearán como si el ratón se haga clic en cada posición (x, Y)."

#: matplotlib.contour.ContourLabeler.clabel:68 of
msgid "**rightside_up**"
msgstr "**derecha_arriba**"

#: matplotlib.contour.ContourLabeler.clabel:67 of
msgid "If ``True``, label rotations will always be plus or minus 90 degrees from level."
msgstr "Si es ``True``, las rotaciones de la etiqueta siempre serán más o menos 90 grados desde el nivel."

#: matplotlib.contour.ContourLabeler.clabel:74 of
msgid "**use_clabeltext**"
msgstr "**usar_clabeltext**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.contour.ContourLabeler.clabel:71 of
msgid "If ``True``, `.ClabelText` class (instead of `.Text`) is used to create labels. `ClabelText` recalculates rotation angles of texts during the drawing time, therefore this can be used if aspect of the axes changes."
msgstr "Si es ``True``, la clase `.ClabelText` (en lugar de `.Text`) es usada para crear etiquetas. `ClabelText` recalcula los ángulos de rotación de los textos durante el tiempo de dibujo, por lo tanto se puede utilizar si el aspecto de los ejes cambia."

#: matplotlib.contour.ContourLabeler.clabel:77 of
msgid "**zorder** : float or None, default: ``(2 + contour.get_zorder())``"
msgstr "**zorder** : flotante o ninguno, por defecto: ``(2 + contour.get_zorder())``"

#: of
msgid "float or None, default:"
msgstr "flotante o ninguno, por defecto:"

#: matplotlib.contour.ContourLabeler.clabel:77 of
msgid "zorder of the contour labels."
msgstr "zorder de las etiquetas de contorno."

#: matplotlib.contour.ContourLabeler.clabel
#: matplotlib.contour.ContourSet.find_nearest_contour
#: matplotlib.contour.ContourSet.legend_elements of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.contour.ContourLabeler.clabel:94 of
msgid "labels"
msgstr "etiquetas"

#: matplotlib.contour.ContourLabeler.clabel:82 of
msgid "A list of `.Text` instances for the labels."
msgstr "Una lista de instancias `.Text` para las etiquetas."

#: matplotlib.contour.ContourLabeler.get_label_coords:2 of
msgid "[*Deprecated*] Return x, y, and the index of a label location."
msgstr "[*Desaprobado*] Devuelve x, y, y el índice de una ubicación de la etiqueta."

#: matplotlib.contour.ContourLabeler.get_label_coords:4 of
msgid "Labels are plotted at a location with the smallest deviation of the contour from a straight line unless there is another label nearby, in which case the next best place on the contour is picked up. If all such candidates are rejected, the beginning of the contour is chosen."
msgstr "Las etiquetas se trazan en una ubicación con la menor desviación del contorno de una línea recta a menos que haya otra etiqueta cerca, en cuyo caso se recogerá el siguiente mejor lugar en el contorno. Si se rechaza a todos esos candidatos, se elige el comienzo del contorno."

#: matplotlib.contour.ContourLabeler.get_label_coords:21
#: matplotlib.contour.ContourLabeler.get_label_width:15 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.contour.ContourLabeler.get_label_width:2 of
msgid "[*Deprecated*] Return the width of the label in points."
msgstr "[*Obsoleto*] Devuelve el ancho de la etiqueta en puntos."

#: matplotlib.contour.ContourLabeler.get_text:2 of
msgid "Get the text of the label."
msgstr "Obtener el texto de la etiqueta."

#: matplotlib.contour.ContourLabeler.locate_label:2 of
msgid "Find good place to draw a label (relatively flat part of the contour)."
msgstr "Encuentra un buen lugar para dibujar una etiqueta (parte relativamente plana del contorno)."

#: matplotlib.contour.ContourLabeler.pop_label:2 of
msgid "Defaults to removing last label, but any index can be supplied"
msgstr "Por defecto se elimina la última etiqueta, pero se puede suministrar cualquier índice"

#: matplotlib.contour.ContourLabeler.print_label:2 of
msgid "Return whether a contour is long enough to hold a label."
msgstr "Devuelve si un contorno es lo suficientemente largo como para mantener una etiqueta."

#: matplotlib.contour.ContourLabeler.set_label_props:2 of
msgid "Set the label properties - color, fontsize, text."
msgstr "Establece las propiedades de la etiqueta - color, tamaño de fuente, texto."

#: matplotlib.contour.ContourLabeler.too_close:2 of
msgid "Return whether a label is already near this location."
msgstr "Devuelve si una etiqueta ya está cerca de esta ubicación."

#: matplotlib.contour.ContourSet:1 of
msgid "Bases: :py:class:`matplotlib.cm.ScalarMappable`, :py:class:`matplotlib.contour.ContourLabeler`"
msgstr "Bases: :py:class:`matplotlib.cm.ScalarMappable`, :py:class:`matplotlib.contour.ContourLabeler`"

#: matplotlib.contour.ContourSet:2 of
msgid "Store a set of contour lines or filled regions."
msgstr "Almacena un conjunto de líneas de contorno o regiones llenas."

#: matplotlib.contour.ContourSet:4 of
msgid "User-callable method: `~.Axes.clabel`"
msgstr "Método llamable de usuario: `~.Axes.clabel`"

#: matplotlib.contour.ContourSet:9 matplotlib.contour.ContourSet:83
#: matplotlib.contour.QuadContourSet:50 of
msgid "**ax** : `~.axes.Axes`"
msgstr "**eje** : `~.axes.Axes`"

#: matplotlib.contour.ContourSet:8 matplotlib.contour.ContourSet:54
#: matplotlib.contour.ContourSet:82 matplotlib.contour.QuadContourSet:21
#: matplotlib.contour.QuadContourSet:49 of
msgid "Axes"
msgstr "Ejes"

#: of
msgid "[level0, level1, ..., leveln]"
msgstr "[nivel0, nivel1, ..., nivel]"

#: matplotlib.contour.ContourSet:12 matplotlib.contour.ContourSet:86
#: matplotlib.contour.QuadContourSet:53 of
msgid "A list of floating point numbers indicating the contour levels."
msgstr "Una lista de números de punto flotante que indican los niveles de contorno."

#: matplotlib.contour.ContourSet:21 matplotlib.contour.ContourSet:96
#: matplotlib.contour.QuadContourSet:63 of
msgid "**allsegs**"
msgstr "**allsegs**"

#: of
msgid "[level0segs, level1segs, ...]"
msgstr "[level0segs, level1segs, ±"

#: matplotlib.contour.ContourSet:15 matplotlib.contour.ContourSet:90
#: matplotlib.contour.QuadContourSet:57 of
msgid "List of all the polygon segments for all the *levels*. For contour lines ``len(allsegs) == len(levels)``, and for filled contour regions ``len(allsegs) = len(levels)-1``. The lists should look like ::"
msgstr "Lista de todos los segmentos de polígono para todos los *niveles*. Para las líneas de contorno ``len(allsegs) == len(levels)``, y para las regiones de contorno rellenadas ``len(allsegs) = len(levels)-1``. Las listas deben verse como ::"

#: matplotlib.contour.ContourSet:35 of
msgid "**allkinds** : ``None`` or [level0kinds, level1kinds, ...]"
msgstr "**todos** : ``Ninguno`` o [nivel0clases, nivel1clases,"

#: matplotlib.contour.ContourSet:34 of
msgid "None or [level0kinds, level1kinds, ...]"
msgstr "Ninguno o [nivel0clases, nivel1clases,"

#: matplotlib.contour.ContourSet:24 matplotlib.contour.ContourSet:99
#: matplotlib.contour.QuadContourSet:66 of
msgid "Optional list of all the polygon vertex kinds (code types), as described and used in Path. This is used to allow multiply- connected paths such as holes within filled polygons. If not ``None``, ``len(allkinds) == len(allsegs)``. The lists should look like ::"
msgstr "Lista opcional de todos los tipos de vértices de polígono (tipos de código), como se describe y utiliza en la ruta. Esto se utiliza para permitir rutas multiples conectadas como agujeros dentro de policones llenos. Si no, ``len(allkinds) == len(allsegs)``. Las listas deben verse como ::"

#: matplotlib.contour.ContourSet:33 matplotlib.contour.ContourSet:108
#: matplotlib.contour.QuadContourSet:75 of
msgid "If *allkinds* is not ``None``, usually all polygons for a particular contour level are grouped together so that ``level0segs = [polygon0]`` and ``level0kinds = [polygon0kinds]``."
msgstr "Si *todos* no es ``ninguno``, normalmente todos los polígonos para un nivel de contorno particular están agrupados de manera que ``level0segs = [polygon0]`` y ``level0kinds = [polygon0kinds]``."

#: matplotlib.contour.ContourSet:50 matplotlib.contour.ContourSet:127
#: matplotlib.contour.QuadContourSet:94 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.contour.ContourSet:38 matplotlib.contour.ContourSet:113
#: matplotlib.contour.QuadContourSet:80 of
msgid "Keyword arguments are as described in the docstring of `~.Axes.contour`."
msgstr "Los argumentos de palabra clave son como se describe en la docstring de `~.Axes.contour`."

#: matplotlib.contour.ContourSet matplotlib.contour.QuadContourSet of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.contour.ContourSet:55 matplotlib.contour.QuadContourSet:22 of
msgid "**ax** : `~matplotlib.axes.Axes`"
msgstr "**ax** : `~matplotlib.axes.Axes`"

#: matplotlib.contour.ContourSet:55 matplotlib.contour.QuadContourSet:22 of
msgid "The Axes object in which the contours are drawn."
msgstr "El objeto Axes en el que se dibujan los contornos."

#: matplotlib.contour.ContourSet:59 matplotlib.contour.QuadContourSet:26 of
msgid "**collections** : `.silent_list` of `.PathCollection`\\s"
msgstr "**colecciones** : `.silent_list` of `.PathCollection`s"

#: matplotlib.contour.ContourSet:58 matplotlib.contour.QuadContourSet:25 of
msgid "silent_list of PathCollections"
msgstr "silent_list de PathCollections"

#: matplotlib.contour.ContourSet:58 matplotlib.contour.QuadContourSet:25 of
msgid "The `.Artist`\\s representing the contour. This is a list of `.PathCollection`\\s for both line and filled contours."
msgstr "Los `.Artist`s que representan el contorno. Se trata de una lista de `.PathCollection`s para los contornos de línea y de relleno."

#: of
msgid "array"
msgstr "array"

#: matplotlib.contour.ContourSet:62 matplotlib.contour.QuadContourSet:29 of
msgid "The values of the contour levels."
msgstr "Los valores de los niveles de contorno."

#: matplotlib.contour.ContourSet:67 matplotlib.contour.QuadContourSet:34 of
msgid "**layers**"
msgstr "**Los niveles**"

#: matplotlib.contour.ContourSet:65 matplotlib.contour.QuadContourSet:32 of
msgid "Same as levels for line contours; half-way between levels for filled contours.  See ``ContourSet._process_colors``."
msgstr "Igual que los niveles para los contornos lineales; la mitad de los niveles para los contornos rellenos.  Ver ``ContourSet._process_colors``."

#: matplotlib.contour.ContourSet:73 matplotlib.contour.QuadContourSet:40 of
msgid "Draw contour lines or filled regions, depending on whether keyword arg *filled* is ``False`` (default) or ``True``."
msgstr "Dibujar líneas de contorno o regiones llenadas, dependiendo de si el argumento de palabra clave *llenado* es ``False`` (por defecto) o ``True``."

#: matplotlib.contour.ContourSet:76 matplotlib.contour.QuadContourSet:43 of
msgid "Call signature::"
msgstr "Firma de llamada::"

#: matplotlib.contour.ContourSet:83 matplotlib.contour.QuadContourSet:50 of
msgid "The `~.axes.Axes` object to draw on."
msgstr "El objeto `~.axes.Axes` en el que dibujar."

#: matplotlib.contour.ContourSet:110 matplotlib.contour.QuadContourSet:77 of
msgid "**allkinds**"
msgstr "**todos**"

#: of
msgid "[level0kinds, level1kinds, ...], optional"
msgstr "[nivel0clases, nivel1tipo, ...], opcional"

#: matplotlib.contour.ContourSet.changed:2 of
msgid "Call this whenever the mappable is changed to notify all the callbackSM listeners to the 'changed' signal."
msgstr "Llame esto cada vez que se cambie el mapeo para notificar a todos los oyentes de callbackSM a la señal 'cambiado'."

#: matplotlib.contour.ContourSet.find_nearest_contour:2 of
msgid "Find the point in the contour plot that is closest to ``(x, y)``."
msgstr "Encuentre el punto en la parcela de contorno más cercana a ``(x, y)``."

#: matplotlib.contour.ContourSet.find_nearest_contour:8 of
msgid "The reference point."
msgstr "El punto de referencia."

#: matplotlib.contour.ContourSet.find_nearest_contour:12 of
msgid "**indices**"
msgstr "**indices**"

#: of
msgid "list of int or None, default: None"
msgstr "lista de int o ninguno, por defecto: ninguno"

#: matplotlib.contour.ContourSet.find_nearest_contour:11 of
msgid "Indices of contour levels to consider.  If None (the default), all levels are considered."
msgstr "Indices de los niveles de contorno al más alto. Si ninguno (el predeterminado), todos los niveles son considerados."

#: matplotlib.contour.ContourSet.find_nearest_contour:17 of
msgid "**pixel**"
msgstr "**píxel**"

#: matplotlib.contour.ContourSet.find_nearest_contour:15 of
msgid "If *True*, measure distance in pixel (screen) space, which is useful for manual contour labeling; else, measure distance in axes space."
msgstr "Si es *True*, mide la distancia en el espacio pixel (pantalla), lo que es útil para la etiqueta de contorno manual; por otro lado, mide la distancia en el espacio de los ejes."

#: matplotlib.contour.ContourSet.find_nearest_contour:22 of
msgid "**contour** : `.Collection`"
msgstr "**contorno** : `.Collection`"

#: matplotlib.contour.ContourSet.find_nearest_contour:21 of
msgid "Collection"
msgstr "Colección"

#: matplotlib.contour.ContourSet.find_nearest_contour:22 of
msgid "The contour that is closest to ``(x, y)``."
msgstr "El contorno más cercano a ``(x, y)``."

#: matplotlib.contour.ContourSet.find_nearest_contour:26 of
msgid "**segment**"
msgstr "**segmento**"

#: of
msgid "int"
msgstr "int"

#: matplotlib.contour.ContourSet.find_nearest_contour:25 of
msgid "The index of the `.Path` in *contour* that is closest to ``(x, y)``."
msgstr "El índice del `.Path` en *contorno* que es más cercano a ``(x, y)``."

#: matplotlib.contour.ContourSet.find_nearest_contour:30 of
msgid "**index**"
msgstr "**índice**"

#: matplotlib.contour.ContourSet.find_nearest_contour:29 of
msgid "The index of the path segment in *segment* that is closest to ``(x, y)``."
msgstr "El índice del segmento de ruta en *segment* que es más cercano a ``(x, y)``."

#: matplotlib.contour.ContourSet.find_nearest_contour:33 of
msgid "**xmin, ymin**"
msgstr "**xmin, ymin**"

#: matplotlib.contour.ContourSet.find_nearest_contour:33 of
msgid "The point in the contour plot that is closest to ``(x, y)``."
msgstr "El punto en la trama de contorno que es más cercana a ``(x, y)``."

#: matplotlib.contour.ContourSet.find_nearest_contour:48 of
msgid "**d2**"
msgstr "**d2**"

#: matplotlib.contour.ContourSet.find_nearest_contour:36 of
msgid "The squared distance from ``(xmin, ymin)`` to ``(x, y)``."
msgstr "La distancia cuadrada de ``(xmin, ymin)`` a ``(x, y)``."

#: matplotlib.contour.ContourSet.get_alpha:2 of
msgid "Return alpha to be applied to all ContourSet artists."
msgstr "Retorna alfa para ser aplicada a todos los artistas de ContourSet ."

#: matplotlib.contour.ContourSet.get_transform:2 of
msgid "Return the :class:`~matplotlib.transforms.Transform` instance used by this ContourSet."
msgstr "Devuelve la instancia :class:`~matplotlib.transforms.Transform` usada por este ContourSet."

#: matplotlib.contour.ContourSet.legend_elements:2 of
msgid "Return a list of artists and labels suitable for passing through to `~.Axes.legend` which represent this ContourSet."
msgstr "Devuelve una lista de artistas y etiquetas adecuadas para pasar a `~.Axes.legend` que representan este ContourSet."

#: matplotlib.contour.ContourSet.legend_elements:5 of
msgid "The labels have the form \"0 < x <= 1\" stating the data ranges which the artists represent."
msgstr "Las etiquetas tienen el formulario \"0 < x <= 1\" indicando los rangos de datos que representan los artistas."

#: matplotlib.contour.ContourSet.legend_elements:11 of
msgid "**variable_name**"
msgstr "**nombre_variable**"

#: matplotlib.contour.ContourSet.legend_elements:11 of
msgid "The string used inside the inequality used on the labels."
msgstr "La cadena usada dentro de la desigualdad usada en las etiquetas."

#: matplotlib.contour.ContourSet.legend_elements:14 of
msgid "**str_format**"
msgstr "**str_format**"

#: of
msgid "function: float -> str"
msgstr "función: float -> str"

#: matplotlib.contour.ContourSet.legend_elements:14 of
msgid "Function used to format the numbers in the labels."
msgstr "Función utilizada para formatear los números en las etiquetas."

#: matplotlib.contour.ContourSet.legend_elements:19 of
msgid "**artists** : list[`.Artist`]"
msgstr "**artistas** : lista[`.Artist`]"

#: of
msgid "list["
msgstr "lista["

#: matplotlib.contour.ContourSet.legend_elements:19 of
msgid "A list of the artists."
msgstr "Una lista de los artistas."

#: matplotlib.contour.ContourSet.legend_elements:34 of
msgid "**labels**"
msgstr "**labels**"

#: of
msgid "list[str]"
msgstr "lista[str]"

#: matplotlib.contour.ContourSet.legend_elements:22 of
msgid "A list of the labels."
msgstr "Una lista de las etiquetas."

#: matplotlib.contour.ContourSet.set_alpha:2 of
msgid "Set the alpha blending value for all ContourSet artists. *alpha* must be between 0 (transparent) and 1 (opaque)."
msgstr "Establece el valor de mezcla alfa para todos los artistas ContourSet. *alpha* debe estar entre 0 (transparente) y 1 (opaque)."

#: matplotlib.contour.QuadContourSet:1 of
msgid "Bases: :py:class:`matplotlib.contour.ContourSet`"
msgstr "Bases: :py:class:`matplotlib.contour.ContourSet`"

#: matplotlib.contour.QuadContourSet:2 of
msgid "Create and store a set of contour lines or filled regions."
msgstr "Crea y almacena un conjunto de líneas de contorno o regiones llenas."

#: matplotlib.contour.QuadContourSet:4 of
msgid "This class is typically not instantiated directly by the user but by `~.Axes.contour` and `~.Axes.contourf`."
msgstr "Esta clase normalmente no es instanciada directamente por el usuario, sino por `~.Axes.contour` y `~.Axes.contourf`."

