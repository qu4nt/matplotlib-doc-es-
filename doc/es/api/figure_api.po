msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/figure_api.po\n"
"X-Crowdin-File-ID: 1782\n"
"Language: es_ES\n"

#: ../../api/figure_api.rst:3
msgid "``matplotlib.figure``"
msgstr "``matplotlib.figure``"

#: matplotlib.figure:1 of
msgid "`matplotlib.figure` implements the following classes:"
msgstr "`matplotlib.figure` implementa las siguientes clases:"

#: matplotlib.figure:5 of
msgid "`Figure`"
msgstr "`Figure`"

#: matplotlib.figure:4 of
msgid "Top level `~matplotlib.artist.Artist`, which holds all plot elements. Many methods are implemented in `FigureBase`."
msgstr "Nivel superior `~matplotlib.artist.Artist`, que contiene todos los elementos de la plot. Muchos métodos se implementan en `FigureBase`."

#: matplotlib.figure:10 of
msgid "`SubFigure`"
msgstr "`Subfigura`"

#: matplotlib.figure:8 of
msgid "A logical figure inside a figure, usually added to a figure (or parent `SubFigure`) with `Figure.add_subfigure` or `Figure.subfigures` methods (provisional API v3.4)."
msgstr "Una figura lógica dentro de una figura, habitualmente añadida a una figura (o a `SubFigure`) con los métodos `Figure.add_subfigure` o `Figure.subfigures` (API provisional v3.4)."

#: matplotlib.figure:13 of
msgid "`SubplotParams`"
msgstr "`SubplotParams`"

#: matplotlib.figure:13 of
msgid "Control the default spacing between subplots."
msgstr "Controla el espaciado por defecto entre subparcelas."

#: matplotlib.figure.Figure:2 of
msgid "The top level container for all the plot elements."
msgstr "El contenedor de nivel superior para todos los elementos de la parcela."

#: matplotlib.figure.Figure:4 of
msgid "The Figure instance supports callbacks through a *callbacks* attribute which is a `.CallbackRegistry` instance.  The events you can connect to are 'dpi_changed', and the callback will be called with ``func(fig)`` where fig is the `Figure` instance."
msgstr "La instancia de Figure soporta callbacks a través de un atributo *callbacks* que es una instancia de `.CallbackRegistry`. Los eventos a los que puedes conectar son 'dpi_changed', y el callback será llamado con ``func(fig)`` donde fig es la instancia de `Figure`."

#: matplotlib.figure.Figure of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.figure.Figure:24 of
msgid "**patch**"
msgstr "**parche**"

#: matplotlib.figure.Figure:24 of
msgid "The `.Rectangle` instance representing the figure background patch."
msgstr "La instancia `.Rectangle` que representa el parche de fondo de la figura."

#: matplotlib.figure.Figure:30 of
msgid "**suppressComposite**"
msgstr "**SupressComposite**"

#: matplotlib.figure.Figure:27 of
msgid "For multiple images, the figure will make composite images depending on the renderer option_image_nocomposite function.  If *suppressComposite* is a boolean, this will override the renderer."
msgstr "Para múltiples imágenes, la figura hará imágenes compuestas dependiendo de la función renderer option_image_nocomposite. Si *suppressComposite* es un valor booleano, esto anulará el renderizador."

#: matplotlib.artist.Artist.add_callback matplotlib.artist.Artist.draw
#: matplotlib.artist.Artist.findobj matplotlib.artist.Artist.get_cursor_data
#: matplotlib.artist.Artist.set_agg_filter matplotlib.artist.Artist.set_alpha
#: matplotlib.artist.Artist.set_animated matplotlib.artist.Artist.set_clip_box
#: matplotlib.artist.Artist.set_clip_on matplotlib.artist.Artist.set_clip_path
#: matplotlib.artist.Artist.set_figure matplotlib.artist.Artist.set_gid
#: matplotlib.artist.Artist.set_in_layout matplotlib.artist.Artist.set_label
#: matplotlib.artist.Artist.set_path_effects
#: matplotlib.artist.Artist.set_picker matplotlib.artist.Artist.set_rasterized
#: matplotlib.artist.Artist.set_sketch_params matplotlib.artist.Artist.set_snap
#: matplotlib.artist.Artist.set_transform matplotlib.artist.Artist.set_url
#: matplotlib.artist.Artist.set_visible matplotlib.artist.Artist.set_zorder
#: matplotlib.artist.Artist.update matplotlib.figure.Figure
#: matplotlib.figure.Figure.draw matplotlib.figure.Figure.figimage
#: matplotlib.figure.Figure.get_constrained_layout_pads
#: matplotlib.figure.Figure.ginput matplotlib.figure.Figure.savefig
#: matplotlib.figure.Figure.set_canvas
#: matplotlib.figure.Figure.set_constrained_layout
#: matplotlib.figure.Figure.set_constrained_layout_pads
#: matplotlib.figure.Figure.set_dpi matplotlib.figure.Figure.set_figheight
#: matplotlib.figure.Figure.set_figwidth
#: matplotlib.figure.Figure.set_size_inches
#: matplotlib.figure.Figure.set_tight_layout matplotlib.figure.Figure.show
#: matplotlib.figure.Figure.tight_layout
#: matplotlib.figure.FigureBase.add_artist
#: matplotlib.figure.FigureBase.add_axes
#: matplotlib.figure.FigureBase.add_gridspec
#: matplotlib.figure.FigureBase.add_subfigure
#: matplotlib.figure.FigureBase.add_subplot
#: matplotlib.figure.FigureBase.align_labels
#: matplotlib.figure.FigureBase.align_xlabels
#: matplotlib.figure.FigureBase.align_ylabels
#: matplotlib.figure.FigureBase.autofmt_xdate
#: matplotlib.figure.FigureBase.colorbar
#: matplotlib.figure.FigureBase.get_tightbbox
#: matplotlib.figure.FigureBase.legend
#: matplotlib.figure.FigureBase.set_edgecolor
#: matplotlib.figure.FigureBase.set_facecolor
#: matplotlib.figure.FigureBase.set_frameon
#: matplotlib.figure.FigureBase.set_linewidth
#: matplotlib.figure.FigureBase.subfigures
#: matplotlib.figure.FigureBase.subplot_mosaic
#: matplotlib.figure.FigureBase.subplots
#: matplotlib.figure.FigureBase.subplots_adjust
#: matplotlib.figure.FigureBase.suptitle matplotlib.figure.FigureBase.supxlabel
#: matplotlib.figure.FigureBase.supylabel matplotlib.figure.FigureBase.text
#: matplotlib.figure.SubFigure matplotlib.figure.SubFigure.draw
#: matplotlib.figure.SubFigure.get_constrained_layout_pads
#: matplotlib.figure.SubplotParams matplotlib.figure.figaspect of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.figure.Figure:42 of
msgid "**figsize** : 2-tuple of floats, default: :rc:`figure.figsize`"
msgstr "**tamaño de figura** : 2 tuplas de floats, por defecto: :rc:`figure.figsize`"

#: of
msgid "2-tuple of floats, default:"
msgstr "2-tuple de flotantes, por defecto:"

#: matplotlib.figure.Figure:42 of
msgid "Figure dimension ``(width, height)`` in inches."
msgstr "Dimensión de la figura ``(anchura, altura)`` en pulgadas."

#: matplotlib.figure.Figure:45 of
msgid "**dpi** : float, default: :rc:`figure.dpi`"
msgstr "**dpi** : float, por defecto: :rc:`figure.dpi`"

#: of
msgid "float, default:"
msgstr "flotante, por defecto:"

#: matplotlib.figure.Figure:45 of
msgid "Dots per inch."
msgstr "Puntos por pulgada."

#: matplotlib.figure.Figure:48 matplotlib.figure.SubFigure:49 of
msgid "**facecolor** : default: :rc:`figure.facecolor`"
msgstr "**facecolor** : por defecto: :rc:`figure.facecolor`"

#: of
msgid "default:"
msgstr "por defecto:"

#: matplotlib.figure.Figure:48 of
msgid "The figure patch facecolor."
msgstr "El parche de figura facecolor."

#: matplotlib.figure.Figure:51 matplotlib.figure.SubFigure:52 of
msgid "**edgecolor** : default: :rc:`figure.edgecolor`"
msgstr "**edgecolor** : default: :rc:`figure.edgecolor`"

#: matplotlib.figure.Figure:51 matplotlib.figure.SubFigure:52 of
msgid "The figure patch edge color."
msgstr "El color del parche de figura."

#: matplotlib.figure.Figure:55 matplotlib.figure.FigureBase.set_linewidth:21
#: matplotlib.figure.SubFigure:56 of
msgid "**linewidth**"
msgstr "**linewidth**"

#: matplotlib.artist.Figure.set:21 matplotlib.artist.Figure.set:24
#: matplotlib.artist.Figure.set:26 matplotlib.artist.Figure.set:42
#: matplotlib.artist.FigureBase.set:34 matplotlib.artist.SubFigure.set:34
#: matplotlib.figure.Figure:123 matplotlib.figure.Figure:126
#: matplotlib.figure.Figure:128 matplotlib.figure.Figure:144
#: matplotlib.figure.FigureBase.add_axes:110
#: matplotlib.figure.FigureBase.add_subplot:130
#: matplotlib.figure.FigureBase.gca:69 matplotlib.figure.FigureBase.text:79
#: matplotlib.figure.FigureBase.text:80 matplotlib.figure.FigureBase.text:81
#: matplotlib.figure.SubFigure:95 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.figure.Figure:54 matplotlib.figure.SubFigure:55 of
msgid "The linewidth of the frame (i.e. the edge linewidth of the figure patch)."
msgstr "El ancho de línea del marco (es decir, el ancho de línea del parche de figura)."

#: matplotlib.figure.Figure:58 matplotlib.figure.SubFigure:62 of
msgid "**frameon** : bool, default: :rc:`figure.frameon`"
msgstr "**frameon** : bool, por defecto: :rc:`figure.frameon`"

#: of
msgid "bool, default:"
msgstr "bool, default:"

#: matplotlib.figure.Figure:58 matplotlib.figure.SubFigure:59 of
msgid "If ``False``, suppress drawing the figure background patch."
msgstr "Si es ``False``, reprime el dibujo del parche de fondo de la figura."

#: matplotlib.figure.Figure:62 of
msgid "**subplotpars** : `SubplotParams`"
msgstr "**subplotpars** : `SubplotParams`"

#: matplotlib.figure.Figure:61 of
msgid "SubplotParams"
msgstr "SubplotParams"

#: matplotlib.figure.Figure:61 of
msgid "Subplot parameters. If not given, the default subplot parameters :rc:`figure.subplot.*` are used."
msgstr "Parámetros de subplot. Si no se proporcionan, se utilizan los parámetros de subplot :rc:`figure.subplot.*`."

#: matplotlib.figure.Figure:71 of
msgid "**tight_layout** : bool or dict, default: :rc:`figure.autolayout`"
msgstr "**tight_layout** : bool o dict, por defecto: :rc:`figure.autolayout`"

#: of
msgid "bool or dict, default:"
msgstr "libro o diccionario, por defecto:"

#: matplotlib.figure.Figure:65 of
msgid "Whether to use the tight layout mechanism. See `.set_tight_layout`."
msgstr "Si usar el mecanismo de diseño apretado. Vea `.set_tight_layout`."

#: matplotlib.figure.Figure:67 matplotlib.figure.Figure:76
#: matplotlib.figure.FigureBase.legend:57 of
msgid "Discouraged"
msgstr "Desanimado"

#: matplotlib.figure.Figure:69 of
msgid "The use of this parameter is discouraged. Please use ``layout='tight'`` instead for the common case of ``tight_layout=True`` and use `.set_tight_layout` otherwise."
msgstr "El uso de este parámetro no es recomendado. Por favor, use ``layout='tight'`` en su lugar para el caso común de ``tight_layout=True`` y use `.set_tight_layout` de otro modo."

#: matplotlib.figure.Figure:79 of
msgid "**constrained_layout** : bool, default: :rc:`figure.constrained_layout.use`"
msgstr "**constrained_layout** : bool, default: :rc:`figure.constrained_layout.use`"

#: matplotlib.figure.Figure:74 of
msgid "This is equal to ``layout='constrained'``."
msgstr "Esto es igual a ``layout='restringido'``."

#: matplotlib.figure.Figure:78 of
msgid "The use of this parameter is discouraged. Please use ``layout='constrained'`` instead."
msgstr "El uso de este parámetro está desaconsejado. Por favor use ``layout='restringido'`` en su lugar."

#: matplotlib.figure.Figure:103 of
msgid "**layout**"
msgstr "**diseño**"

#: of
msgid "{'constrained', 'tight'}, optional"
msgstr "{'constrained', 'tight'}, opcional"

#: matplotlib.figure.Figure:82 of
msgid "The layout mechanism for positioning of plot elements. Supported values:"
msgstr "Mecanismo de distribución para posicionar los elementos de la gráfica. Valores soportados:"

#: matplotlib.figure.Figure:85 of
msgid "'constrained': The constrained layout solver usually gives the best layout results and is thus recommended. However, it is computationally expensive and can be slow for complex figures with many elements."
msgstr "'restringido': El solucionador de diseño restringido normalmente da los mejores resultados de diseño y por lo tanto se recomienda. Sin embargo, es computacionalmente caro y puede ser lento para figuras complejas con muchos elementos."

#: matplotlib.figure.Figure:90 of
msgid "See :doc:`/tutorials/intermediate/constrainedlayout_guide` for examples."
msgstr "Vea :doc:`/tutorials/intermediate/constrainedlayout_guide` para ver ejemplos."

#: matplotlib.figure.Figure:93 of
msgid "'tight': Use the tight layout mechanism. This is a relatively simple algorithm, that adjusts the subplot parameters so that decorations like tick labels, axis labels and titles have enough space. See `.Figure.set_tight_layout` for further details."
msgstr "'tight': Utilice el mecanismo de diseño apretado. Este es un algoritmo relativamente simple, que ajusta los parámetros de la subparcela, de modo que las decoraciones como etiquetas de tick, etiquetas de ejes y títulos tienen suficiente espacio. Vea `.Figure.set_tight_layout` para más detalles."

#: matplotlib.figure.Figure:98 of
msgid "If not given, fall back to using the parameters *tight_layout* and *constrained_layout*, including their config defaults :rc:`figure.autolayout` and :rc:`figure.constrained_layout.use`."
msgstr "Si no se proporciona, vuelve a usar los parámetros *tight_layout* y *constrained_layout*, incluyendo su configuración predeterminada :rc:`figure.autolayout` y :rc:`figure.constrained_layout.use`."

#: matplotlib.figure.Figure matplotlib.figure.Figure.figimage
#: matplotlib.figure.Figure.savefig matplotlib.figure.FigureBase.add_axes
#: matplotlib.figure.FigureBase.add_gridspec
#: matplotlib.figure.FigureBase.add_subfigure
#: matplotlib.figure.FigureBase.add_subplot matplotlib.figure.FigureBase.legend
#: matplotlib.figure.FigureBase.suptitle matplotlib.figure.FigureBase.supxlabel
#: matplotlib.figure.FigureBase.supylabel matplotlib.figure.FigureBase.text
#: matplotlib.figure.SubFigure of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.figure.Figure:154 of
msgid "**\\*\\*kwargs** : `.Figure` properties, optional"
msgstr "**\\*\\*kwargs** : propiedades `.Figure`, opcional"

#: matplotlib.figure.Figure:153 of
msgid "Figure properties, optional"
msgstr "Propiedades de la Figura, opcional"

#: matplotlib.artist.Figure.set:10 matplotlib.artist.FigureBase.set:10
#: matplotlib.artist.SubFigure.set:10 matplotlib.figure.Figure:112
#: matplotlib.figure.FigureBase.add_axes:59
#: matplotlib.figure.FigureBase.add_subplot:79
#: matplotlib.figure.FigureBase.colorbar:80
#: matplotlib.figure.FigureBase.colorbar:128
#: matplotlib.figure.FigureBase.gca:18 matplotlib.figure.FigureBase.text:36
#: matplotlib.figure.SubFigure:71 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.Figure.set:10 matplotlib.artist.FigureBase.set:10
#: matplotlib.artist.SubFigure.set:10 matplotlib.figure.Figure:112
#: matplotlib.figure.FigureBase.add_axes:59
#: matplotlib.figure.FigureBase.add_subplot:79
#: matplotlib.figure.FigureBase.colorbar:80
#: matplotlib.figure.FigureBase.colorbar:128
#: matplotlib.figure.FigureBase.gca:18 matplotlib.figure.FigureBase.text:36
#: matplotlib.figure.SubFigure:71 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.Figure.set:12 matplotlib.artist.FigureBase.set:12
#: matplotlib.artist.SubFigure.set:12 matplotlib.figure.Figure:114
#: matplotlib.figure.FigureBase.add_axes:62
#: matplotlib.figure.FigureBase.add_subplot:82
#: matplotlib.figure.FigureBase.gca:21 matplotlib.figure.FigureBase.text:38
#: matplotlib.figure.SubFigure:73 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.Figure.set:12 matplotlib.artist.FigureBase.set:12
#: matplotlib.artist.SubFigure.set:12 matplotlib.figure.Figure:114
#: matplotlib.figure.FigureBase.add_axes:62
#: matplotlib.figure.FigureBase.add_subplot:82
#: matplotlib.figure.FigureBase.gca:21 matplotlib.figure.FigureBase.text:38
#: matplotlib.figure.SubFigure:73 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.Figure.set:13 matplotlib.artist.FigureBase.set:13
#: matplotlib.artist.SubFigure.set:13 matplotlib.figure.Figure:115
#: matplotlib.figure.FigureBase.add_axes:63
#: matplotlib.figure.FigureBase.add_subplot:83
#: matplotlib.figure.FigureBase.gca:22 matplotlib.figure.FigureBase.text:39
#: matplotlib.figure.SubFigure:74 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.artist.Figure.set:13 matplotlib.artist.FigureBase.set:13
#: matplotlib.artist.SubFigure.set:13 matplotlib.figure.Figure:115
#: matplotlib.figure.FigureBase.add_axes:63
#: matplotlib.figure.FigureBase.add_subplot:83
#: matplotlib.figure.FigureBase.gca:22 matplotlib.figure.FigureBase.text:39
#: matplotlib.figure.SubFigure:74 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.artist.Figure.set:14 matplotlib.artist.FigureBase.set:14
#: matplotlib.artist.SubFigure.set:14 matplotlib.figure.Figure:116
#: matplotlib.figure.FigureBase.add_axes:65
#: matplotlib.figure.FigureBase.add_subplot:85
#: matplotlib.figure.FigureBase.gca:24 matplotlib.figure.FigureBase.text:40
#: matplotlib.figure.SubFigure:75 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.Figure.set:14 matplotlib.artist.Figure.set:17
#: matplotlib.artist.Figure.set:27 matplotlib.artist.Figure.set:29
#: matplotlib.artist.Figure.set:34 matplotlib.artist.Figure.set:41
#: matplotlib.artist.FigureBase.set:14 matplotlib.artist.FigureBase.set:16
#: matplotlib.artist.FigureBase.set:21 matplotlib.artist.FigureBase.set:23
#: matplotlib.artist.FigureBase.set:28 matplotlib.artist.FigureBase.set:33
#: matplotlib.artist.SubFigure.set:14 matplotlib.artist.SubFigure.set:16
#: matplotlib.artist.SubFigure.set:21 matplotlib.artist.SubFigure.set:23
#: matplotlib.artist.SubFigure.set:28 matplotlib.artist.SubFigure.set:33
#: matplotlib.figure.Figure:116 matplotlib.figure.Figure:119
#: matplotlib.figure.Figure:129 matplotlib.figure.Figure:131
#: matplotlib.figure.Figure:136 matplotlib.figure.Figure:143
#: matplotlib.figure.FigureBase.add_axes:65
#: matplotlib.figure.FigureBase.add_axes:67
#: matplotlib.figure.FigureBase.add_axes:68
#: matplotlib.figure.FigureBase.add_axes:69
#: matplotlib.figure.FigureBase.add_axes:74
#: matplotlib.figure.FigureBase.add_axes:78
#: matplotlib.figure.FigureBase.add_axes:80
#: matplotlib.figure.FigureBase.add_axes:82
#: matplotlib.figure.FigureBase.add_axes:89
#: matplotlib.figure.FigureBase.add_axes:95
#: matplotlib.figure.FigureBase.add_subplot:85
#: matplotlib.figure.FigureBase.add_subplot:87
#: matplotlib.figure.FigureBase.add_subplot:88
#: matplotlib.figure.FigureBase.add_subplot:89
#: matplotlib.figure.FigureBase.add_subplot:94
#: matplotlib.figure.FigureBase.add_subplot:98
#: matplotlib.figure.FigureBase.add_subplot:100
#: matplotlib.figure.FigureBase.add_subplot:102
#: matplotlib.figure.FigureBase.add_subplot:109
#: matplotlib.figure.FigureBase.add_subplot:115
#: matplotlib.figure.FigureBase.gca:24 matplotlib.figure.FigureBase.gca:26
#: matplotlib.figure.FigureBase.gca:27 matplotlib.figure.FigureBase.gca:28
#: matplotlib.figure.FigureBase.gca:33 matplotlib.figure.FigureBase.gca:37
#: matplotlib.figure.FigureBase.gca:39 matplotlib.figure.FigureBase.gca:41
#: matplotlib.figure.FigureBase.gca:48 matplotlib.figure.FigureBase.gca:54
#: matplotlib.figure.FigureBase.text:40 matplotlib.figure.FigureBase.text:57
#: matplotlib.figure.FigureBase.text:62 matplotlib.figure.FigureBase.text:66
#: matplotlib.figure.FigureBase.text:73 matplotlib.figure.FigureBase.text:77
#: matplotlib.figure.FigureBase.text:78 matplotlib.figure.SubFigure:75
#: matplotlib.figure.SubFigure:77 matplotlib.figure.SubFigure:82
#: matplotlib.figure.SubFigure:84 matplotlib.figure.SubFigure:89
#: matplotlib.figure.SubFigure:94 of
msgid "bool"
msgstr "bool"

#: matplotlib.artist.Figure.set:15 matplotlib.figure.Figure:117 of
msgid ":meth:`canvas <matplotlib.figure.Figure.set_canvas>`"
msgstr ":meth:`lienzo <matplotlib.figure.Figure.set_canvas>`"

#: matplotlib.artist.Figure.set:15 matplotlib.figure.Figure:117 of
msgid "FigureCanvas"
msgstr "Lienzo de figura"

#: matplotlib.artist.Figure.set:16 matplotlib.artist.FigureBase.set:15
#: matplotlib.artist.SubFigure.set:15 matplotlib.figure.Figure:118
#: matplotlib.figure.FigureBase.add_axes:73
#: matplotlib.figure.FigureBase.add_subplot:93
#: matplotlib.figure.FigureBase.gca:32 matplotlib.figure.FigureBase.text:43
#: matplotlib.figure.SubFigure:76 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.Figure.set:16 matplotlib.artist.FigureBase.set:15
#: matplotlib.artist.SubFigure.set:15 matplotlib.figure.Figure:118
#: matplotlib.figure.FigureBase.add_axes:73
#: matplotlib.figure.FigureBase.add_subplot:93
#: matplotlib.figure.FigureBase.gca:32 matplotlib.figure.SubFigure:76 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.artist.Figure.set:17 matplotlib.artist.FigureBase.set:16
#: matplotlib.artist.SubFigure.set:16 matplotlib.figure.Figure:119
#: matplotlib.figure.FigureBase.add_axes:74
#: matplotlib.figure.FigureBase.add_subplot:94
#: matplotlib.figure.FigureBase.gca:33 matplotlib.figure.FigureBase.text:44
#: matplotlib.figure.SubFigure:77 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.Figure.set:18 matplotlib.artist.FigureBase.set:17
#: matplotlib.artist.SubFigure.set:17 matplotlib.figure.Figure:120
#: matplotlib.figure.FigureBase.add_axes:75
#: matplotlib.figure.FigureBase.add_subplot:95
#: matplotlib.figure.FigureBase.gca:34 matplotlib.figure.FigureBase.text:45
#: matplotlib.figure.SubFigure:78 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.Figure.set:18 matplotlib.artist.FigureBase.set:17
#: matplotlib.artist.SubFigure.set:17 matplotlib.figure.Figure:120
#: matplotlib.figure.FigureBase.add_axes:75
#: matplotlib.figure.FigureBase.add_subplot:95
#: matplotlib.figure.FigureBase.gca:34 matplotlib.figure.SubFigure:78 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.artist.Figure.set:19 matplotlib.figure.Figure:121 of
msgid ":meth:`constrained_layout <matplotlib.figure.Figure.set_constrained_layout>`"
msgstr ":meth:`constrained_layout <matplotlib.figure.Figure.set_constrained_layout>`"

#: matplotlib.artist.Figure.set:19 matplotlib.figure.Figure:121 of
msgid "bool or dict or None"
msgstr "libro o dictado o ninguno"

#: matplotlib.artist.Figure.set:20 matplotlib.figure.Figure:122 of
msgid ":meth:`constrained_layout_pads <matplotlib.figure.Figure.set_constrained_layout_pads>`"
msgstr ":meth:`constrained_layout_pads <matplotlib.figure.Figure.set_constrained_layout_pads>`"

#: matplotlib.artist.Figure.set:20 matplotlib.figure.Figure:122 of
msgid "float, default: :rc:`figure.constrained_layout.w_pad`"
msgstr "float, por defecto: :rc:`figure.constrained_layout.w_pad`"

#: matplotlib.artist.Figure.set:21 matplotlib.figure.Figure:123 of
msgid ":meth:`dpi <matplotlib.figure.Figure.set_dpi>`"
msgstr ":meth:`dpi <matplotlib.figure.Figure.set_dpi>`"

#: matplotlib.artist.Figure.set:22 matplotlib.artist.FigureBase.set:18
#: matplotlib.artist.SubFigure.set:18 matplotlib.figure.Figure:124
#: matplotlib.figure.SubFigure:79 of
msgid ":meth:`edgecolor <matplotlib.figure.FigureBase.set_edgecolor>`"
msgstr ":meth:`edgecolor <matplotlib.figure.FigureBase.set_edgecolor>`"

#: matplotlib.artist.Figure.set:22 matplotlib.artist.Figure.set:23
#: matplotlib.artist.FigureBase.set:18 matplotlib.artist.FigureBase.set:19
#: matplotlib.artist.SubFigure.set:18 matplotlib.artist.SubFigure.set:19
#: matplotlib.figure.Figure:124 matplotlib.figure.Figure:125
#: matplotlib.figure.FigureBase.add_axes:76
#: matplotlib.figure.FigureBase.add_subplot:96
#: matplotlib.figure.FigureBase.gca:35 matplotlib.figure.FigureBase.text:41
#: matplotlib.figure.FigureBase.text:46 matplotlib.figure.SubFigure:79
#: matplotlib.figure.SubFigure:80 of
msgid "color"
msgstr "color"

#: matplotlib.artist.Figure.set:23 matplotlib.artist.FigureBase.set:19
#: matplotlib.artist.SubFigure.set:19 matplotlib.figure.Figure:125
#: matplotlib.figure.SubFigure:80 of
msgid ":meth:`facecolor <matplotlib.figure.FigureBase.set_facecolor>`"
msgstr ":meth:`facecolor <matplotlib.figure.FigureBase.set_facecolor>`"

#: matplotlib.artist.Figure.set:24 matplotlib.figure.Figure:126 of
msgid ":meth:`figheight <matplotlib.figure.Figure.set_figheight>`"
msgstr ":meth:`fighocho <matplotlib.figure.Figure.set_figheight>`"

#: matplotlib.artist.Figure.set:25 matplotlib.artist.FigureBase.set:20
#: matplotlib.artist.SubFigure.set:20 matplotlib.figure.Figure:127
#: matplotlib.figure.FigureBase.add_axes:77
#: matplotlib.figure.FigureBase.add_subplot:97
#: matplotlib.figure.FigureBase.gca:36 matplotlib.figure.FigureBase.text:47
#: matplotlib.figure.SubFigure:81 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.Figure.set:25 matplotlib.artist.FigureBase.set:20
#: matplotlib.artist.SubFigure.set:20 matplotlib.figure.Figure:127
#: matplotlib.figure.FigureBase.add_axes:77
#: matplotlib.figure.FigureBase.add_subplot:97
#: matplotlib.figure.FigureBase.gca:36 matplotlib.figure.FigureBase.text:47
#: matplotlib.figure.SubFigure:81 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.artist.Figure.set:26 matplotlib.figure.Figure:128 of
msgid ":meth:`figwidth <matplotlib.figure.Figure.set_figwidth>`"
msgstr ":meth:`figwidth <matplotlib.figure.Figure.set_figwidth>`"

#: matplotlib.artist.Figure.set:27 matplotlib.artist.FigureBase.set:21
#: matplotlib.artist.SubFigure.set:21 matplotlib.figure.Figure:129
#: matplotlib.figure.SubFigure:82 of
msgid ":meth:`frameon <matplotlib.figure.FigureBase.set_frameon>`"
msgstr ":meth:`frameon <matplotlib.figure.FigureBase.set_frameon>`"

#: matplotlib.artist.Figure.set:28 matplotlib.artist.FigureBase.set:22
#: matplotlib.artist.SubFigure.set:22 matplotlib.figure.Figure:130
#: matplotlib.figure.FigureBase.add_axes:79
#: matplotlib.figure.FigureBase.add_subplot:99
#: matplotlib.figure.FigureBase.gca:38 matplotlib.figure.FigureBase.text:55
#: matplotlib.figure.SubFigure:83 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.Figure.set:28 matplotlib.artist.Figure.set:40
#: matplotlib.artist.FigureBase.set:22 matplotlib.artist.FigureBase.set:32
#: matplotlib.artist.SubFigure.set:22 matplotlib.artist.SubFigure.set:32
#: matplotlib.figure.Figure:130 matplotlib.figure.Figure:142
#: matplotlib.figure.FigureBase.add_axes:79
#: matplotlib.figure.FigureBase.add_axes:92
#: matplotlib.figure.FigureBase.add_axes:94
#: matplotlib.figure.FigureBase.add_axes:97
#: matplotlib.figure.FigureBase.add_axes:104
#: matplotlib.figure.FigureBase.add_subplot:99
#: matplotlib.figure.FigureBase.add_subplot:112
#: matplotlib.figure.FigureBase.add_subplot:114
#: matplotlib.figure.FigureBase.add_subplot:117
#: matplotlib.figure.FigureBase.add_subplot:124
#: matplotlib.figure.FigureBase.gca:38 matplotlib.figure.FigureBase.gca:51
#: matplotlib.figure.FigureBase.gca:53 matplotlib.figure.FigureBase.gca:56
#: matplotlib.figure.FigureBase.gca:63 matplotlib.figure.FigureBase.text:55
#: matplotlib.figure.FigureBase.text:60 matplotlib.figure.FigureBase.text:74
#: matplotlib.figure.SubFigure:83 matplotlib.figure.SubFigure:93 of
msgid "str"
msgstr "str"

#: matplotlib.artist.Figure.set:29 matplotlib.artist.FigureBase.set:23
#: matplotlib.artist.SubFigure.set:23 matplotlib.figure.Figure:131
#: matplotlib.figure.FigureBase.add_axes:80
#: matplotlib.figure.FigureBase.add_subplot:100
#: matplotlib.figure.FigureBase.gca:39 matplotlib.figure.FigureBase.text:57
#: matplotlib.figure.SubFigure:84 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.Figure.set:30 matplotlib.artist.FigureBase.set:24
#: matplotlib.artist.SubFigure.set:24 matplotlib.figure.Figure:132
#: matplotlib.figure.FigureBase.add_axes:81
#: matplotlib.figure.FigureBase.add_subplot:101
#: matplotlib.figure.FigureBase.gca:40 matplotlib.figure.FigureBase.text:58
#: matplotlib.figure.SubFigure:85 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.Figure.set:30 matplotlib.artist.FigureBase.set:24
#: matplotlib.artist.SubFigure.set:24 matplotlib.figure.Figure:132
#: matplotlib.figure.FigureBase.add_axes:81
#: matplotlib.figure.FigureBase.add_subplot:101
#: matplotlib.figure.FigureBase.gca:40 matplotlib.figure.FigureBase.text:58
#: matplotlib.figure.FigureBase.text:71 matplotlib.figure.SubFigure:85 of
msgid "object"
msgstr "object"

#: matplotlib.artist.Figure.set:31 matplotlib.artist.FigureBase.set:25
#: matplotlib.artist.SubFigure.set:25 matplotlib.figure.Figure:133
#: matplotlib.figure.SubFigure:86 of
msgid ":meth:`linewidth <matplotlib.figure.FigureBase.set_linewidth>`"
msgstr ":meth:`linewidth <matplotlib.figure.FigureBase.set_linewidth>`"

#: matplotlib.artist.Figure.set:31 matplotlib.artist.FigureBase.set:25
#: matplotlib.artist.SubFigure.set:25 matplotlib.figure.Figure:133
#: matplotlib.figure.SubFigure:86 of
msgid "number"
msgstr "número"

#: matplotlib.artist.Figure.set:32 matplotlib.artist.FigureBase.set:26
#: matplotlib.artist.SubFigure.set:26 matplotlib.figure.Figure:134
#: matplotlib.figure.FigureBase.add_axes:84
#: matplotlib.figure.FigureBase.add_subplot:104
#: matplotlib.figure.FigureBase.gca:43 matplotlib.figure.FigureBase.text:63
#: matplotlib.figure.SubFigure:87 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.Figure.set:32 matplotlib.artist.FigureBase.set:26
#: matplotlib.artist.SubFigure.set:26 matplotlib.figure.Figure:134
#: matplotlib.figure.FigureBase.add_axes:84
#: matplotlib.figure.FigureBase.add_subplot:104
#: matplotlib.figure.FigureBase.gca:43 matplotlib.figure.FigureBase.text:63
#: matplotlib.figure.SubFigure:87 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.Figure.set:33 matplotlib.artist.FigureBase.set:27
#: matplotlib.artist.SubFigure.set:27 matplotlib.figure.Figure:135
#: matplotlib.figure.FigureBase.add_axes:85
#: matplotlib.figure.FigureBase.add_subplot:105
#: matplotlib.figure.FigureBase.gca:44 matplotlib.figure.FigureBase.text:64
#: matplotlib.figure.SubFigure:88 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.Figure.set:33 matplotlib.artist.FigureBase.set:27
#: matplotlib.artist.SubFigure.set:27 matplotlib.figure.Figure:135
#: matplotlib.figure.FigureBase.add_axes:85
#: matplotlib.figure.FigureBase.add_subplot:105
#: matplotlib.figure.FigureBase.gca:44 matplotlib.figure.FigureBase.text:64
#: matplotlib.figure.SubFigure:88 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.Figure.set:34 matplotlib.artist.FigureBase.set:28
#: matplotlib.artist.SubFigure.set:28 matplotlib.figure.Figure:136
#: matplotlib.figure.FigureBase.add_axes:89
#: matplotlib.figure.FigureBase.add_subplot:109
#: matplotlib.figure.FigureBase.gca:48 matplotlib.figure.FigureBase.text:66
#: matplotlib.figure.SubFigure:89 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.Figure.set:35 matplotlib.figure.Figure:137 of
msgid ":meth:`size_inches <matplotlib.figure.Figure.set_size_inches>`"
msgstr ":meth:`tamaño_pulgadas <matplotlib.figure.Figure.set_size_inches>`"

#: matplotlib.artist.Figure.set:35 matplotlib.figure.Figure:137 of
msgid "(float, float) or float"
msgstr "(flotante, flotante) o flotante"

#: matplotlib.artist.Figure.set:36 matplotlib.artist.FigureBase.set:29
#: matplotlib.artist.SubFigure.set:29 matplotlib.figure.Figure:138
#: matplotlib.figure.FigureBase.add_axes:90
#: matplotlib.figure.FigureBase.add_subplot:110
#: matplotlib.figure.FigureBase.gca:49 matplotlib.figure.FigureBase.text:69
#: matplotlib.figure.SubFigure:90 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.Figure.set:36 matplotlib.artist.FigureBase.set:29
#: matplotlib.artist.SubFigure.set:29 matplotlib.figure.Figure:138
#: matplotlib.figure.FigureBase.add_axes:90
#: matplotlib.figure.FigureBase.add_subplot:110
#: matplotlib.figure.FigureBase.gca:49 matplotlib.figure.FigureBase.text:69
#: matplotlib.figure.SubFigure:90 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.Figure.set:37 matplotlib.artist.FigureBase.set:30
#: matplotlib.artist.SubFigure.set:30 matplotlib.figure.Figure:139
#: matplotlib.figure.FigureBase.add_axes:91
#: matplotlib.figure.FigureBase.add_subplot:111
#: matplotlib.figure.FigureBase.gca:50 matplotlib.figure.FigureBase.text:70
#: matplotlib.figure.SubFigure:91 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.Figure.set:37 matplotlib.artist.FigureBase.set:30
#: matplotlib.artist.SubFigure.set:30 matplotlib.figure.Figure:139
#: matplotlib.figure.FigureBase.add_axes:91
#: matplotlib.figure.FigureBase.add_subplot:111
#: matplotlib.figure.FigureBase.gca:50 matplotlib.figure.FigureBase.text:70
#: matplotlib.figure.FigureBase.text:75 matplotlib.figure.SubFigure:91 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.Figure.set:38 matplotlib.figure.Figure:140 of
msgid ":meth:`tight_layout <matplotlib.figure.Figure.set_tight_layout>`"
msgstr ":meth:`tight_layout <matplotlib.figure.Figure.set_tight_layout>`"

#: matplotlib.artist.Figure.set:38 matplotlib.figure.Figure:140 of
msgid "bool or dict with keys \"pad\", \"w_pad\", \"h_pad\", \"rect\" or None"
msgstr "libro o dictado con teclas \"pad\", \"w_pad\", \"h_pad\", \"rect\" o ninguno"

#: matplotlib.artist.Figure.set:39 matplotlib.artist.FigureBase.set:31
#: matplotlib.artist.SubFigure.set:31 matplotlib.figure.Figure:141
#: matplotlib.figure.FigureBase.add_axes:93
#: matplotlib.figure.FigureBase.add_subplot:113
#: matplotlib.figure.FigureBase.gca:52 matplotlib.figure.FigureBase.text:72
#: matplotlib.figure.SubFigure:92 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.Figure.set:39 matplotlib.artist.FigureBase.set:31
#: matplotlib.artist.SubFigure.set:31 matplotlib.figure.Figure:141
#: matplotlib.figure.FigureBase.add_axes:93
#: matplotlib.figure.FigureBase.add_subplot:113
#: matplotlib.figure.FigureBase.gca:52 matplotlib.figure.FigureBase.text:72
#: matplotlib.figure.SubFigure:92 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.artist.Figure.set:40 matplotlib.artist.FigureBase.set:32
#: matplotlib.artist.SubFigure.set:32 matplotlib.figure.Figure:142
#: matplotlib.figure.FigureBase.add_axes:94
#: matplotlib.figure.FigureBase.add_subplot:114
#: matplotlib.figure.FigureBase.gca:53 matplotlib.figure.FigureBase.text:74
#: matplotlib.figure.SubFigure:93 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.Figure.set:41 matplotlib.artist.FigureBase.set:33
#: matplotlib.artist.SubFigure.set:33 matplotlib.figure.Figure:143
#: matplotlib.figure.FigureBase.add_axes:95
#: matplotlib.figure.FigureBase.add_subplot:115
#: matplotlib.figure.FigureBase.gca:54 matplotlib.figure.FigureBase.text:77
#: matplotlib.figure.SubFigure:94 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.Figure.set:42 matplotlib.artist.FigureBase.set:34
#: matplotlib.artist.SubFigure.set:34 matplotlib.figure.Figure:144
#: matplotlib.figure.FigureBase.add_axes:110
#: matplotlib.figure.FigureBase.add_subplot:130
#: matplotlib.figure.FigureBase.gca:69 matplotlib.figure.FigureBase.text:81
#: matplotlib.figure.SubFigure:95 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.figure.FigureBase.add_artist:2 of
msgid "Add an `.Artist` to the figure."
msgstr "Agrega un `.Artist` a la figura."

#: matplotlib.figure.FigureBase.add_artist:4 of
msgid "Usually artists are added to Axes objects using `.Axes.add_artist`; this method can be used in the rare cases where one needs to add artists directly to the figure instead."
msgstr "Normalmente los artistas se añaden a objetos de ejes usando `.Axes. dd_artist`; este método se puede utilizar en los casos raros donde se necesita añadir artistas directamente a la figura en su lugar."

#: matplotlib.figure.FigureBase.add_artist:13 of
msgid "**artist** : `~matplotlib.artist.Artist`"
msgstr "**artist** : `~matplotlib.artist.Artist`"

#: matplotlib.figure.FigureBase.add_artist:12 of
msgid "Artist"
msgstr "Artist"

#: matplotlib.figure.FigureBase.add_artist:11 of
msgid "The artist to add to the figure. If the added artist has no transform previously set, its transform will be set to ``figure.transSubfigure``."
msgstr "El artista a añadir a la figura. Si el artista añadido no tiene ninguna transformación previamente establecida, su transformación se establecerá en ``figure.transSubfigure``."

#: matplotlib.figure.FigureBase.add_artist:16 of
msgid "**clip**"
msgstr "**clip**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.figure.FigureBase.add_artist:16 of
msgid "Whether the added artist should be clipped by the figure patch."
msgstr "Si el artista añadido debe ser recortado por el parche de figura."

#: matplotlib.artist.Artist.add_callback matplotlib.artist.Artist.findobj
#: matplotlib.artist.Artist.get_sketch_params
#: matplotlib.figure.Figure.execute_constrained_layout
#: matplotlib.figure.Figure.figimage matplotlib.figure.Figure.get_size_inches
#: matplotlib.figure.Figure.ginput matplotlib.figure.FigureBase.add_artist
#: matplotlib.figure.FigureBase.add_axes
#: matplotlib.figure.FigureBase.add_gridspec
#: matplotlib.figure.FigureBase.add_subfigure
#: matplotlib.figure.FigureBase.add_subplot
#: matplotlib.figure.FigureBase.colorbar matplotlib.figure.FigureBase.contains
#: matplotlib.figure.FigureBase.get_tightbbox
#: matplotlib.figure.FigureBase.legend
#: matplotlib.figure.FigureBase.subplot_mosaic
#: matplotlib.figure.FigureBase.subplots matplotlib.figure.FigureBase.suptitle
#: matplotlib.figure.FigureBase.supxlabel
#: matplotlib.figure.FigureBase.supylabel matplotlib.figure.FigureBase.text
#: matplotlib.figure.figaspect of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.figure.FigureBase.add_artist:33 of
msgid "`~matplotlib.artist.Artist`"
msgstr "`~matplotlib.artist.Artist`"

#: matplotlib.figure.FigureBase.add_artist:21 of
msgid "The added artist."
msgstr "El artista añadido."

#: matplotlib.figure.FigureBase.add_axes:2 of
msgid "Add an Axes to the figure."
msgstr "Agrega un ejes a la figura."

#: matplotlib.figure.Figure.set_size_inches:4
#: matplotlib.figure.FigureBase.add_axes:4
#: matplotlib.figure.FigureBase.add_subplot:4
#: matplotlib.figure.FigureBase.legend:4 of
msgid "Call signatures::"
msgstr "Firma de llamadas::"

#: matplotlib.figure.Figure.tight_layout:27
#: matplotlib.figure.FigureBase.add_axes:13 of
msgid "**rect**"
msgstr "**rect**"

#: of
msgid "sequence of float"
msgstr "secuencia de decimales"

#: matplotlib.figure.FigureBase.add_axes:12 of
msgid "The dimensions [left, bottom, width, height] of the new Axes. All quantities are in fractions of figure width and height."
msgstr "Las dimensiones [izquierda, inferior, anchura, altura] de los nuevos ejes. Todas las cantidades son en fracciones de anchura y altura de la figura."

#: matplotlib.figure.FigureBase.add_axes:18
#: matplotlib.figure.FigureBase.add_subplot:37 of
msgid "**projection**"
msgstr "**proyección**"

#: of
msgid "{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optional"
msgstr "{None, 'aitoff', 'martillo', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, opcional"

#: matplotlib.figure.FigureBase.add_axes:16 of
msgid "The projection type of the `~.axes.Axes`. *str* is the name of a custom projection, see `~matplotlib.projections`. The default None results in a 'rectilinear' projection."
msgstr "El tipo de proyección del `~.axes.Axes`. *str* es el nombre de una proyección personalizada, vea `~matplotlib.projections`. El valor predeterminado Ninguno da como resultado una proyección 'rectilinear'."

#: matplotlib.figure.FigureBase.add_axes:21
#: matplotlib.figure.FigureBase.add_subplot:40 of
msgid "**polar**"
msgstr "**polar**"

#: matplotlib.figure.FigureBase.add_axes:21
#: matplotlib.figure.FigureBase.add_subplot:40 of
msgid "If True, equivalent to projection='polar'."
msgstr "Si es verdadero, equivalente a la proyección='polar'."

#: matplotlib.figure.FigureBase.add_axes:26
#: matplotlib.figure.FigureBase.add_subplot:45 of
msgid "**axes_class** : subclass type of `~.axes.Axes`, optional"
msgstr "**axes_class** : tipo de subclase de `~.axes.Axes`, opcional"

#: of
msgid "subclass type of"
msgstr "tipo de subclase de"

#: matplotlib.figure.FigureBase.add_axes:24
#: matplotlib.figure.FigureBase.add_subplot:43 of
msgid "The `.axes.Axes` subclass that is instantiated.  This parameter is incompatible with *projection* and *polar*.  See :ref:`axisartist_users-guide-index` for examples."
msgstr "La subclase `.axes.Axes` que está instanciada. Este parámetro es incompatible con *proyección* y *polar*. Vea :ref:`axisartist_users-guide-index` para ver ejemplos."

#: matplotlib.figure.FigureBase.add_axes:31
#: matplotlib.figure.FigureBase.add_subplot:50 of
msgid "**sharex, sharey** : `~.axes.Axes`, optional"
msgstr "**sharex, compartir** : `~.axes.Axes`, opcional"

#: matplotlib.figure.FigureBase.add_axes:30
#: matplotlib.figure.FigureBase.add_subplot:49
#: matplotlib.figure.FigureBase.colorbar:19 of
msgid "Axes, optional"
msgstr "Ejes, opcional"

#: matplotlib.figure.FigureBase.add_axes:29
#: matplotlib.figure.FigureBase.add_subplot:48 of
msgid "Share the x or y `~matplotlib.axis` with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared axes."
msgstr "Comparte el x o y `~matplotlib.axis` con sharex y/o sharey. El eje tendrá los mismos límites, ticks y escala que el eje de los ejes compartidos."

#: matplotlib.figure.FigureBase.add_axes:34
#: matplotlib.figure.FigureBase.add_subplot:53 of
msgid "**label**"
msgstr "**etiqueta**"

#: matplotlib.figure.FigureBase.add_axes:34
#: matplotlib.figure.FigureBase.add_subplot:53 of
msgid "A label for the returned Axes."
msgstr "Una etiqueta para los ejes devueltos."

#: matplotlib.figure.FigureBase.add_axes:43 of
msgid "`~.axes.Axes`, or a subclass of `~.axes.Axes`"
msgstr "`~.axes.Axes`, o una subclase de `~.axes.Axes`"

#: matplotlib.figure.FigureBase.add_axes:39 of
msgid "The returned axes class depends on the projection used. It is `~.axes.Axes` if rectilinear projection is used and `.projections.polar.PolarAxes` if polar projection is used."
msgstr "La clase de ejes devueltos depende de la proyección utilizada. Es `~.axes.Axes` si se utiliza proyección rectilineal y `.projections.polar.PolarAxes` si se utiliza proyección polar."

#: matplotlib.figure.Figure.figimage:54
#: matplotlib.figure.FigureBase.add_axes:114
#: matplotlib.figure.FigureBase.add_gridspec:27
#: matplotlib.figure.FigureBase.add_subfigure:25
#: matplotlib.figure.FigureBase.add_subplot:134
#: matplotlib.figure.FigureBase.suptitle:55
#: matplotlib.figure.FigureBase.supxlabel:55
#: matplotlib.figure.FigureBase.supylabel:55 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.figure.FigureBase.add_axes:48 of
msgid "This method also takes the keyword arguments for the returned Axes class. The keyword arguments for the rectilinear Axes class `~.axes.Axes` can be found in the following table but there might also be other keyword arguments if another projection is used, see the actual Axes class."
msgstr "Este método también toma los argumentos de palabra clave para la clase devuelta Axes. Los argumentos de palabra clave para la clase Axes rectilinear `~.axes. xes` se puede encontrar en la siguiente tabla, pero también puede haber otros argumentos de palabra clave si se utiliza otra proyección ver la clase Axes real."

#: matplotlib.figure.FigureBase.add_axes:61
#: matplotlib.figure.FigureBase.add_subplot:81
#: matplotlib.figure.FigureBase.gca:20 of
msgid ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"
msgstr ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"

#: matplotlib.figure.FigureBase.add_axes:61
#: matplotlib.figure.FigureBase.add_subplot:81
#: matplotlib.figure.FigureBase.gca:20 of
msgid "{'box', 'datalim'}"
msgstr "{'box', 'datalim'}"

#: matplotlib.figure.FigureBase.add_axes:64
#: matplotlib.figure.FigureBase.add_subplot:84
#: matplotlib.figure.FigureBase.gca:23 of
msgid ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"
msgstr ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"

#: matplotlib.figure.FigureBase.add_axes:64
#: matplotlib.figure.FigureBase.add_subplot:84
#: matplotlib.figure.FigureBase.gca:23 of
msgid "(float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"
msgstr "(float, float) o {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"

#: matplotlib.figure.FigureBase.add_axes:66
#: matplotlib.figure.FigureBase.add_subplot:86
#: matplotlib.figure.FigureBase.gca:25 of
msgid ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"
msgstr ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"

#: matplotlib.figure.FigureBase.add_axes:66
#: matplotlib.figure.FigureBase.add_subplot:86
#: matplotlib.figure.FigureBase.gca:25 of
msgid "{'auto', 'equal'} or float"
msgstr "{'auto', 'equal'} or float"

#: matplotlib.figure.FigureBase.add_axes:67
#: matplotlib.figure.FigureBase.add_subplot:87
#: matplotlib.figure.FigureBase.gca:26 of
msgid ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"
msgstr ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"

#: matplotlib.figure.FigureBase.add_axes:68
#: matplotlib.figure.FigureBase.add_subplot:88
#: matplotlib.figure.FigureBase.gca:27 of
msgid ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"
msgstr ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"

#: matplotlib.figure.FigureBase.add_axes:69
#: matplotlib.figure.FigureBase.add_subplot:89
#: matplotlib.figure.FigureBase.gca:28 of
msgid ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"
msgstr ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"

#: matplotlib.figure.FigureBase.add_axes:70
#: matplotlib.figure.FigureBase.add_subplot:90
#: matplotlib.figure.FigureBase.gca:29 of
msgid ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"
msgstr ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"

#: matplotlib.figure.FigureBase.add_axes:70
#: matplotlib.figure.FigureBase.add_subplot:90
#: matplotlib.figure.FigureBase.gca:29 of
msgid "Callable[[Axes, Renderer], Bbox]"
msgstr "Callable[[Axes, Renderer], Bbox]"

#: matplotlib.figure.FigureBase.add_axes:71
#: matplotlib.figure.FigureBase.add_subplot:91
#: matplotlib.figure.FigureBase.gca:30 of
msgid ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"
msgstr ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"

#: matplotlib.figure.FigureBase.add_axes:71
#: matplotlib.figure.FigureBase.add_subplot:91
#: matplotlib.figure.FigureBase.gca:30 of
msgid "bool or 'line'"
msgstr "bool or 'line'"

#: matplotlib.figure.FigureBase.add_axes:72
#: matplotlib.figure.FigureBase.add_subplot:92
#: matplotlib.figure.FigureBase.gca:31 of
msgid ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"
msgstr ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"

#: matplotlib.figure.FigureBase.add_axes:72
#: matplotlib.figure.FigureBase.add_axes:88
#: matplotlib.figure.FigureBase.add_subplot:92
#: matplotlib.figure.FigureBase.add_subplot:108
#: matplotlib.figure.FigureBase.gca:31 matplotlib.figure.FigureBase.gca:47 of
msgid "float or None"
msgstr "float o None"

#: matplotlib.figure.FigureBase.add_axes:76
#: matplotlib.figure.FigureBase.add_subplot:96
#: matplotlib.figure.FigureBase.gca:35 of
msgid ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` or fc"
msgstr ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` o fc"

#: matplotlib.figure.FigureBase.add_axes:78
#: matplotlib.figure.FigureBase.add_subplot:98
#: matplotlib.figure.FigureBase.gca:37 of
msgid ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"
msgstr ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"

#: matplotlib.figure.FigureBase.add_axes:82
#: matplotlib.figure.FigureBase.add_subplot:102
#: matplotlib.figure.FigureBase.gca:41 of
msgid ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"
msgstr ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"

#: matplotlib.figure.FigureBase.add_axes:83
#: matplotlib.figure.FigureBase.add_subplot:103
#: matplotlib.figure.FigureBase.gca:42 of
msgid ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"
msgstr ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"

#: matplotlib.figure.FigureBase.add_axes:83
#: matplotlib.figure.FigureBase.add_axes:87
#: matplotlib.figure.FigureBase.add_axes:96
#: matplotlib.figure.FigureBase.add_axes:101
#: matplotlib.figure.FigureBase.add_axes:102
#: matplotlib.figure.FigureBase.add_axes:103
#: matplotlib.figure.FigureBase.add_axes:108
#: matplotlib.figure.FigureBase.add_axes:109
#: matplotlib.figure.FigureBase.add_subplot:103
#: matplotlib.figure.FigureBase.add_subplot:107
#: matplotlib.figure.FigureBase.add_subplot:116
#: matplotlib.figure.FigureBase.add_subplot:121
#: matplotlib.figure.FigureBase.add_subplot:122
#: matplotlib.figure.FigureBase.add_subplot:123
#: matplotlib.figure.FigureBase.add_subplot:128
#: matplotlib.figure.FigureBase.add_subplot:129
#: matplotlib.figure.FigureBase.gca:42 matplotlib.figure.FigureBase.gca:46
#: matplotlib.figure.FigureBase.gca:55 matplotlib.figure.FigureBase.gca:60
#: matplotlib.figure.FigureBase.gca:61 matplotlib.figure.FigureBase.gca:62
#: matplotlib.figure.FigureBase.gca:67 matplotlib.figure.FigureBase.gca:68
#: matplotlib.figure.FigureBase.text:43 matplotlib.figure.FigureBase.text:44
#: matplotlib.figure.FigureBase.text:45 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.figure.FigureBase.add_axes:86
#: matplotlib.figure.FigureBase.add_subplot:106
#: matplotlib.figure.FigureBase.gca:45 of
msgid ":meth:`position <matplotlib.axes.Axes.set_position>`"
msgstr ":meth:`position <matplotlib.axes.Axes.set_position>`"

#: matplotlib.figure.FigureBase.add_axes:86
#: matplotlib.figure.FigureBase.add_subplot:106
#: matplotlib.figure.FigureBase.gca:45 of
msgid "[left, bottom, width, height] or `~matplotlib.transforms.Bbox`"
msgstr "[left, bottom, width, height] o `~matplotlib.transforms.Bbox`"

#: matplotlib.figure.FigureBase.add_axes:87
#: matplotlib.figure.FigureBase.add_subplot:107
#: matplotlib.figure.FigureBase.gca:46 of
msgid ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"
msgstr ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"

#: matplotlib.figure.FigureBase.add_axes:88
#: matplotlib.figure.FigureBase.add_subplot:108
#: matplotlib.figure.FigureBase.gca:47 of
msgid ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"
msgstr ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"

#: matplotlib.figure.FigureBase.add_axes:92
#: matplotlib.figure.FigureBase.add_subplot:112
#: matplotlib.figure.FigureBase.gca:51 of
msgid ":meth:`title <matplotlib.axes.Axes.set_title>`"
msgstr ":meth:`title <matplotlib.axes.Axes.set_title>`"

#: matplotlib.figure.FigureBase.add_axes:96
#: matplotlib.figure.FigureBase.add_subplot:116
#: matplotlib.figure.FigureBase.gca:55 of
msgid ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"
msgstr ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"

#: matplotlib.figure.FigureBase.add_axes:97
#: matplotlib.figure.FigureBase.add_subplot:117
#: matplotlib.figure.FigureBase.gca:56 of
msgid ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"
msgstr ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"

#: matplotlib.figure.FigureBase.add_axes:98
#: matplotlib.figure.FigureBase.add_subplot:118
#: matplotlib.figure.FigureBase.gca:57 of
msgid ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"
msgstr ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"

#: matplotlib.figure.FigureBase.add_axes:98
#: matplotlib.figure.FigureBase.add_axes:105
#: matplotlib.figure.FigureBase.add_subplot:118
#: matplotlib.figure.FigureBase.add_subplot:125
#: matplotlib.figure.FigureBase.gca:57 matplotlib.figure.FigureBase.gca:64 of
msgid "(bottom: float, top: float)"
msgstr "(bottom: float, top: float)"

#: matplotlib.figure.FigureBase.add_axes:99
#: matplotlib.figure.FigureBase.add_subplot:119
#: matplotlib.figure.FigureBase.gca:58 of
msgid ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"
msgstr ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"

#: matplotlib.figure.FigureBase.add_axes:99
#: matplotlib.figure.FigureBase.add_axes:106
#: matplotlib.figure.FigureBase.add_subplot:119
#: matplotlib.figure.FigureBase.add_subplot:126
#: matplotlib.figure.FigureBase.gca:58 matplotlib.figure.FigureBase.gca:65 of
msgid "float greater than -0.5"
msgstr "float mayor que -0,5"

#: matplotlib.figure.FigureBase.add_axes:100
#: matplotlib.figure.FigureBase.add_subplot:120
#: matplotlib.figure.FigureBase.gca:59 of
msgid ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"
msgstr ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"

#: matplotlib.figure.FigureBase.add_axes:100
#: matplotlib.figure.FigureBase.add_axes:107
#: matplotlib.figure.FigureBase.add_subplot:120
#: matplotlib.figure.FigureBase.add_subplot:127
#: matplotlib.figure.FigureBase.gca:59 matplotlib.figure.FigureBase.gca:66 of
msgid "{\"linear\", \"log\", \"symlog\", \"logit\", ...} or `.ScaleBase`"
msgstr "{\"linear\", \"log\", \"symlog\", \"logit\", ...} o `.ScaleBase`"

#: matplotlib.figure.FigureBase.add_axes:101
#: matplotlib.figure.FigureBase.add_subplot:121
#: matplotlib.figure.FigureBase.gca:60 of
msgid ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"
msgstr ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"

#: matplotlib.figure.FigureBase.add_axes:102
#: matplotlib.figure.FigureBase.add_subplot:122
#: matplotlib.figure.FigureBase.gca:61 of
msgid ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"
msgstr ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"

#: matplotlib.figure.FigureBase.add_axes:103
#: matplotlib.figure.FigureBase.add_subplot:123
#: matplotlib.figure.FigureBase.gca:62 of
msgid ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"
msgstr ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"

#: matplotlib.figure.FigureBase.add_axes:104
#: matplotlib.figure.FigureBase.add_subplot:124
#: matplotlib.figure.FigureBase.gca:63 of
msgid ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"
msgstr ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"

#: matplotlib.figure.FigureBase.add_axes:105
#: matplotlib.figure.FigureBase.add_subplot:125
#: matplotlib.figure.FigureBase.gca:64 of
msgid ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"
msgstr ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"

#: matplotlib.figure.FigureBase.add_axes:106
#: matplotlib.figure.FigureBase.add_subplot:126
#: matplotlib.figure.FigureBase.gca:65 of
msgid ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"
msgstr ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"

#: matplotlib.figure.FigureBase.add_axes:107
#: matplotlib.figure.FigureBase.add_subplot:127
#: matplotlib.figure.FigureBase.gca:66 of
msgid ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"
msgstr ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"

#: matplotlib.figure.FigureBase.add_axes:108
#: matplotlib.figure.FigureBase.add_subplot:128
#: matplotlib.figure.FigureBase.gca:67 of
msgid ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"
msgstr ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"

#: matplotlib.figure.FigureBase.add_axes:109
#: matplotlib.figure.FigureBase.add_subplot:129
#: matplotlib.figure.FigureBase.gca:68 of
msgid ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"
msgstr ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"

#: matplotlib.figure.FigureBase.add_axes:119
#: matplotlib.figure.FigureBase.subplots:71 of
msgid ":obj:`.Figure.add_subplot`"
msgstr ":obj:`.Figure.add_subplot`"

#: matplotlib.figure.FigureBase.add_axes:121
#: matplotlib.figure.FigureBase.add_subplot:141
#: matplotlib.figure.FigureBase.subplots:73 of
msgid ":obj:`.pyplot.subplot`"
msgstr ":obj:`.pyplot.subplot`"

#: matplotlib.figure.FigureBase.add_axes:123
#: matplotlib.figure.FigureBase.add_subplot:143 of
msgid ":obj:`.pyplot.axes`"
msgstr ":obj:`.pyplot.axes`"

#: matplotlib.figure.FigureBase.add_axes:125
#: matplotlib.figure.FigureBase.add_subplot:145 of
msgid ":obj:`.Figure.subplots`"
msgstr ":obj:`.Figure.subplots`"

#: matplotlib.figure.FigureBase.add_axes:127
#: matplotlib.figure.FigureBase.add_subplot:147
#: matplotlib.figure.FigureBase.subplots:69 of
msgid ":obj:`.pyplot.subplots`"
msgstr ":obj:`.pyplot.subplots`"

#: matplotlib.artist.Artist.draw:21 matplotlib.artist.Artist.set_clip_path:24
#: matplotlib.figure.Figure.draw:21 matplotlib.figure.Figure.figimage:57
#: matplotlib.figure.Figure.get_size_inches:28
#: matplotlib.figure.Figure.ginput:51
#: matplotlib.figure.Figure.set_size_inches:40
#: matplotlib.figure.FigureBase.add_axes:131
#: matplotlib.figure.FigureBase.align_xlabels:36
#: matplotlib.figure.FigureBase.align_ylabels:36
#: matplotlib.figure.FigureBase.colorbar:44
#: matplotlib.figure.FigureBase.legend:289 matplotlib.figure.SubFigure.draw:21
#: matplotlib.figure.figaspect:30 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.figure.FigureBase.add_axes:132 of
msgid "In rare circumstances, `.add_axes` may be called with a single argument, an Axes instance already created in the present figure but not in the figure's list of Axes."
msgstr "En raras circunstancias, `. dd_axes` puede llamarse con un solo argumento, una instancia de ejes ya creada en la figura actual pero no en la lista de ejes de la figura."

#: matplotlib.figure.Figure.figimage:65
#: matplotlib.figure.Figure.sticky_edges:30
#: matplotlib.figure.FigureBase.add_axes:138
#: matplotlib.figure.FigureBase.add_gridspec:38
#: matplotlib.figure.FigureBase.add_subplot:153
#: matplotlib.figure.FigureBase.align_xlabels:42
#: matplotlib.figure.FigureBase.align_ylabels:42
#: matplotlib.figure.FigureBase.sticky_edges:30
#: matplotlib.figure.FigureBase.subplots:79
#: matplotlib.figure.SubFigure.sticky_edges:30 matplotlib.figure.figaspect:39
#: of
msgid "Examples"
msgstr "Ejemplos"

#: matplotlib.figure.FigureBase.add_axes:139 of
msgid "Some simple examples::"
msgstr "Algunos ejemplos simples::"

#: matplotlib.figure.Figure.add_axobserver:2 of
msgid "Whenever the Axes state change, ``func(self)`` will be called."
msgstr "Siempre que el estado de los ejes cambie, ``func(self)`` será llamado."

#: matplotlib.artist.Artist.add_callback:2 of
msgid "Add a callback function that will be called whenever one of the `.Artist`'s properties changes."
msgstr "Añade una función callback que será llamada cada vez que cambie una de las propiedades de `.Artist`."

#: matplotlib.artist.Artist.add_callback:14 of
msgid "**func**"
msgstr "**func**"

#: of
msgid "callable"
msgstr "llamable"

#: matplotlib.artist.Artist.add_callback:9 of
msgid "The callback function. It must have the signature::"
msgstr "La función callback. Debe tener la firma::"

#: matplotlib.artist.Artist.add_callback:13 of
msgid "where *artist* is the calling `.Artist`. Return values may exist but are ignored."
msgstr "donde *artist* es la llamada `.Artist`. Los valores de retorno pueden existir pero son ignorados."

#: matplotlib.artist.Artist.add_callback:26 of
msgid "int"
msgstr "int"

#: matplotlib.artist.Artist.add_callback:19 of
msgid "The observer id associated with the callback. This id can be used for removing the callback with `.remove_callback` later."
msgstr "El id del observador asociado con el callback. Este id puede utilizarse para eliminar el callback con `.remove_callback` más adelante."

#: matplotlib.artist.Artist.add_callback:31
#: matplotlib.artist.Artist.pchanged:19 of
msgid ":obj:`remove_callback`"
msgstr ":obj:`remove_callback`"

#: matplotlib.figure.FigureBase.add_gridspec:2 of
msgid "Return a `.GridSpec` that has this figure as a parent.  This allows complex layout of Axes in the figure."
msgstr "Devuelve un `.GridSpec` que tiene esta figura como padre. Esto permite una disposición compleja de ejes en la figura."

#: matplotlib.figure.FigureBase.add_gridspec:9 of
msgid "**nrows**"
msgstr "**nnfilas**"

#: of
msgid "int, default: 1"
msgstr "int, por defecto: 1"

#: matplotlib.figure.FigureBase.add_gridspec:9 of
msgid "Number of rows in grid."
msgstr "Número de filas en cuadrícula."

#: matplotlib.figure.FigureBase.add_gridspec:12 of
msgid "**ncols**"
msgstr "**ncoles**"

#: matplotlib.figure.FigureBase.add_gridspec:12 of
msgid "Number or columns in grid."
msgstr "Número o columnas en la cuadrícula."

#: matplotlib.figure.FigureBase.add_gridspec:19 of
msgid "`.GridSpec`"
msgstr "`.GridSpec`"

#: matplotlib.figure.FigureBase.add_gridspec:24 of
msgid "Keyword arguments are passed to `.GridSpec`."
msgstr "Los argumentos de palabra clave se pasan a `.GridSpec`."

#: matplotlib.figure.FigureBase.add_gridspec:32 of
msgid ":obj:`matplotlib.pyplot.subplots`"
msgstr ":obj:`matplotlib.pyplot.subplots`"

#: matplotlib.figure.FigureBase.add_gridspec:39 of
msgid "Adding a subplot that spans two rows::"
msgstr "Añadir una subtrama que abarca dos filas::"

#: matplotlib.figure.FigureBase.add_subfigure:2 of
msgid "Add a `~.figure.SubFigure` to the figure as part of a subplot arrangement."
msgstr "Agrega un `~.figure.SubFigure` a la figura como parte de un arreglo de subparcela."

#: matplotlib.figure.FigureBase.add_subfigure:10 matplotlib.figure.SubFigure:46
#: of
msgid "**subplotspec** : `.gridspec.SubplotSpec`"
msgstr "**subplotspec** : `.gridspec.SubplotSpec`"

#: matplotlib.figure.FigureBase.add_subfigure:9 matplotlib.figure.SubFigure:45
#: of
msgid "gridspec.SubplotSpec"
msgstr "gridspec.SubplotSpec"

#: matplotlib.figure.FigureBase.add_subfigure:9 matplotlib.figure.SubFigure:45
#: of
msgid "Defines the region in a parent gridspec where the subfigure will be placed."
msgstr "Define la región en una cuadrícula padre donde se colocará la subfigura."

#: matplotlib.figure.FigureBase.add_subfigure:17 of
msgid "`.figure.SubFigure`"
msgstr "`.figure.Subfigura`"

#: matplotlib.figure.FigureBase.add_subfigure:22 of
msgid "Are passed to the `~.figure.SubFigure` object."
msgstr "Se pasan al objeto `~.figure.SubFigure`."

#: matplotlib.figure.FigureBase.add_subfigure:30 of
msgid ":obj:`.Figure.subfigures`"
msgstr ":obj:`.Figure.subfiguras`"

#: matplotlib.figure.FigureBase.add_subplot:2 of
msgid "Add an `~.axes.Axes` to the figure as part of a subplot arrangement."
msgstr "Agrega un `~.axes.Axes` a la figura como parte de un arreglo de subplot."

#: matplotlib.figure.FigureBase.add_subplot:32 of
msgid "**\\*args** : int, (int, int, *index*), or `.SubplotSpec`, default: (1, 1, 1)"
msgstr "**\\*args** : int, (int, int, *index*), o `.SubplotSpec`, por defecto: (1, 1, 1)"

#: of
msgid "int, (int, int,"
msgstr "int, (int, int, int,"

#: matplotlib.figure.FigureBase.add_subplot:14 of
msgid "The position of the subplot described by one of"
msgstr "La posición de la subparcela descrita por uno de"

#: matplotlib.figure.FigureBase.add_subplot:16 of
msgid "Three integers (*nrows*, *ncols*, *index*). The subplot will take the *index* position on a grid with *nrows* rows and *ncols* columns. *index* starts at 1 in the upper left corner and increases to the right.  *index* can also be a two-tuple specifying the (*first*, *last*) indices (1-based, and including *last*) of the subplot, e.g., ``fig.add_subplot(3, 1, (1, 2))`` makes a subplot that spans the upper 2/3 of the figure."
msgstr "Tres enteros (*nrows*, *ncols*, *índice*). El subgráfico tomará la posición de *índice* en una cuadrícula con *nrows* filas y columnas *ncols*. *índice* comienza en 1 en la esquina superior izquierda y aumenta a la derecha. *índice* también puede ser una doble tupla que especifique los (*primero*, *últimos*) índices (1 basada, e incluyendo *último*) de la subparcela, e. ., ``fig.add_subplot(3, 1, (1, 2))`` hace una subparcela que abarca la parte superior 2/3 de la figura."

#: matplotlib.figure.FigureBase.add_subplot:23 of
msgid "A 3-digit integer. The digits are interpreted as if given separately as three single-digit integers, i.e. ``fig.add_subplot(235)`` is the same as ``fig.add_subplot(2, 3, 5)``. Note that this can only be used if there are no more than 9 subplots."
msgstr "Un entero de 3 dígitos. Los dígitos se interpretan como si se dieran por separado como tres enteros de un solo dígito, es decir, ``fig. dd_subplot(235)`` es lo mismo que ``fig.add_subplot(2, 3, 5)``. Tenga en cuenta que esto sólo puede utilizarse si no hay más de 9 subplots."

#: matplotlib.figure.FigureBase.add_subplot:28 of
msgid "A `.SubplotSpec`."
msgstr "A `.SubplotSpec`."

#: matplotlib.figure.FigureBase.add_subplot:30 of
msgid "In rare circumstances, `.add_subplot` may be called with a single argument, a subplot Axes instance already created in the present figure but not in the figure's list of Axes."
msgstr "En raras circunstancias, `. dd_subplot` puede ser llamado con un solo argumento, una instancia de ejes subplotados ya creada en la figura actual pero no en la lista de ejes de la figura."

#: matplotlib.figure.FigureBase.add_subplot:35 of
msgid "The projection type of the subplot (`~.axes.Axes`). *str* is the name of a custom projection, see `~matplotlib.projections`. The default None results in a 'rectilinear' projection."
msgstr "El tipo de proyección de la subparcela (`~.axes.Axes`). *str* es el nombre de una proyección personalizada, vea `~matplotlib.projections`. El valor predeterminado Ninguno da como resultado una proyección 'rectilinear'."

#: matplotlib.figure.FigureBase.add_subplot:64 of
msgid "`.axes.SubplotBase`, or another subclass of `~.axes.Axes`"
msgstr "`.axes.SubplotBase`, u otra subclase de `~.axes.Axes`"

#: matplotlib.figure.FigureBase.add_subplot:58 of
msgid "The Axes of the subplot. The returned Axes base class depends on the projection used. It is `~.axes.Axes` if rectilinear projection is used and `.projections.polar.PolarAxes` if polar projection is used. The returned Axes is then a subplot subclass of the base class."
msgstr "Los ejes de la subparcela. La clase base de los ejes devueltos depende de la proyección utilizada. Es `~.axes.Axes` si se utiliza la proyección rectilineal y `. rojections.polar.PolarAxes` si se utiliza la proyección polar."

#: matplotlib.figure.FigureBase.add_subplot:69 of
msgid "This method also takes the keyword arguments for the returned Axes base class; except for the *figure* argument. The keyword arguments for the rectilinear base class `~.axes.Axes` can be found in the following table but there might also be other keyword arguments if another projection is used."
msgstr "Este método también toma los argumentos de palabra clave para la clase base devuelta Axes, excepto el argumento *figure*. Los argumentos de palabra clave para la clase base rectilinear `~. xes.Axes` se puede encontrar en la siguiente tabla, pero también puede haber otros argumentos de palabras clave si se utiliza otra proyección."

#: matplotlib.figure.FigureBase.add_subplot:139 of
msgid ":obj:`.Figure.add_axes`"
msgstr ":obj:`.Figure.añadir ejes`"

#: matplotlib.figure.FigureBase.align_labels:2 of
msgid "Align the xlabels and ylabels of subplots with the same subplots row or column (respectively) if label alignment is being done automatically (i.e. the label position is not manually set)."
msgstr "Alinear las etiquetas xlabels y las etiquetas de las subparcelas con la misma fila de subparcelas o columna (respectivamente) si la alineación de la etiqueta se hace automáticamente (i. . la posición de la etiqueta no se ha establecido manualmente)."

#: matplotlib.figure.FigureBase.align_labels:6
#: matplotlib.figure.FigureBase.align_xlabels:6
#: matplotlib.figure.FigureBase.align_ylabels:6 of
msgid "Alignment persists for draw events after this is called."
msgstr "La alineación persiste para los eventos de dibujo después de que esto sea llamado."

#: matplotlib.figure.FigureBase.align_labels:20
#: matplotlib.figure.FigureBase.align_xlabels:25
#: matplotlib.figure.FigureBase.align_ylabels:25 of
msgid "**axs** : list of `~matplotlib.axes.Axes`"
msgstr "**ejes** : lista de `~matplotlib.axes.Axes`"

#: of
msgid "list of"
msgstr "lista de"

#: matplotlib.figure.FigureBase.align_labels:11 of
msgid "Optional list (or ndarray) of `~matplotlib.axes.Axes` to align the labels. Default is to align all Axes on the figure."
msgstr "Lista opcional (o ndarray) de `~matplotlib.axes.Axes` para alinear las etiquetas. Por defecto alinea todos los ejes en la figura."

#: matplotlib.figure.FigureBase.align_labels:25
#: matplotlib.figure.FigureBase.align_ylabels:30 of
msgid ":obj:`matplotlib.figure.Figure.align_xlabels`"
msgstr ":obj:`matplotlib.figure.Figure.align_xlabels`"

#: matplotlib.figure.FigureBase.align_labels:27
#: matplotlib.figure.FigureBase.align_xlabels:30 of
msgid ":obj:`matplotlib.figure.Figure.align_ylabels`"
msgstr ":obj:`matplotlib.figure.Figure.align_ylabels`"

#: matplotlib.figure.FigureBase.align_xlabels:2 of
msgid "Align the xlabels of subplots in the same subplot column if label alignment is being done automatically (i.e. the label position is not manually set)."
msgstr "Alinear las etiquetas xlabels de subplots en la misma columna de subplot si la alineación de la etiqueta se hace automáticamente (es decir, la posición de la etiqueta no se establece manualmente)."

#: matplotlib.figure.FigureBase.align_xlabels:8 of
msgid "If a label is on the bottom, it is aligned with labels on Axes that also have their label on the bottom and that have the same bottom-most subplot row.  If the label is on the top, it is aligned with labels on Axes with the same top-most row."
msgstr "Si una etiqueta está en la parte inferior, está alineada con etiquetas en ejes que también tienen su etiqueta en la parte inferior y que tienen la misma fila de fondo más subparcela. Si la etiqueta está en la parte superior, está alineada con etiquetas en ejes con la misma fila más arriba."

#: matplotlib.figure.FigureBase.align_xlabels:16 of
msgid "Optional list of (or ndarray) `~matplotlib.axes.Axes` to align the xlabels. Default is to align all Axes on the figure."
msgstr "Lista opcional de `~matplotlib.axes.Axes` (o ndarray) para alinear los xlabels. Por defecto es alinear todos los ejes en la figura."

#: matplotlib.figure.FigureBase.align_xlabels:32
#: matplotlib.figure.FigureBase.align_ylabels:32 of
msgid ":obj:`matplotlib.figure.Figure.align_labels`"
msgstr ":obj:`matplotlib.figure.Figure.align_labels`"

#: matplotlib.figure.FigureBase.align_xlabels:37
#: matplotlib.figure.FigureBase.align_ylabels:37 of
msgid "This assumes that ``axs`` are from the same `.GridSpec`, so that their `.SubplotSpec` positions correspond to figure positions."
msgstr "Esto asume que los ``ejes`` son del mismo `.GridSpec`, de modo que sus posiciones `.SubplotSpec` corresponden a posiciones de figura."

#: matplotlib.figure.FigureBase.align_xlabels:43 of
msgid "Example with rotated xtick labels::"
msgstr "Ejemplo con etiquetas xtick rotadas::"

#: matplotlib.figure.FigureBase.align_ylabels:2 of
msgid "Align the ylabels of subplots in the same subplot column if label alignment is being done automatically (i.e. the label position is not manually set)."
msgstr "Alinear las etiquetas de subparcelas en la misma columna de subparcela si la alineación de la etiqueta se hace automáticamente (es decir, la posición de la etiqueta no se establece manualmente)."

#: matplotlib.figure.FigureBase.align_ylabels:8 of
msgid "If a label is on the left, it is aligned with labels on Axes that also have their label on the left and that have the same left-most subplot column.  If the label is on the right, it is aligned with labels on Axes with the same right-most column."
msgstr "Si una etiqueta está a la izquierda, está alineada con etiquetas en ejes que también tienen su etiqueta a la izquierda y que tienen la misma columna de subparcela a la izquierda. Si la etiqueta está a la derecha, está alineada con etiquetas en ejes con la misma columna más derecha."

#: matplotlib.figure.FigureBase.align_ylabels:16 of
msgid "Optional list (or ndarray) of `~matplotlib.axes.Axes` to align the ylabels. Default is to align all Axes on the figure."
msgstr "Lista opcional (o ndarray) de `~matplotlib.axes.Axes` para alinear las etiquetas. Por defecto alinea todos los ejes en la figura."

#: matplotlib.figure.FigureBase.align_ylabels:43 of
msgid "Example with large yticks labels::"
msgstr "Ejemplo con grandes etiquetas de texto::"

#: matplotlib.figure.FigureBase.autofmt_xdate:2 of
msgid "Date ticklabels often overlap, so it is useful to rotate them and right align them.  Also, a common use case is a number of subplots with shared x-axis where the x-axis is date data.  The ticklabels are often long, and it helps to rotate them on the bottom subplot and turn them off on other subplots, as well as turn off xlabels."
msgstr "Etiquetas de fecha a menudo se superponen, por lo que es útil rotarlas y alinearlas. También, un caso de uso común es un número de subparcelas con eje x compartido donde el eje x son datos de fecha. Las etiquetas son a menudo largas, y ayuda a rotarlos en la subparcela inferior y a desactivarlos en otras subparcelas, así como a desactivar xlabels."

#: matplotlib.figure.FigureBase.autofmt_xdate:13
#: matplotlib.figure.FigureBase.subplots_adjust:19
#: matplotlib.figure.SubplotParams:38 of
msgid "**bottom**"
msgstr "**inferior**"

#: of
msgid "float, default: 0.2"
msgstr "float, por defecto: 0.2"

#: matplotlib.figure.FigureBase.autofmt_xdate:13 of
msgid "The bottom of the subplots for `subplots_adjust`."
msgstr "La parte inferior de las subparcelas para `subplots_adjust`."

#: matplotlib.figure.FigureBase.autofmt_xdate:16 of
msgid "**rotation**"
msgstr "**rotation**"

#: of
msgid "float, default: 30 degrees"
msgstr "flotante, por defecto: 30 grados"

#: matplotlib.figure.FigureBase.autofmt_xdate:16 of
msgid "The rotation angle of the xtick labels in degrees."
msgstr "El ángulo de rotación de las etiquetas xtick en grados."

#: matplotlib.figure.FigureBase.autofmt_xdate:19 of
msgid "**ha**"
msgstr "**ha**"

#: of
msgid "{'left', 'center', 'right'}, default: 'right'"
msgstr "{'left', 'center', 'right'}, predeterminado: 'derecha'"

#: matplotlib.figure.FigureBase.autofmt_xdate:19 of
msgid "The horizontal alignment of the xticklabels."
msgstr "La alineación horizontal de las etiquetas xticklabels."

#: matplotlib.figure.FigureBase.autofmt_xdate:35 of
msgid "**which**"
msgstr "**qué**"

#: of
msgid "{'major', 'minor', 'both'}, default: 'major'"
msgstr "{'major', 'minor', 'both'}, por defecto: 'major'"

#: matplotlib.figure.FigureBase.autofmt_xdate:22 of
msgid "Selects which ticklabels to rotate."
msgstr "Selecciona qué etiquetas rotar."

#: matplotlib.figure.Figure.axes:2 of
msgid "List of Axes in the Figure. You can access and modify the Axes in the Figure through this list."
msgstr "Lista de ejes en la figura. Puede acceder y modificar los ejes en la Figura a través de esta lista."

#: matplotlib.figure.Figure.axes:5 of
msgid "Do not modify the list itself. Instead, use `~Figure.add_axes`, `~.Figure.add_subplot` or `~.Figure.delaxes` to add or remove an Axes."
msgstr "No modifiques la lista en sí. En su lugar, usa `~Figure.add_axes`, `~.Figure.add_subplot` o `~.Figure.delaxes` para agregar o quitar un eje."

#: matplotlib.figure.Figure.axes:8 of
msgid "Note: The `.Figure.axes` property and `~.Figure.get_axes` method are equivalent."
msgstr "Nota: La propiedad `.Figure.axes` y el método `~.Figure.get_axes` son equivalentes."

#: matplotlib.figure.Figure.clear:2 of
msgid "Clear the figure -- synonym for `clf`."
msgstr "Elimina la figura -- sinónimo para `clf`."

#: matplotlib.figure.Figure.clf:2 of
msgid "Clear the figure."
msgstr "Elimina la figura."

#: matplotlib.figure.Figure.clf:4 of
msgid "Set *keep_observers* to True if, for example, a gui widget is tracking the Axes in the figure."
msgstr "Establezca *keep_observers* en True si, por ejemplo, un widget gui está rastreando los ejes en la figura."

#: matplotlib.figure.FigureBase.colorbar:2 of
msgid "Add a colorbar to a plot."
msgstr "Agregue una barra de colores a una parcela."

#: matplotlib.figure.FigureBase.colorbar:17 of
msgid "**mappable**"
msgstr "**mapeable**"

#: matplotlib.figure.FigureBase.colorbar:8 of
msgid "The `matplotlib.cm.ScalarMappable` (i.e., `~matplotlib.image.AxesImage`, `~matplotlib.contour.ContourSet`, etc.) described by this colorbar. This argument is mandatory for the `.Figure.colorbar` method but optional for the `.pyplot.colorbar` function, which sets the default to the current image."
msgstr "El `matplotlib.cm.ScalarMappable` (i.e., `~matplotlib.image.AxesImage`, `~matplotlib.contour.ContourSet`, etc.) descrito por esta barra de colores. Este argumento es obligatorio para el método `.Figure.colorbar` pero opcional para la función `.pyplot.colorbar`, que establece el valor predeterminado para la imagen actual."

#: matplotlib.figure.FigureBase.colorbar:14 of
msgid "Note that one can create a `.ScalarMappable` \"on-the-fly\" to generate colorbars not attached to a previously drawn artist, e.g. ::"
msgstr "Tenga en cuenta que uno puede crear un `.ScalarMappable` \"al vuelo\" para generar barras de colores no conectadas a un artista previamente dibujado, p. ej., ::"

#: matplotlib.figure.FigureBase.colorbar:20 of
msgid "**cax** : `~matplotlib.axes.Axes`, optional"
msgstr "**cax** : `~matplotlib.axes.Axes`, opcional"

#: matplotlib.figure.FigureBase.colorbar:20 of
msgid "Axes into which the colorbar will be drawn."
msgstr "Ejes en los que se dibuja la barra de colores."

#: matplotlib.figure.FigureBase.colorbar:24 of
msgid "**ax** : `~matplotlib.axes.Axes`, list of Axes, optional"
msgstr "**ax** : `~matplotlib.axes.Axes`, lista de ejes, opcional"

#: matplotlib.figure.FigureBase.colorbar:23 of
msgid "Axes, list of Axes, optional"
msgstr "Ejes, lista de ejes, opcional"

#: matplotlib.figure.FigureBase.colorbar:23 of
msgid "One or more parent axes from which space for a new colorbar axes will be stolen, if *cax* is None.  This has no effect if *cax* is set."
msgstr "Uno o más ejes padre de los cuales se robará el espacio para los nuevos ejes de la barra de color, si *cax* no es ninguno. Esto no tiene efecto si *cax* está definido."

#: matplotlib.figure.FigureBase.colorbar:29 of
msgid "**use_gridspec**"
msgstr "**usar_gridspec**"

#: of
msgid "bool, optional"
msgstr "bool, optional"

#: matplotlib.figure.FigureBase.colorbar:27 of
msgid "If *cax* is ``None``, a new *cax* is created as an instance of Axes.  If *ax* is an instance of Subplot and *use_gridspec* is ``True``, *cax* is created as an instance of Subplot using the :mod:`.gridspec` module."
msgstr "Si *cax* es ``Ninguno``, se crea un nuevo *cax* como una instancia de ejes. Si *ax* es una instancia de Subplot y *use_gridspec* es ``True``, *cax* es creado como una instancia de Subplot usando el :mod:`. módulo ridspec`."

#: matplotlib.figure.FigureBase.colorbar:41 of
msgid "**colorbar** : `~matplotlib.colorbar.Colorbar`"
msgstr "**barra de color** : `~matplotlib.colorbar.Colorbar`"

#: matplotlib.figure.FigureBase.colorbar:40 of
msgid "Colorbar"
msgstr "Barra de colores"

#: matplotlib.figure.FigureBase.colorbar:45 of
msgid "Additional keyword arguments are of two kinds:"
msgstr "Los argumentos adicionales de palabras clave son de dos tipos:"

#: matplotlib.figure.FigureBase.colorbar:47 of
msgid "axes properties:"
msgstr "propiedades de ejes:"

#: matplotlib.figure.FigureBase.colorbar:54 of
msgid "location"
msgstr "ubicación"

#: of
msgid "None or {'left', 'right', 'top', 'bottom'}"
msgstr "Ninguno o {'izquierda', 'derecha', 'arriba', 'abajo'}"

#: matplotlib.figure.FigureBase.colorbar:50 of
msgid "The location, relative to the parent axes, where the colorbar axes is created.  It also determines the *orientation* of the colorbar (colorbars on the left and right are vertical, colorbars at the top and bottom are horizontal).  If None, the location will come from the *orientation* if it is set (vertical colorbars on the right, horizontal ones at the bottom), or default to 'right' if *orientation* is unset."
msgstr "La ubicación, relativa a los ejes superiores, donde se crean los ejes de color. También determina la *orientación* de la barra de colores (las barras de colores de la izquierda y la derecha son verticales, las barras de colores de la parte superior e inferior son horizontales). Si Ninguno, la ubicación vendrá de la *orientación* si se establece (barras de color verticales a la derecha, los horizontales en la parte inferior), o por defecto a 'derecha' si la *orientación* no está definida."

#: matplotlib.figure.FigureBase.colorbar:58 of
msgid "orientation"
msgstr "orientación"

#: of
msgid "None or {'vertical', 'horizontal'}"
msgstr "Ninguno o {'vertical', 'horizontal'}"

#: matplotlib.figure.FigureBase.colorbar:57 of
msgid "The orientation of the colorbar.  It is preferable to set the *location* of the colorbar, as that also determines the *orientation*; passing incompatible values for *location* and *orientation* raises an exception."
msgstr "La orientación de la barra de colores. Es preferible establecer la *ubicación* de la barra de colores, ya que esto también determina la *orientación*; pasar valores incompatibles para *ubicación* y *orientación* eleva una excepción."

#: matplotlib.figure.FigureBase.colorbar:60 of
msgid "fraction"
msgstr "fracción"

#: of
msgid "float, default: 0.15"
msgstr "float, por defecto: 0.15"

#: matplotlib.figure.FigureBase.colorbar:61 of
msgid "Fraction of original axes to use for colorbar."
msgstr "Fracción de los ejes originales a usar para la barra de colores."

#: matplotlib.figure.FigureBase.colorbar:62 of
msgid "shrink"
msgstr "reducir"

#: of
msgid "float, default: 1.0"
msgstr "float, por defecto: 1.0"

#: matplotlib.figure.FigureBase.colorbar:63 of
msgid "Fraction by which to multiply the size of the colorbar."
msgstr "Fracción por la cual multiplicar el tamaño de la barra de color."

#: matplotlib.figure.FigureBase.colorbar:65 of
msgid "aspect"
msgstr "aspecto"

#: of
msgid "float, default: 20"
msgstr "float, por defecto: 20"

#: matplotlib.figure.FigureBase.colorbar:65 of
msgid "Ratio of long to short dimensions."
msgstr "Ratio de dimensiones largas a cortas."

#: matplotlib.figure.FigureBase.colorbar:67 of
msgid "pad"
msgstr "pad"

#: of
msgid "float, default: 0.05 if vertical, 0.15 if horizontal"
msgstr "flotante, por defecto: 0.05 si es vertical, 0.15 si es horizontal"

#: matplotlib.figure.FigureBase.colorbar:68 of
msgid "Fraction of original axes between colorbar and new image axes."
msgstr "Fracción de los ejes originales entre la barra de colores y los nuevos ejes de imagen."

#: matplotlib.figure.FigureBase.colorbar:70 of
msgid "anchor"
msgstr "ancla"

#: of
msgid "(float, float), optional"
msgstr "(flotante, flotante), opcional"

#: matplotlib.figure.FigureBase.colorbar:70 of
msgid "The anchor point of the colorbar axes. Defaults to (0.0, 0.5) if vertical; (0.5, 1.0) if horizontal."
msgstr "El punto de anclaje de los ejes de la barra de color. Por defecto es (0.0, 0.5) si es vertical; (0.5, 1.0) si es horizontal."

#: matplotlib.figure.FigureBase.colorbar:75 of
msgid "panchor : (float, float), or *False*, optional"
msgstr "panchor : (flotante, flotante), o *False*, opcional"

#: of
msgid "(float, float), or"
msgstr "(flotante, flotante) o"

#: matplotlib.figure.FigureBase.colorbar:73 of
msgid "The anchor point of the colorbar parent axes. If *False*, the parent axes' anchor will be unchanged. Defaults to (1.0, 0.5) if vertical; (0.5, 0.0) if horizontal."
msgstr "El punto de anclaje de los ejes padre de la barra de color. Si *False*, el ancla de los ejes padre no se modificará. Por defecto es (1.0, 0.5) si es vertical; (0.5, 0.0) si es horizontal."

#: matplotlib.figure.FigureBase.colorbar:77 of
msgid "colorbar properties:"
msgstr "propiedades de la barra de colores:"

#: matplotlib.figure.FigureBase.colorbar:82 of
msgid "*extend*"
msgstr "*extensión*"

#: matplotlib.figure.FigureBase.colorbar:82 of
msgid "{'neither', 'both', 'min', 'max'} If not 'neither', make pointed end(s) for out-of- range values.  These are set for a given colormap using the colormap set_under and set_over methods."
msgstr "{'ninguna de las dos cosas', 'ambos', 'min', 'max'} Si no 'ninguna de las dos, hacer punto(s) para los valores fuera de rango. Estos se establecen para un mapa de colores determinado usando los métodos set_under y set_over del mapa de colores."

#: matplotlib.figure.FigureBase.colorbar:86 of
msgid "*extendfrac*"
msgstr "*extendfrac*"

#: matplotlib.figure.FigureBase.colorbar:86 of
#, python-format
msgid "{*None*, 'auto', length, lengths} If set to *None*, both the minimum and maximum triangular colorbar extensions with have a length of 5% of the interior colorbar length (this is the default setting). If set to 'auto', makes the triangular colorbar extensions the same lengths as the interior boxes (when *spacing* is set to 'uniform') or the same lengths as the respective adjacent interior boxes (when *spacing* is set to 'proportional'). If a scalar, indicates the length of both the minimum and maximum triangular colorbar extensions as a fraction of the interior colorbar length. A two-element sequence of fractions may also be given, indicating the lengths of the minimum and maximum colorbar extensions respectively as a fraction of the interior colorbar length."
msgstr "{*Ninguno*, 'auto', longitud, longitud} Si se establece en *Ninguno*, las extensiones mínimas y máximas triangulares de color con una longitud del 5% de la longitud de la barra de color interior (esta es la configuración predeterminada). Si se establece en 'auto', hace que las extensiones de la barra de colores triangular sean las mismas longitudes que las cajas interiores (cuando *espaciamiento* está establecido en 'uniforme') o las mismas longitudes que las respectivas cajas adyacentes (cuando *espacio* se establece en 'proporcional'). Si un escalar, indica la longitud de las extensiones mínimas y máximas de la barra de color triangular como una fracción de la longitud de la barra de color interior. También se puede dar una secuencia de dos elementos, indica las longitudes de las extensiones mínimas y máximas de color respectivamente como una fracción de la longitud de la barra de colores interior."

#: matplotlib.figure.FigureBase.colorbar:102 of
msgid "*extendrect*"
msgstr "*extensión*"

#: matplotlib.figure.FigureBase.colorbar:102 of
msgid "bool If *False* the minimum and maximum colorbar extensions will be triangular (the default). If *True* the extensions will be rectangular."
msgstr "bool Si *False* las extensiones mínimas y máximas de la barra de color serán triangulares (el valor por defecto). Si *Verdadero* las extensiones serán rectangulares."

#: matplotlib.figure.FigureBase.colorbar:106 of
msgid "*spacing*"
msgstr "*espacio*"

#: matplotlib.figure.FigureBase.colorbar:106 of
msgid "{'uniform', 'proportional'} Uniform spacing gives each discrete color the same space; proportional makes the space proportional to the data interval."
msgstr "{'uniform', 'proportional'} El espaciado uniforme da a cada color discreto el mismo espacio; proporcional hace el espacio proporcional al intervalo de datos."

#: matplotlib.figure.FigureBase.colorbar:110 of
msgid "*ticks*"
msgstr "*ticks*"

#: matplotlib.figure.FigureBase.colorbar:110 of
msgid "*None* or list of ticks or Locator If None, ticks are determined automatically from the input."
msgstr "*nunca* o lista de ticks o localizador si ninguno de ellos, los ticks se determinan automáticamente a partir de la entrada."

#: matplotlib.figure.FigureBase.colorbar:113 of
msgid "*format*"
msgstr "*formato*"

#: matplotlib.figure.FigureBase.colorbar:113 of
#, python-format
msgid "None or str or Formatter If None, `~.ticker.ScalarFormatter` is used. If a format string is given, e.g., '%.3f', that is used. An alternative `~.ticker.Formatter` may be given instead."
msgstr "Ninguno o str o Formatter Si Ninguno, se utiliza `~.ticker.ScalarFormatter`. Si se da una cadena de formato, e. ., '%.3f', que está en uso. En su lugar se puede dar un `~.ticker.Formatter` alternativo."

#: matplotlib.figure.FigureBase.colorbar:117 of
msgid "*drawedges*"
msgstr "*dibujos*"

#: matplotlib.figure.FigureBase.colorbar:117 of
msgid "bool Whether to draw lines at color boundaries."
msgstr "bool Si dibujar líneas en los límites de color."

#: matplotlib.figure.FigureBase.colorbar:119 of
msgid "*label*"
msgstr "*etiqueta*"

#: matplotlib.figure.FigureBase.colorbar:119 of
msgid "str The label on the colorbar's long axis."
msgstr "str La etiqueta en el eje largo de la barra de color."

#: matplotlib.figure.FigureBase.colorbar:123 of
msgid "The following will probably be useful only in the context of indexed colors (that is, when the mappable has norm=NoNorm()), or other unusual circumstances."
msgstr "Lo siguiente probablemente será útil sólo en el contexto de colores indexados (es decir, cuando el mapeable tiene norma=NoNorm()), u otras circunstancias inusuales."

#: matplotlib.figure.FigureBase.colorbar:130 of
msgid "*boundaries*"
msgstr "*límites*"

#: matplotlib.figure.FigureBase.colorbar:130 of
msgid "None or a sequence"
msgstr "Ninguna o una secuencia"

#: matplotlib.figure.FigureBase.colorbar:131 of
msgid "*values*"
msgstr "*valores*"

#: matplotlib.figure.FigureBase.colorbar:131 of
msgid "None or a sequence which must be of length 1 less than the sequence of *boundaries*. For each region delimited by adjacent entries in *boundaries*, the colormapped to the corresponding value in values will be used."
msgstr "Ninguno o una secuencia que debe ser de longitud 1 menos que la secuencia de *límites*. Para cada región delimitada por entradas adyacentes en *límites*, se utilizará el colormapeado al valor correspondiente en valores."

#: matplotlib.figure.FigureBase.colorbar:138 of
msgid "If *mappable* is a `~.contour.ContourSet`, its *extend* kwarg is included automatically."
msgstr "Si *mappable* es un `~.contour.ContourSet`, su *extensión* kwarg se incluye automáticamente."

#: matplotlib.figure.FigureBase.colorbar:141 of
msgid "The *shrink* kwarg provides a simple way to scale the colorbar with respect to the axes. Note that if *cax* is specified, it determines the size of the colorbar and *shrink* and *aspect* kwargs are ignored."
msgstr "El kwarg *encogido* proporciona una manera sencilla de escalar la barra de colores con respecto a los ejes. Tenga en cuenta que si se especifica *cax*, determina el tamaño de la barra de colores y los kwargs *encogido* y *aspecto* son ignorados."

#: matplotlib.figure.FigureBase.colorbar:145 of
msgid "For more precise control, you can manually specify the positions of the axes objects in which the mappable and the colorbar are drawn.  In this case, do not use any of the axes properties kwargs."
msgstr "Para un control más preciso, puede especificar manualmente las posiciones de los ejes en los que se dibuja el mapeable y la barra de colores. En este caso, no utilice ninguno de los ejes de propiedades kwargs."

#: matplotlib.figure.FigureBase.colorbar:149 of
msgid "It is known that some vector graphics viewers (svg and pdf) renders white gaps between segments of the colorbar.  This is due to bugs in the viewers, not Matplotlib.  As a workaround, the colorbar can be rendered with overlapping segments::"
msgstr "Se sabe que algunos visores vectoriales (svg y pdf) renderizan huecos blancos entre segmentos de la barra de colores. Esto se debe a errores en los espectadores, no en Matplotlib. Como un workaround, la barra de colores puede ser procesada con segmentos superpuestos::"

#: matplotlib.figure.FigureBase.colorbar:158 of
msgid "However this has negative consequences in other circumstances, e.g. with semi-transparent images (alpha < 1) and colorbar extensions; therefore, this workaround is not used by default (see issue #1188)."
msgstr "Sin embargo, esto tiene consecuencias negativas en otras circunstancias, p. ej. con imágenes semitransparentes (alpha < 1) y extensiones de la barra de color; por lo tanto, esta solución no se utiliza por defecto (ver número 1188)."

#: matplotlib.figure.FigureBase.contains:2 of
msgid "Test whether the mouse event occurred on the figure."
msgstr "Evalúa si el evento del ratón ocurrió en la figura."

#: matplotlib.figure.FigureBase.contains:21 of
msgid "bool, {}"
msgstr "bool, {}"

#: matplotlib.artist.Artist.convert_xunits:2 of
msgid "Convert *x* using the unit type of the xaxis."
msgstr "Convierte *x* usando el tipo de unidad del xaxis."

#: matplotlib.artist.Artist.convert_xunits:4 of
msgid "If the artist is not in contained in an Axes or if the xaxis does not have units, *x* itself is returned."
msgstr "Si el artista no está contenido en un hacha o si el xaxis no tiene unidades, *x* es devuelto."

#: matplotlib.artist.Artist.convert_yunits:2 of
msgid "Convert *y* using the unit type of the yaxis."
msgstr "Convierte *y* usando el tipo de unidad del yaxis."

#: matplotlib.artist.Artist.convert_yunits:4 of
msgid "If the artist is not in contained in an Axes or if the yaxis does not have units, *y* itself is returned."
msgstr "Si el artista no está contenido en un hacha o si el eje no tiene unidades, *y* en sí mismo es devuelto."

#: matplotlib.figure.FigureBase.delaxes:2 of
msgid "Remove the `~.axes.Axes` *ax* from the figure; update the current Axes."
msgstr "Elimina el `~.axes.Axes` *ax* de la figura; actualiza los ejes actuales."

#: matplotlib.figure.Figure.dpi:2 of
msgid "The resolution in dots per inch."
msgstr "La resolución en puntos por pulgada."

#: matplotlib.artist.Artist.draw:2 matplotlib.figure.Figure.draw:2
#: matplotlib.figure.SubFigure.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr "Dibuja el Artist (y sus hijos) usando el renderizador dado."

#: matplotlib.artist.Artist.draw:4 matplotlib.figure.Figure.draw:4
#: matplotlib.figure.SubFigure.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr "Esto no tiene efecto si el artist no es visible (`.Artist.get_visible` devuelve False)."

#: matplotlib.artist.Artist.draw:18 matplotlib.figure.Figure.draw:18
#: matplotlib.figure.SubFigure.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr "**renderer** : `.RendererBase` subclase."

#: matplotlib.artist.Artist.draw:17 matplotlib.figure.Figure.draw:17
#: matplotlib.figure.SubFigure.draw:17 of
msgid "RendererBase subclass."
msgstr "Subclase RendererBase."

#: matplotlib.artist.Artist.draw:22 matplotlib.figure.Figure.draw:22
#: matplotlib.figure.SubFigure.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr "Este método se sobrescribe en las subclases de Artist."

#: matplotlib.figure.Figure.draw_artist:2 of
msgid "Draw `.Artist` *a* only."
msgstr "Dibujar `.Artist` *a* solamente."

#: matplotlib.figure.Figure.draw_artist:4 of
msgid "This method can only be used after an initial draw of the figure, because that creates and caches the renderer needed here."
msgstr "Este método sólo se puede utilizar después de un dibujo inicial de la figura, porque esto crea y almacena en caché el renderizador necesario aquí."

#: matplotlib.figure.Figure.draw_without_rendering:2 of
msgid "Draw the figure with no output.  Useful to get the final size of artists that require a draw before their size is known (e.g. text)."
msgstr "Dibuja la figura sin salida. Útil para obtener el tamaño final de los artistas que requieren un sorteo antes de que se conozca su tamaño (por ejemplo, texto)."

#: matplotlib.figure.Figure.execute_constrained_layout:2 of
msgid "Use ``layoutgrid`` to determine pos positions within Axes."
msgstr "Usa ``layoutgrid`` para determinar las posturas dentro de los ejes."

#: matplotlib.figure.Figure.execute_constrained_layout:4 of
msgid "See also `.set_constrained_layout_pads`."
msgstr "Vea también `.set_constrained_layout_pads`."

#: matplotlib.figure.Figure.execute_constrained_layout:22 of
msgid "**layoutgrid**"
msgstr "**layoutgrid**"

#: of
msgid "private debugging object"
msgstr "objeto de depuración privado"

#: matplotlib.figure.Figure.figimage:2 of
msgid "Add a non-resampled image to the figure."
msgstr "Agrega una imagen no remuestreada a la figura."

#: matplotlib.figure.Figure.figimage:4 of
msgid "The image is attached to the lower or upper left corner depending on *origin*."
msgstr "La imagen está conectada a la esquina inferior o superior izquierda, dependiendo del *origen*."

#: matplotlib.figure.Figure.figimage:14 of
msgid "**X**"
msgstr "**X**"

#: matplotlib.figure.Figure.figimage:10 of
msgid "The image data. This is an array of one of the following shapes:"
msgstr "Los datos de la imagen. Esta es una matriz de una de las siguientes formas:"

#: matplotlib.figure.Figure.figimage:12 of
msgid "MxN: luminance (grayscale) values"
msgstr "MxN: valores de luminancia (escala de grises)"

#: matplotlib.figure.Figure.figimage:13 of
msgid "MxNx3: RGB values"
msgstr "MxNx3: valores RVA"

#: matplotlib.figure.Figure.figimage:14 of
msgid "MxNx4: RGBA values"
msgstr "MxNx4: Valores RGBA"

#: matplotlib.figure.Figure.figimage:17 of
msgid "**xo, yo**"
msgstr "**xo, yo**"

#: matplotlib.figure.Figure.figimage:17 of
msgid "The *x*/*y* image offset in pixels."
msgstr "El desplazamiento de imagen *x*/*y* en píxeles."

#: matplotlib.artist.Artist.set_alpha:21 matplotlib.figure.Figure.figimage:20
#: of
msgid "**alpha**"
msgstr "**alfa**"

#: of
msgid "None or float"
msgstr "Ninguno o flotante"

#: matplotlib.figure.Figure.figimage:20 of
msgid "The alpha blending value."
msgstr "El valor de mezcla alfa."

#: matplotlib.figure.Figure.figimage:24 of
msgid "**norm** : `matplotlib.colors.Normalize`"
msgstr "**norma** : `matplotlib.colors.Normalize`"

#: matplotlib.figure.Figure.figimage:23 of
msgid "matplotlib.colors.Normalize"
msgstr "normalizar matplotlib.colors."

#: matplotlib.figure.Figure.figimage:23 of
msgid "A `.Normalize` instance to map the luminance to the interval [0, 1]."
msgstr "Una instancia `.Normalize` para mapear la luminancia al intervalo [0, 1]."

#: matplotlib.figure.Figure.figimage:27 of
msgid "**cmap** : str or `matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
msgstr "**cmap** : str o `matplotlib.colors.Colormap`, por defecto: :rc:`image.cmap`"

#: of
msgid "str or"
msgstr "str o"

#: matplotlib.figure.Figure.figimage:27 of
msgid "The colormap to use."
msgstr "El mapa de colores a utilizar."

#: matplotlib.figure.Figure.figimage:31 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: matplotlib.figure.Figure.figimage:30 of
msgid "If *norm* is not given, these values set the data limits for the colormap."
msgstr "Si no se da *norma*, estos valores establecen los límites de datos para el mapa de colores."

#: matplotlib.figure.Figure.figimage:35 of
msgid "**origin** : {'upper', 'lower'}, default: :rc:`image.origin`"
msgstr "**origin** : {'upper', 'lower'}, por defecto: :rc:`image.origin`"

#: of
msgid "{'upper', 'lower'}, default:"
msgstr "{'upper', 'lower'}por defecto:"

#: matplotlib.figure.Figure.figimage:34 of
msgid "Indicates where the [0, 0] index of the array is in the upper left or lower left corner of the axes."
msgstr "Indica dónde el índice [0, 0] de la matriz está en la esquina superior izquierda o inferior izquierda de los ejes."

#: matplotlib.figure.Figure.figimage:38 of
msgid "**resize**"
msgstr "**resize**"

#: matplotlib.figure.Figure.figimage:38 of
msgid "If *True*, resize the figure to match the given image size."
msgstr "Si es *True*, cambiar el tamaño de la figura para que coincida con el tamaño de la imagen dada."

#: matplotlib.figure.Figure.figimage:45 of
msgid "`matplotlib.image.FigureImage`"
msgstr "`matplotlib.image.FigureImage`"

#: matplotlib.figure.Figure.figimage:50 of
msgid "Additional kwargs are `.Artist` kwargs passed on to `.FigureImage`."
msgstr "Los kwargs adicionales son `.Artist` kwargs transmitidos a `.FigureImage`."

#: matplotlib.figure.Figure.figimage:58 of
msgid "figimage complements the Axes image (`~matplotlib.axes.Axes.imshow`) which will be resampled to fit the current Axes.  If you want a resampled image to fill the entire figure, you can define an `~matplotlib.axes.Axes` with extent [0, 0, 1, 1]."
msgstr "figimage complementa la imagen de los ejes (`~matplotlib.axes.Axes.imshow`) que será remuestreado para ajustarse a los ejes actuales. Si quieres que una imagen de nuevo muestreo llene toda la figura, puedes definir un `~matplotlib.axes.Axes` con extensión [0, 0, 1, 1]."

#: matplotlib.artist.Artist.findobj:2 of
msgid "Find artist objects."
msgstr "Buscar objetos de artista."

#: matplotlib.artist.Artist.findobj:4 of
msgid "Recursively find all `.Artist` instances contained in the artist."
msgstr "Encontrar recursivamente todas las instancias `.Artist` contenidas en el artista."

#: matplotlib.artist.Artist.findobj:16 of
msgid "**match**"
msgstr "**coincidencia**"

#: matplotlib.artist.Artist.findobj:9 of
msgid "A filter criterion for the matches. This can be"
msgstr "Un criterio de filtro para las partidas. Esto puede ser"

#: matplotlib.artist.Artist.findobj:11 of
msgid "*None*: Return all objects contained in artist."
msgstr "*Ninguno*: Devuelve todos los objetos contenidos en el artista."

#: matplotlib.artist.Artist.findobj:12 of
msgid "A function with signature ``def match(artist: Artist) -> bool``. The result will only contain artists for which the function returns *True*."
msgstr "Una función con la firma ``def match(artista: Artist) -> bool``. El resultado sólo contendrá artistas para los cuales la función devuelva *True*."

#: matplotlib.artist.Artist.findobj:15 of
msgid "A class instance: e.g., `.Line2D`. The result will only contain artists of this class or its subclasses (``isinstance`` check)."
msgstr "Una instancia de clase: p. ej., `.Line2D`. El resultado sólo contendrá artistas de esta clase o sus subclases (comprobación ``isinstance``)."

#: matplotlib.artist.Artist.findobj:19 of
msgid "**include_self**"
msgstr "**incluye_a sí mismo**"

#: matplotlib.artist.Artist.findobj:19 of
msgid "Include *self* in the list to be checked for a match."
msgstr "Incluye *self* en la lista para ser revisado por una partida."

#: matplotlib.artist.Artist.findobj:36 of
msgid "list of `.Artist`"
msgstr "lista de `.Artist`"

#: matplotlib.artist.Artist.format_cursor_data:2 of
msgid "Return a string representation of *data*."
msgstr "Devuelve una representación de cadena de *datos*."

#: matplotlib.artist.Artist.format_cursor_data:5
#: matplotlib.artist.Artist.get_cursor_data:5 of
msgid "This method is intended to be overridden by artist subclasses. As an end-user of Matplotlib you will most likely not call this method yourself."
msgstr "Este método está pensado para ser sobreescrito por subclases de artista. Como usuario final de Matplotlib probablemente no llamará a este método usted mismo."

#: matplotlib.artist.Artist.format_cursor_data:9 of
msgid "The default implementation converts ints and floats and arrays of ints and floats into a comma-separated string enclosed in square brackets, unless the artist has an associated colorbar, in which case scalar values are formatted using the colorbar's formatter."
msgstr "La implementación por defecto convierte intes y flotantes y arrays de ints y floats en una cadena separada por comas entre corchetes, a menos que el artista tenga una barra de colores asociada, en cuyo caso los valores escalares se formatean usando el formateador de la barra de colores."

#: matplotlib.artist.Artist.format_cursor_data:25 of
msgid ":obj:`get_cursor_data`"
msgstr ":obj:`obtener_datos_cursor`"

#: matplotlib.figure.Figure.frameon:2 matplotlib.figure.FigureBase.frameon:2
#: matplotlib.figure.FigureBase.get_frameon:2
#: matplotlib.figure.SubFigure.frameon:2 of
msgid "Return the figure's background patch visibility, i.e. whether the figure background will be drawn. Equivalent to ``Figure.patch.get_visible()``."
msgstr "Devuelve la visibilidad del parche de fondo de la figura, es decir, si el fondo de la figura será dibujado. Equivalente a ``Figure.patch.get_visible()``."

#: matplotlib.figure.FigureBase.gca:2 of
msgid "Get the current Axes."
msgstr "Obtener los ejes actuales."

#: matplotlib.figure.FigureBase.gca:4 of
msgid "If there is currently no Axes on this Figure, a new one is created using `.Figure.add_subplot`.  (To test whether there is currently an Axes on a Figure, check whether ``figure.axes`` is empty.  To test whether there is currently a Figure on the pyplot figure stack, check whether `.pyplot.get_fignums()` is empty.)"
msgstr "Si actualmente no hay ejes en esta figura, se crea uno nuevo usando `.Figure.add_subplot`. (Para comprobar si actualmente hay ejes en una figura, compruebe si ``figure. xes`` está vacío. Para comprobar si hay actualmente una Figura en la pila de figuras de pyplot, compruebe si `.pyplot.get_fignums()` está vacío.)"

#: matplotlib.figure.FigureBase.gca:10 of
msgid "The following kwargs are supported for ensuring the returned Axes adheres to the given projection etc., and for Axes creation if the active Axes does not exist:"
msgstr "Los siguientes kwargs son soportados para asegurar que los ejes devueltos se adhieran a la proyección dada, etc. y para creación de ejes si los ejes activos no existen:"

#: matplotlib.artist.Artist.get_agg_filter:2 of
msgid "Return filter function to be used for agg filter."
msgstr "Devuelve la función de filtro que se utilizará para el filtro agg."

#: matplotlib.artist.Artist.get_alpha:2 of
msgid "Return the alpha value used for blending - not supported on all backends."
msgstr "Devuelve el valor alfa usado para mezclar - no soportado en todos los backends."

#: matplotlib.artist.Artist.get_animated:2 of
msgid "Return whether the artist is animated."
msgstr "Devuelve si el artista está animado."

#: matplotlib.figure.FigureBase.get_children:2 of
msgid "Get a list of artists contained in the figure."
msgstr "Obtén una lista de artistas contenidos en la figura."

#: matplotlib.artist.Artist.get_clip_box:2 of
msgid "Return the clipbox."
msgstr "Devuelve el clipbox."

#: matplotlib.artist.Artist.get_clip_on:2 of
msgid "Return whether the artist uses clipping."
msgstr "Devuelve si el artist utiliza el recorte."

#: matplotlib.artist.Artist.get_clip_path:2 of
msgid "Return the clip path."
msgstr "Devuelve la ruta del clip."

#: matplotlib.figure.Figure.get_constrained_layout:2
#: matplotlib.figure.SubFigure.get_constrained_layout:2 of
msgid "Return whether constrained layout is being used."
msgstr "Devuelve si se está utilizando un diseño restringido."

#: matplotlib.figure.Figure.get_constrained_layout:4
#: matplotlib.figure.Figure.get_constrained_layout_pads:7
#: matplotlib.figure.Figure.set_constrained_layout:10
#: matplotlib.figure.Figure.set_constrained_layout_pads:7
#: matplotlib.figure.SubFigure.get_constrained_layout:4
#: matplotlib.figure.SubFigure.get_constrained_layout_pads:7 of
msgid "See :doc:`/tutorials/intermediate/constrainedlayout_guide`."
msgstr "Vea :doc:`/tutorials/intermediate/constrainedlayout_guide`."

#: matplotlib.figure.Figure.get_constrained_layout_pads:2
#: matplotlib.figure.SubFigure.get_constrained_layout_pads:2 of
msgid "Get padding for ``constrained_layout``."
msgstr "Obtener relleno para ``constrained_layout``."

#: matplotlib.figure.Figure.get_constrained_layout_pads:4
#: matplotlib.figure.SubFigure.get_constrained_layout_pads:4 of
msgid "Returns a list of ``w_pad, h_pad`` in inches and ``wspace`` and ``hspace`` as fractions of the subplot."
msgstr "Devuelve una lista de ``w_pad, h_pad`` en pulgadas y ``wspace`` y ``hspace`` como fracciones de la subparcela."

#: matplotlib.figure.Figure.get_constrained_layout_pads:25
#: matplotlib.figure.SubFigure.get_constrained_layout_pads:25 of
msgid "**relative**"
msgstr "**relativo**"

#: matplotlib.figure.Figure.get_constrained_layout_pads:12
#: matplotlib.figure.SubFigure.get_constrained_layout_pads:12 of
msgid "If `True`, then convert from inches to figure relative."
msgstr "Si `True`, entonces convertir de pulgadas a figura relativa."

#: matplotlib.artist.Artist.get_cursor_data:2 of
msgid "Return the cursor data for a given event."
msgstr "Devuelve los datos del cursor para un evento dado."

#: matplotlib.artist.Artist.get_cursor_data:9 of
msgid "Cursor data can be used by Artists to provide additional context information for a given event. The default implementation just returns *None*."
msgstr "Los datos del cursor pueden ser usados por Artistas para proporcionar información adicional de contexto para un evento determinado. La implementación por defecto sólo devuelve *Ninguno*."

#: matplotlib.artist.Artist.get_cursor_data:13 of
msgid "Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that `.format_cursor_data` can convert the data to a string representation."
msgstr "Las subclases pueden sobreescribir el método y devolver datos arbitrarios. Sin embargo, al hacerlo, deben asegurarse de que `. ormat_cursor_data` puede convertir los datos en una representación de cadena."

#: matplotlib.artist.Artist.get_cursor_data:17 of
msgid "The only current use case is displaying the z-value of an `.AxesImage` in the status bar of a plot window, while moving the mouse."
msgstr "El único caso de uso actual es mostrar el valor z-de un `.AxesImage` en la barra de estado de una ventana de parcela, mientras se mueve el ratón."

#: matplotlib.artist.Artist.get_cursor_data:30 of
msgid "**event** : `matplotlib.backend_bases.MouseEvent`"
msgstr "**event** : `matplotlib.backend_bases.MouseEvent`"

#: matplotlib.artist.Artist.get_cursor_data:29 of
msgid "matplotlib.backend_bases.MouseEvent"
msgstr "matplotlib.backend_bases.MouseEvent"

#: matplotlib.artist.Artist.get_cursor_data:35 of
msgid ":obj:`format_cursor_data`"
msgstr ":obj:`formato_cursor_datos`"

#: matplotlib.figure.Figure.get_dpi:2 of
msgid "Return the resolution in dots per inch as a float."
msgstr "Devuelve la resolución en puntos por pulgada como flotante."

#: matplotlib.figure.FigureBase.get_edgecolor:2 of
msgid "Get the edge color of the Figure rectangle."
msgstr "Obtener el color del borde del rectángulo Figura."

#: matplotlib.figure.FigureBase.get_facecolor:2 of
msgid "Get the face color of the Figure rectangle."
msgstr "Obtener el color de la cara del rectángulo Figura."

#: matplotlib.figure.Figure.get_figheight:2 of
msgid "Return the figure height in inches."
msgstr "Devuelve la altura de la figura en pulgadas."

#: matplotlib.artist.Artist.get_figure:2 of
msgid "Return the `.Figure` instance the artist belongs to."
msgstr "Devuelve la instancia `.Figure` a la que pertenece el artista."

#: matplotlib.figure.Figure.get_figwidth:2 of
msgid "Return the figure width in inches."
msgstr "Devuelve el ancho de la figura en pulgadas."

#: matplotlib.artist.Artist.get_gid:2 of
msgid "Return the group id."
msgstr "Devuelve el id del grupo."

#: matplotlib.artist.Artist.get_in_layout:2 of
msgid "Return boolean flag, ``True`` if artist is included in layout calculations."
msgstr "Devuelve la bandera booleana, ``Verdadero`` si el artista está incluido en los cálculos del diseño."

#: matplotlib.artist.Artist.get_in_layout:5 of
msgid "E.g. :doc:`/tutorials/intermediate/constrainedlayout_guide`, `.Figure.tight_layout()`, and ``fig.savefig(fname, bbox_inches='tight')``."
msgstr "Por ejemplo, :doc:`/tutorials/intermediate/constrainedlayout_guide`, `.Figure.tight_layout()`, y ``fig.savefig(fname, bbox_inches='tight')``."

#: matplotlib.artist.Artist.get_label:2 of
msgid "Return the label used for this artist in the legend."
msgstr "Devuelve la etiqueta usada para este artista en la leyenda."

#: matplotlib.figure.FigureBase.get_linewidth:2 of
msgid "Get the line width of the Figure rectangle."
msgstr "Obtener el ancho de línea del rectángulo Figura."

#: matplotlib.artist.Artist.get_picker:2 of
msgid "Return the picking behavior of the artist."
msgstr "Devuelve el comportamiento de selección del artista."

#: matplotlib.artist.Artist.get_picker:4 of
msgid "The possible values are described in `.set_picker`."
msgstr "Los valores posibles se describen en `.set_picker`."

#: matplotlib.artist.Artist.get_picker:17 of
msgid ":obj:`set_picker`, :obj:`pickable`, :obj:`pick`"
msgstr ":obj:`set_picker`, :obj:`pickable`, :obj:`pick`"

#: matplotlib.artist.Artist.get_rasterized:2 of
msgid "Return whether the artist is to be rasterized."
msgstr "Devuelve si el artista debe ser rasterizado."

#: matplotlib.figure.Figure.get_size_inches:2 of
msgid "Return the current size of the figure in inches."
msgstr "Devuelve el tamaño actual de la figura en pulgadas."

#: matplotlib.figure.Figure.get_size_inches:15 of
msgid "ndarray"
msgstr "ndarray"

#: matplotlib.figure.Figure.get_size_inches:9 of
msgid "The size (width, height) of the figure in inches."
msgstr "El tamaño (anchura, altura) de la figura en pulgadas."

#: matplotlib.figure.Figure.get_size_inches:20
#: matplotlib.figure.Figure.set_figheight:25
#: matplotlib.figure.Figure.set_figwidth:25 of
msgid ":obj:`matplotlib.figure.Figure.set_size_inches`"
msgstr ":obj:`matplotlib.figure.Figure.set_size_inches`"

#: matplotlib.figure.Figure.get_size_inches:22 of
msgid ":obj:`matplotlib.figure.Figure.get_figwidth`"
msgstr ":obj:`matplotlib.figure.Figure.get_figwidth`"

#: matplotlib.figure.Figure.get_size_inches:24 of
msgid ":obj:`matplotlib.figure.Figure.get_figheight`"
msgstr ":obj:`matplotlib.figure.Figure.get_figheight`"

#: matplotlib.figure.Figure.get_size_inches:29 of
msgid "The size in pixels can be obtained by multiplying with `Figure.dpi`."
msgstr "El tamaño en píxeles se puede obtener multiplicando con `Figure.dpi`."

#: matplotlib.artist.Artist.get_sketch_params:2 of
msgid "Return the sketch parameters for the artist."
msgstr "Devuelve los parámetros del croquis para el artista."

#: matplotlib.artist.Artist.get_sketch_params:29 of
msgid "tuple or None"
msgstr "tupla o ninguno"

#: matplotlib.artist.Artist.get_sketch_params:9 of
msgid "A 3-tuple with the following elements:"
msgstr "Una 3 tupla con los siguientes elementos:"

#: matplotlib.artist.Artist.get_sketch_params:11 of
msgid "*scale*: The amplitude of the wiggle perpendicular to the source line."
msgstr "*escala*: La amplitud de la peluca perpendicular a la línea de origen."

#: matplotlib.artist.Artist.get_sketch_params:13 of
msgid "*length*: The length of the wiggle along the line."
msgstr "*longitud*: La longitud de la peluca a lo largo de la línea."

#: matplotlib.artist.Artist.get_sketch_params:14 of
msgid "*randomness*: The scale factor by which the length is shrunken or expanded."
msgstr "*aleatoria*: El factor de escala por el cual la longitud es reducida o ampliada."

#: matplotlib.artist.Artist.get_sketch_params:17 of
msgid "Returns *None* if no sketch parameters were set."
msgstr "Devuelve *nunca* si no se han establecido parámetros de croquis."

#: matplotlib.artist.Artist.get_snap:2 of
msgid "Return the snap setting."
msgstr "Devuelve la configuración del snap."

#: matplotlib.artist.Artist.get_snap:4 of
msgid "See `.set_snap` for details."
msgstr "Vea `.set_snap` para más detalles."

#: matplotlib.figure.Figure.get_tight_layout:2 of
msgid "Return whether `.tight_layout` is called when drawing."
msgstr "Devuelve si `.tight_layout` es llamado al dibujar."

#: matplotlib.figure.FigureBase.get_tightbbox:2 of
msgid "Return a (tight) bounding box of the figure *in inches*."
msgstr "Devuelve un (fuerte) cuadro delimitador de la figura *en pulgadas*."

#: matplotlib.figure.FigureBase.get_tightbbox:4 of
msgid "Note that `.FigureBase` differs from all other artists, which return their `.Bbox` in pixels."
msgstr "Ten en cuenta que `.FigureBase` difiere de todos los otros artistas, que devuelven su `.Bbox` en píxeles."

#: matplotlib.figure.FigureBase.get_tightbbox:7 of
msgid "Artists that have ``artist.set_in_layout(False)`` are not included in the bbox."
msgstr "Los artistas que tienen ``artist.set_in_layout(False)`` no están incluidos en el cuadro."

#: matplotlib.figure.FigureBase.get_tightbbox:14 of
msgid "**renderer** : `.RendererBase` subclass"
msgstr "**renderer** : subclase `.RendererBase`"

#: matplotlib.figure.FigureBase.get_tightbbox:13 of
msgid "RendererBase subclass"
msgstr "Subclase RendererBase"

#: matplotlib.figure.FigureBase.get_tightbbox:13 of
msgid "renderer that will be used to draw the figures (i.e. ``fig.canvas.get_renderer()``)"
msgstr "renderizador que se utilizará para dibujar las figuras (es decir, ``fig.canvas.get_renderer()``)"

#: matplotlib.figure.FigureBase.get_tightbbox:19 of
msgid "**bbox_extra_artists** : list of `.Artist` or ``None``"
msgstr "**bbox_extra_artistas** : lista de `.Artist` o ``None ``"

#: matplotlib.figure.FigureBase.get_tightbbox:17 of
msgid "List of artists to include in the tight bounding box.  If ``None`` (default), then all artist children of each Axes are included in the tight bounding box."
msgstr "Lista de artistas a incluir en la caja de límites ajustada. Si ``Ninguno`` (por defecto), entonces todos los hijos de los artistas de cada ejes están incluidos en la caja de límites ajustada."

#: matplotlib.figure.FigureBase.get_tightbbox:36 of
msgid "`.BboxBase`"
msgstr "`.BboxBase`"

#: matplotlib.figure.FigureBase.get_tightbbox:24 of
msgid "containing the bounding box (in figure inches)."
msgstr "conteniendo el cuadro delimitador (en pulgadas de figura)."

#: matplotlib.artist.Artist.get_transform:2 of
msgid "Return the `.Transform` instance used by this artist."
msgstr "Devuelve la instancia `.Transform` usada por este artista."

#: matplotlib.artist.Artist.get_transformed_clip_path_and_affine:2 of
msgid "Return the clip path with the non-affine part of its transformation applied, and the remaining affine part of its transformation."
msgstr "Devuelve la ruta del clip con la parte no afectada de su transformación aplicada, y la parte afectada restante de su transformación."

#: matplotlib.artist.Artist.get_url:2 of
msgid "Return the url."
msgstr "Devuelve la url."

#: matplotlib.artist.Artist.get_visible:2 of
msgid "Return the visibility."
msgstr "Devuelve la visibilidad."

#: matplotlib.figure.FigureBase.get_window_extent:2 of
msgid "Get the artist's bounding box in display space."
msgstr "Obtenga la caja delimitadora del artist en el espacio de visualización."

#: matplotlib.figure.FigureBase.get_window_extent:4 of
msgid "The bounding box' width and height are nonnegative."
msgstr "La anchura y la altura de la caja delimitadora son no negativas."

#: matplotlib.figure.FigureBase.get_window_extent:6 of
msgid "Subclasses should override for inclusion in the bounding box \"tight\" calculation. Default is to return an empty bounding box at 0, 0."
msgstr "Las subclases deben anularlo para incluirlo en el cálculo de la caja delimitadora \"ajustada\". Por defecto devuelve una caja delimitadora vacía en 0, 0."

#: matplotlib.figure.FigureBase.get_window_extent:10 of
msgid "Be careful when using this function, the results will not update if the artist window extent of the artist changes.  The extent can change due to any changes in the transform stack, such as changing the axes limits, the figure size, or the canvas used (as is done when saving a figure).  This can lead to unexpected behavior where interactive figures will look fine on the screen, but will save incorrectly."
msgstr "Ten cuidado cuando uses esta función, los resultados no se actualizarán si la extensión de la ventana del artist cambia.  La extensión puede cambiar debido a cualquier cambio en la pila de transformaciones, como cambiar los límites de los ejes, el tamaño de la figura o el lienzo utilizado (como se hace al guardar una figura).  Esto puede llevar a un comportamiento inesperado donde las figuras interactivas se verán bien en la pantalla, pero se guardarán incorrectamente."

#: matplotlib.artist.Artist.get_zorder:2 of
msgid "Return the artist's zorder."
msgstr "Devuelve el zorder del artista."

#: matplotlib.figure.Figure.ginput:2 of
msgid "Blocking call to interact with a figure."
msgstr "Bloquear llamada para interactuar con una figura."

#: matplotlib.figure.Figure.ginput:4 of
msgid "Wait until the user clicks *n* times on the figure, and return the coordinates of each click in a list."
msgstr "Espere hasta que el usuario haga clic en *n* veces en la figura, y devuelva las coordenadas de cada clic en una lista."

#: matplotlib.figure.Figure.ginput:7 of
msgid "There are three possible interactions:"
msgstr "Hay tres interacciones posibles:"

#: matplotlib.figure.Figure.ginput:9 of
msgid "Add a point."
msgstr "Añadir un punto."

#: matplotlib.figure.Figure.ginput:10 of
msgid "Remove the most recently added point."
msgstr "Eliminar el punto añadido más recientemente."

#: matplotlib.figure.Figure.ginput:11 of
msgid "Stop the interaction and return the points added so far."
msgstr "Detener la interacción y devolver los puntos añadidos hasta ahora."

#: matplotlib.figure.Figure.ginput:13 of
msgid "The actions are assigned to mouse buttons via the arguments *mouse_add*, *mouse_pop* and *mouse_stop*."
msgstr "Las acciones se asignan a los botones del ratón a través de los argumentos *mouse_add*, *mouse_pop* y *mouse_stop*."

#: matplotlib.figure.Figure.ginput:20 of
msgid "**n**"
msgstr "**n**"

#: matplotlib.figure.Figure.ginput:19 of
msgid "Number of mouse clicks to accumulate. If negative, accumulate clicks until the input is terminated manually."
msgstr "Número de pulsaciones del ratón para acumular. Si es negativo, se acumulan clics hasta que la entrada se termine manualmente."

#: matplotlib.figure.Figure.ginput:24 of
msgid "**timeout**"
msgstr "**Tiempo de espera**"

#: of
msgid "float, default: 30 seconds"
msgstr "flotante, por defecto: 30 segundos"

#: matplotlib.figure.Figure.ginput:23 of
msgid "Number of seconds to wait before timing out. If zero or negative will never timeout."
msgstr "Número de segundos a esperar antes de agotar el tiempo de espera. Si cero o negativo nunca se agotará."

#: matplotlib.figure.Figure.ginput:27 of
msgid "**show_clicks**"
msgstr "**mostrar_clic**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.figure.Figure.ginput:27 of
msgid "If True, show a red cross at the location of each click."
msgstr "Si es verdadero, mostrar una cruz roja en la ubicación de cada clic."

#: matplotlib.figure.Figure.ginput:30 of
msgid "**mouse_add** : `.MouseButton` or None, default: `.MouseButton.LEFT`"
msgstr "**mouse_add** : `.MouseButton` o Ninguno, por defecto: `.MouseButton.LEFT`"

#: matplotlib.figure.Figure.ginput:29 of
msgid "MouseButton or None, default: MouseButton.LEFT"
msgstr "MouseButton o Ninguno, por defecto: MouseButton.LEFT"

#: matplotlib.figure.Figure.ginput:30 of
msgid "Mouse button used to add points."
msgstr "Botón del ratón utilizado para añadir puntos."

#: matplotlib.figure.Figure.ginput:33 of
msgid "**mouse_pop** : `.MouseButton` or None, default: `.MouseButton.RIGHT`"
msgstr "**mouse_pop** : `.MouseButton` o ninguno, por defecto: `.MouseButton.RIGHT`"

#: matplotlib.figure.Figure.ginput:32 of
msgid "MouseButton or None, default: MouseButton.RIGHT"
msgstr "MouseButton o Ninguno, por defecto: MouseButton.RIGHT"

#: matplotlib.figure.Figure.ginput:33 of
msgid "Mouse button used to remove the most recently added point."
msgstr "Botón del ratón usado para eliminar el punto añadido más recientemente."

#: matplotlib.figure.Figure.ginput:36 of
msgid "**mouse_stop** : `.MouseButton` or None, default: `.MouseButton.MIDDLE`"
msgstr "**mouse_stop** : `.MouseButton` o ninguno, por defecto: `.MouseButton.MIDDLE`"

#: matplotlib.figure.Figure.ginput:35 of
msgid "MouseButton or None, default: MouseButton.MIDDLE"
msgstr "MouseButton o Ninguno, por defecto: MouseButton.MIDDLE"

#: matplotlib.figure.Figure.ginput:36 of
msgid "Mouse button used to stop input."
msgstr "Botón del ratón usado para detener la entrada."

#: matplotlib.figure.Figure.ginput:48 of
msgid "list of tuples"
msgstr "lista de tubos"

#: matplotlib.figure.Figure.ginput:41 of
msgid "A list of the clicked (x, y) coordinates."
msgstr "Una lista de las coordenadas pulsadas (x, Y)."

#: matplotlib.figure.Figure.ginput:52 of
msgid "The keyboard can also be used to select points in case your mouse does not have one or more of the buttons.  The delete and backspace keys act like right clicking (i.e., remove last point), the enter key terminates input and any other key (not already used by the window manager) selects a point."
msgstr "El teclado también se puede utilizar para seleccionar puntos en caso de que el ratón no tenga uno o más de los botones. Las teclas de borrar y backspace actúan como un clic derecho (i. ., eliminar el último punto), la tecla enter termina la entrada y cualquier otra clave (no usada por el gestor de ventanas) selecciona un punto."

#: matplotlib.artist.Artist.have_units:2 of
msgid "Return whether units are set on any axis."
msgstr "Devuelve si las unidades están definidas en cualquier eje."

#: matplotlib.artist.Artist.is_transform_set:2 of
msgid "Return whether the Artist has an explicitly set transform."
msgstr "Devuelve si el Artista tiene una transforma definida explícitamente."

#: matplotlib.artist.Artist.is_transform_set:4 of
msgid "This is *True* after `.set_transform` has been called."
msgstr "Esto es *True* después de que `.set_transform` haya sido llamado."

#: matplotlib.figure.FigureBase.legend:2 of
msgid "Place a legend on the figure."
msgstr "Coloca una leyenda en la figura."

#: matplotlib.figure.FigureBase.legend:11 of
msgid "The call signatures correspond to the following different ways to use this method:"
msgstr "Las firmas de llamada corresponden a las siguientes formas diferentes de usar este método:"

#: matplotlib.figure.FigureBase.legend:14 of
msgid "**1. Automatic detection of elements to be shown in the legend**"
msgstr "**1. Detección automática de elementos a mostrar en la leyenda**"

#: matplotlib.figure.FigureBase.legend:16 of
msgid "The elements to be added to the legend are automatically determined, when you do not pass in any extra arguments."
msgstr "Los elementos a añadir a la leyenda se determinan automáticamente, cuando no se pasa ningún argumento extra."

#: matplotlib.figure.FigureBase.legend:19 of
msgid "In this case, the labels are taken from the artist. You can specify them either at artist creation or by calling the :meth:`~.Artist.set_label` method on the artist::"
msgstr "En este caso, las etiquetas son tomadas del artista. Puedes especificarlos ya sea en la creación del artista o llamando al método :meth:`~.Artist.set_label` en el artista::"

#: matplotlib.figure.FigureBase.legend:26 of
msgid "or::"
msgstr "o::"

#: matplotlib.figure.FigureBase.legend:32 of
msgid "Specific lines can be excluded from the automatic legend element selection by defining a label starting with an underscore. This is default for all artists, so calling `.Figure.legend` without any arguments and without setting the labels manually will result in no legend being drawn."
msgstr "Líneas específicas pueden ser excluidas de la selección automática de elementos de leyenda definiendo una etiqueta que comience con un guión bajo. Esto es por defecto para todos los artistas, así que llamar a `.Figure.legend` sin ningún argumento y sin establecer las etiquetas manualmente resultará en que no se dibuje ninguna leyenda."

#: matplotlib.figure.FigureBase.legend:38 of
msgid "**2. Explicitly listing the artists and labels in the legend**"
msgstr "**2. Listar explícitamente los artistas y etiquetas en la leyenda**"

#: matplotlib.figure.FigureBase.legend:40 of
msgid "For full control of which artists have a legend entry, it is possible to pass an iterable of legend artists followed by an iterable of legend labels respectively::"
msgstr "Para un control total del cual los artistas tienen una entrada de leyenda, es posible pasar un iterable de los artistas leyendas seguido por un iterable de las etiquetas respectivamente::"

#: matplotlib.figure.FigureBase.legend:46 of
msgid "**3. Explicitly listing the artists in the legend**"
msgstr "**3. Listar explícitamente los artistas en la leyenda**"

#: matplotlib.figure.FigureBase.legend:48 of
msgid "This is similar to 2, but the labels are taken from the artists' label properties. Example::"
msgstr "Esto es similar a 2, pero las etiquetas se toman de las propiedades de la etiqueta de los artistas. Ejemplo::"

#: matplotlib.figure.FigureBase.legend:55 of
msgid "**4. Labeling existing plot elements**"
msgstr "**4. Etiquetando elementos de parcela existentes**"

#: matplotlib.figure.FigureBase.legend:59 of
msgid "This call signature is discouraged, because the relation between plot elements and labels is only implicit by their order and can easily be mixed up."
msgstr "Esta firma de llamada se desanima, porque la relación entre los elementos de la parcela y las etiquetas sólo es implícita por su orden y se puede mezclar fácilmente."

#: matplotlib.figure.FigureBase.legend:63 of
msgid "To make a legend for all artists on all Axes, call this function with an iterable of strings, one for each legend item. For example::"
msgstr "Para hacer una leyenda para todos los artistas en todos los ejes, llama a esta función con una cadena iterable, una para cada objeto de leyenda. Por ejemplo::"

#: matplotlib.figure.FigureBase.legend:80 of
msgid "**handles** : list of `.Artist`, optional"
msgstr "**handles** : lista de `.Artist`, opcional"

#: matplotlib.figure.FigureBase.legend:74 of
msgid "A list of Artists (lines, patches) to be added to the legend. Use this together with *labels*, if you need full control on what is shown in the legend and the automatic mechanism described above is not sufficient."
msgstr "Una lista de Artistas (líneas, parches) a añadir a la leyenda. Usa esto junto con *etiquetas*, si necesita un control completo sobre lo que se muestra en la leyenda y el mecanismo automático descrito anteriormente no es suficiente."

#: matplotlib.figure.FigureBase.legend:79 of
msgid "The length of handles and labels should be the same in this case. If they are not, they are truncated to the smaller length."
msgstr "La longitud de las asas y las etiquetas debe ser la misma en este caso, si no lo son, se truncan a la menor longitud."

#: matplotlib.figure.FigureBase.legend:86 of
msgid "**labels**"
msgstr "**labels**"

#: of
msgid "list of str, optional"
msgstr "lista de str, opcional"

#: matplotlib.figure.FigureBase.legend:83 of
msgid "A list of labels to show next to the artists. Use this together with *handles*, if you need full control on what is shown in the legend and the automatic mechanism described above is not sufficient."
msgstr "Una lista de etiquetas para mostrar junto a los artistas. Usa esto junto con *handles*, si necesita un control completo sobre lo que se muestra en la leyenda y el mecanismo automático descrito anteriormente no es suficiente."

#: matplotlib.figure.FigureBase.legend:93 of
msgid "`~matplotlib.legend.Legend`"
msgstr "`~matplotlib.legend.Legend`"

#: matplotlib.figure.FigureBase.legend:138 of
msgid "**loc** : str or pair of floats, default: :rc:`legend.loc` ('best' for axes, 'upper right' for figures)"
msgstr "**loc** : str o par de floats, por defecto: :rc:`legend.loc` ('mejor' para ejes, 'superior derecha' para figuras)"

#: of
msgid "str or pair of floats, default:"
msgstr "str o par de flotantes, por defecto:"

#: matplotlib.figure.FigureBase.legend:98 of
msgid "The location of the legend."
msgstr "La ubicación de la leyenda."

#: matplotlib.figure.FigureBase.legend:100 of
msgid "The strings ``'upper left', 'upper right', 'lower left', 'lower right'`` place the legend at the corresponding corner of the axes/figure."
msgstr "Las cadenas ``'superior izquierda', 'superior derecha', 'inferior izquierda', 'inferior derecha'`` colocan la leyenda en la esquina correspondiente de los ejes/figura."

#: matplotlib.figure.FigureBase.legend:104 of
msgid "The strings ``'upper center', 'lower center', 'center left', 'center right'`` place the legend at the center of the corresponding edge of the axes/figure."
msgstr "Las cadenas ``'centro superior', 'centro inferior', 'centro izquierda', 'centro derecha'`` colocan la leyenda en el centro del borde correspondiente de los ejes/figura."

#: matplotlib.figure.FigureBase.legend:109 of
msgid "The string ``'center'`` places the legend at the center of the axes/figure."
msgstr "La cadena ``'center'`` coloca la leyenda en el centro de los ejes/figura."

#: matplotlib.figure.FigureBase.legend:111 of
msgid "The string ``'best'`` places the legend at the location, among the nine locations defined so far, with the minimum overlap with other drawn artists.  This option can be quite slow for plots with large amounts of data; your plotting speed may benefit from providing a specific location."
msgstr "La cadena ``'mejor'`` coloca la leyenda en la ubicación, entre los nueve lugares definidos hasta ahora, con la superposición mínima con otros artistas dibujados. Esta opción puede ser bastante lenta para parcelas con grandes cantidades de datos; su velocidad de trazado puede beneficiarse al proporcionar una ubicación específica."

#: matplotlib.figure.FigureBase.legend:116 of
msgid "The location can also be a 2-tuple giving the coordinates of the lower-left corner of the legend in axes coordinates (in which case *bbox_to_anchor* will be ignored)."
msgstr "La ubicación también puede ser una doble tupla dando las coordenadas de la esquina inferior izquierda de la leyenda en las coordenadas de los ejes (en cuyo caso se ignorará *bbox_to_anchor*)."

#: matplotlib.figure.FigureBase.legend:120 of
msgid "For back-compatibility, ``'center right'`` (but no other location) can also be spelled ``'right'``, and each \"string\" locations can also be given as a numeric value:"
msgstr "Para back-compatibility, ``'center right'`` (pero ninguna otra ubicación) también puede ser escrita ``'right'``, y cada ubicación \"string\" también puede ser dada como un valor numérico:"

#: matplotlib.figure.FigureBase.legend:125 of
msgid "Location String"
msgstr "Cadena de ubicación"

#: matplotlib.figure.FigureBase.legend:125 of
msgid "Location Code"
msgstr "Código de ubicación"

#: matplotlib.figure.FigureBase.legend:127 of
msgid "'best'"
msgstr "\"Mejor\""

#: matplotlib.figure.FigureBase.legend:127 of
msgid "0"
msgstr "0"

#: matplotlib.figure.FigureBase.legend:128 of
msgid "'upper right'"
msgstr "\"superior derecha\""

#: matplotlib.figure.FigureBase.legend:128 of
msgid "1"
msgstr "1"

#: matplotlib.figure.FigureBase.legend:129 of
msgid "'upper left'"
msgstr "'superior izquierda'"

#: matplotlib.figure.FigureBase.legend:129 of
msgid "2"
msgstr "2"

#: matplotlib.figure.FigureBase.legend:130 of
msgid "'lower left'"
msgstr "'inferior izquierda'"

#: matplotlib.figure.FigureBase.legend:130 of
msgid "3"
msgstr "3"

#: matplotlib.figure.FigureBase.legend:131 of
msgid "'lower right'"
msgstr "\"bajar derecha\""

#: matplotlib.figure.FigureBase.legend:131 of
msgid "4"
msgstr "4"

#: matplotlib.figure.FigureBase.legend:132 of
msgid "'right'"
msgstr "\"derecha\""

#: matplotlib.figure.FigureBase.legend:132 of
msgid "5"
msgstr "5"

#: matplotlib.figure.FigureBase.legend:133 of
msgid "'center left'"
msgstr "'centro izquierda'"

#: matplotlib.figure.FigureBase.legend:133 of
msgid "6"
msgstr "6"

#: matplotlib.figure.FigureBase.legend:134 of
msgid "'center right'"
msgstr "'centro derecha'"

#: matplotlib.figure.FigureBase.legend:134 of
msgid "7"
msgstr "7"

#: matplotlib.figure.FigureBase.legend:135 of
msgid "'lower center'"
msgstr "'centro inferior'"

#: matplotlib.figure.FigureBase.legend:135 of
msgid "8"
msgstr "8"

#: matplotlib.figure.FigureBase.legend:136 of
msgid "'upper center'"
msgstr "'centro superior'"

#: matplotlib.figure.FigureBase.legend:136 of
msgid "9"
msgstr "9"

#: matplotlib.figure.FigureBase.legend:137 of
msgid "'center'"
msgstr "'centro'"

#: matplotlib.figure.FigureBase.legend:137 of
msgid "10"
msgstr "10"

#: matplotlib.figure.FigureBase.legend:161 of
msgid "**bbox_to_anchor** : `.BboxBase`, 2-tuple, or 4-tuple of floats"
msgstr "**bbox_to_anchor** : `.BboxBase`, 2-tuple, o 4-tuple de puntos flotantes (floats)"

#: matplotlib.figure.FigureBase.legend:160 of
msgid "BboxBase, 2-tuple, or 4-tuple of floats"
msgstr "BboxBase, 2-tuple, o 4-tuple de puntos flotantes (floats)"

#: matplotlib.figure.FigureBase.legend:141 of
msgid "Box that is used to position the legend in conjunction with *loc*. Defaults to `axes.bbox` (if called as a method to `.Axes.legend`) or `figure.bbox` (if `.Figure.legend`).  This argument allows arbitrary placement of the legend."
msgstr "Caja que se utiliza para colocar la leyenda en conjunto con *loc*. Por defecto es `axes.bbox` (si se llama como método a `. xes.legend`) o `figure.bbox` (si `.Figure.legend`). Este argumento permite la colocación arbitraria de la leyenda."

#: matplotlib.figure.FigureBase.legend:146 of
msgid "Bbox coordinates are interpreted in the coordinate system given by *bbox_transform*, with the default transform Axes or Figure coordinates, depending on which ``legend`` is called."
msgstr "Las coordenadas de la caja se interpretan en el sistema de coordenadas dado por *bbox_transform*, con las coordenadas de transformación por defecto de los ejes o Figuras, dependiendo de qué ``leyend``."

#: matplotlib.figure.FigureBase.legend:150 of
msgid "If a 4-tuple or `.BboxBase` is given, then it specifies the bbox ``(x, y, width, height)`` that the legend is placed in. To put the legend in the best location in the bottom right quadrant of the axes (or figure)::"
msgstr "Si se da un 4-tuple o `.BboxBase`, entonces especifica el bbox ``(x, y, anchura, altura)`` en el que se coloca la leyenda. Poner la leyenda en la mejor ubicación en el cuadrante inferior derecho de los ejes (o figura)::"

#: matplotlib.figure.FigureBase.legend:157 of
msgid "A 2-tuple ``(x, y)`` places the corner of the legend specified by *loc* at x, y.  For example, to put the legend's upper right-hand corner in the center of the axes (or figure) the following keywords can be used::"
msgstr "Una 2-tupla ``(x, y)`` coloca la esquina de la leyenda especificada por *loc* en x, y. Por ejemplo, para colocar la esquina superior derecha de la leyenda en el centro de los ejes (o figura) se pueden utilizar las siguientes palabras clave::"

#: matplotlib.figure.FigureBase.legend:164 of
msgid "**ncol**"
msgstr "**ncol**"

#: matplotlib.figure.FigureBase.legend:164 of
msgid "The number of columns that the legend has."
msgstr "El número de columnas que tiene la leyenda."

#: matplotlib.figure.FigureBase.legend:168 of
msgid "**prop** : None or `matplotlib.font_manager.FontProperties` or dict"
msgstr "**prop** : Ninguno o `matplotlib.font_manager.FontProperties` o dictado"

#: of
msgid "None or"
msgstr "None o"

#: matplotlib.figure.FigureBase.legend:167 of
msgid "The font properties of the legend. If None (default), the current :data:`matplotlib.rcParams` will be used."
msgstr "Las propiedades de fuente de la leyenda. Si ninguna (por defecto), se utilizará el :data:actual `matplotlib.rcParams`."

#: matplotlib.figure.FigureBase.legend:173 of
msgid "**fontsize**"
msgstr "**fontsize**"

#: of
msgid "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
msgstr "int o {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"

#: matplotlib.figure.FigureBase.legend:171 of
msgid "The font size of the legend. If the value is numeric the size will be the absolute font size in points. String values are relative to the current default font size. This argument is only used if *prop* is not specified."
msgstr "El tamaño de fuente de la leyenda. Si el valor es numérico el tamaño será el tamaño absoluto de la fuente en puntos. Los valores de cadena son relativos al tamaño de fuente predeterminado actual. Este argumento sólo se utiliza si *prop* no se especifica."

#: matplotlib.figure.FigureBase.legend:182 of
msgid "**labelcolor** : str or list, default: :rc:`legend.labelcolor`"
msgstr "**labelcolor** : str o lista, por defecto: :rc:`legend.labelcolor`"

#: of
msgid "str or list, default:"
msgstr "str o lista, por defecto:"

#: matplotlib.figure.FigureBase.legend:176 of
msgid "The color of the text in the legend. Either a valid color string (for example, 'red'), or a list of color strings. The labelcolor can also be made to match the color of the line or marker using 'linecolor', 'markerfacecolor' (or 'mfc'), or 'markeredgecolor' (or 'mec')."
msgstr "El color del texto en la leyenda. Una cadena de color válida (por ejemplo, 'rojo'), o una lista de cadenas de colores. El color de la etiqueta también puede ser hecho para que coincida con el color de la línea o marcador usando 'color lineal', 'color marcador' (o 'mfc'), o 'color marcador' (o 'mec')."

#: matplotlib.figure.FigureBase.legend:181 of
msgid "Labelcolor can be set globally using :rc:`legend.labelcolor`. If None, use :rc:`text.color`."
msgstr "El color de etiqueta puede establecerse globalmente usando :rc:`legend.labelcolor`. Si no, utilice :rc:`text.color`."

#: matplotlib.figure.FigureBase.legend:186 of
msgid "**numpoints** : int, default: :rc:`legend.numpoints`"
msgstr "**numpoints** : int, por defecto: :rc:`legend.numpoints`"

#: of
msgid "int, default:"
msgstr "int, por defecto:"

#: matplotlib.figure.FigureBase.legend:185 of
msgid "The number of marker points in the legend when creating a legend entry for a `.Line2D` (line)."
msgstr "El número de puntos de marcador en la leyenda al crear una entrada de leyenda para un `.Line2D` (línea)."

#: matplotlib.figure.FigureBase.legend:190 of
msgid "**scatterpoints** : int, default: :rc:`legend.scatterpoints`"
msgstr "**scatterpoints** : int, por defecto: :rc:`legend.scatterpoints`"

#: matplotlib.figure.FigureBase.legend:189 of
msgid "The number of marker points in the legend when creating a legend entry for a `.PathCollection` (scatter plot)."
msgstr "El número de puntos marcadores en la leyenda cuando se crea una entrada de leyenda para un `.PathCollection` (diagrama de dispersión)."

#: matplotlib.figure.FigureBase.legend:196 of
msgid "**scatteryoffsets** : iterable of floats, default: ``[0.375, 0.5, 0.3125]``"
msgstr "**scatteryoffsets** : iterable de flotantes, por defecto: ``[0.375, 0.5, 0.3125]``"

#: of
msgid "iterable of floats, default:"
msgstr "iterable de flotantes, por defecto:"

#: matplotlib.figure.FigureBase.legend:193 of
msgid "The vertical offset (relative to the font size) for the markers created for a scatter plot legend entry. 0.0 is at the base the legend text, and 1.0 is at the top. To draw all markers at the same height, set to ``[0.5]``."
msgstr "El desplazamiento vertical (relativo al tamaño de la fuente) para los marcadores creados para una entrada de leyenda de diapositivas scatter. está en la base del texto de la leyenda, y 1.0 está en la parte superior. Para dibujar todos los marcadores a la misma altura, ajusta a ``[0.5]``."

#: matplotlib.figure.FigureBase.legend:200 of
msgid "**markerscale** : float, default: :rc:`legend.markerscale`"
msgstr "**markerscale** : float, por defecto: :rc:`legend.markerscale`"

#: matplotlib.figure.FigureBase.legend:199 of
msgid "The relative size of legend markers compared with the originally drawn ones."
msgstr "El tamaño relativo de los marcadores de leyenda en comparación con los originalmente dibujados."

#: matplotlib.figure.FigureBase.legend:204 of
msgid "**markerfirst**"
msgstr "**markerfirst**"

#: matplotlib.figure.FigureBase.legend:203 of
msgid "If *True*, legend marker is placed to the left of the legend label. If *False*, legend marker is placed to the right of the legend label."
msgstr "Si *Verdadero*, el marcador de leyenda se coloca a la izquierda de la etiqueta de leyenda. Si *False*, el marcador de leyenda se coloca a la derecha de la etiqueta de la leyenda."

#: matplotlib.figure.FigureBase.legend:207 of
msgid "**frameon** : bool, default: :rc:`legend.frameon`"
msgstr "**frameon** : bool, por defecto: :rc:`legend.frameon`"

#: matplotlib.figure.FigureBase.legend:207 of
msgid "Whether the legend should be drawn on a patch (frame)."
msgstr "Si la leyenda debe ser dibujada en un parche (fotograma)."

#: matplotlib.figure.FigureBase.legend:211 of
msgid "**fancybox** : bool, default: :rc:`legend.fancybox`"
msgstr "**fancybox** : bool, default: :rc:`legend.fancybox`"

#: matplotlib.figure.FigureBase.legend:210 of
msgid "Whether round edges should be enabled around the `.FancyBboxPatch` which makes up the legend's background."
msgstr "Si los bordes redondos deben estar habilitados alrededor del `.FancyBboxPatch` que forma el fondo de la leyenda."

#: matplotlib.figure.FigureBase.legend:214 of
msgid "**shadow** : bool, default: :rc:`legend.shadow`"
msgstr "**shadow** : bool, default: :rc:`legend.shadow`"

#: matplotlib.figure.FigureBase.legend:214 of
msgid "Whether to draw a shadow behind the legend."
msgstr "Dibujar una sombra detrás de la leyenda."

#: matplotlib.figure.FigureBase.legend:219 of
msgid "**framealpha** : float, default: :rc:`legend.framealpha`"
msgstr "**framealpha** : float, por defecto: :rc:`legend.framealpha`"

#: matplotlib.figure.FigureBase.legend:217 of
msgid "The alpha transparency of the legend's background. If *shadow* is activated and *framealpha* is ``None``, the default value is ignored."
msgstr "La transparencia alfa del fondo de la leyenda. Si *sombra* está activado y *framealpha* es ``Ninguno``, el valor por defecto es ignorado."

#: matplotlib.figure.FigureBase.legend:223 of
msgid "**facecolor** : \"inherit\" or color, default: :rc:`legend.facecolor`"
msgstr "**facecolor** : \"hereda\" o color, por defecto: :rc:`legend.facecolor`"

#: of
msgid "\"inherit\" or color, default:"
msgstr "\"hereda\" o color, por defecto:"

#: matplotlib.figure.FigureBase.legend:222 of
msgid "The legend's background color. If ``\"inherit\"``, use :rc:`axes.facecolor`."
msgstr "Color de fondo de la leyenda. Si es ``\"hereda\"``, usa :rc:`axes.facecolor`."

#: matplotlib.figure.FigureBase.legend:227 of
msgid "**edgecolor** : \"inherit\" or color, default: :rc:`legend.edgecolor`"
msgstr "**edgecolor** : \"hereda\" o color, por defecto: :rc:`legend.edgecolor`"

#: matplotlib.figure.FigureBase.legend:226 of
msgid "The legend's background patch edge color. If ``\"inherit\"``, use take :rc:`axes.edgecolor`."
msgstr "Color del borde del parche de fondo de la leyenda. Si es ``\"heredad\"``, usa tomar :rc:`axes.edgecolor`."

#: matplotlib.figure.FigureBase.legend:232 of
msgid "**mode**"
msgstr "**mode**"

#: of
msgid "{\"expand\", None}"
msgstr "{\"expandido\" (expandido)}"

#: matplotlib.figure.FigureBase.legend:230 of
msgid "If *mode* is set to ``\"expand\"`` the legend will be horizontally expanded to fill the axes area (or *bbox_to_anchor* if defines the legend's size)."
msgstr "Si *mode* está establecido en ``\"ampliar\"`` la leyenda se expandirá horizontalmente para llenar el área de los ejes (o *bbox_to_anchor* si define el tamaño de la leyenda)."

#: matplotlib.figure.FigureBase.legend:237 of
msgid "**bbox_transform** : None or `matplotlib.transforms.Transform`"
msgstr "**bbox_transform** : None o `matplotlib.transforms.Transform`"

#: matplotlib.figure.FigureBase.legend:235 of
msgid "The transform for the bounding box (*bbox_to_anchor*). For a value of ``None`` (default) the Axes' :data:`~matplotlib.axes.Axes.transAxes` transform will be used."
msgstr "La transformación para la caja de límites (*bbox_to_anchor*). Para un valor de ``Ninguno`` (por defecto) se usarán los ejes :data:`~matplotlib.axes.Axes.transAxes` transformación."

#: matplotlib.figure.FigureBase.legend:240 of
msgid "**title**"
msgstr "**título**"

#: of
msgid "str or None"
msgstr "str o None"

#: matplotlib.figure.FigureBase.legend:240 of
msgid "The legend's title. Default is no title (``None``)."
msgstr "Título de la leyenda. Por defecto no es ningún título (``Ninguno``)."

#: matplotlib.figure.FigureBase.legend:245 of
msgid "**title_fontproperties** : None or `matplotlib.font_manager.FontProperties` or dict"
msgstr "**title_fontproperties** : Ninguno o `matplotlib.font_manager.FontProperties` o dictado"

#: matplotlib.figure.FigureBase.legend:243 of
msgid "The font properties of the legend's title. If None (default), the *title_fontsize* argument will be used if present; if *title_fontsize* is also None, the current :rc:`legend.title_fontsize` will be used."
msgstr "Las propiedades de la fuente del título de la leyenda. Si Ninguno (predeterminado), se utilizará el argumento *title_fontsize* si está presente; si *title_fontsize* también es Ninguno, se usará el :rc:`legend.title_fontsize` actual."

#: matplotlib.figure.FigureBase.legend:251 of
msgid "**title_fontsize** : int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default: :rc:`legend.title_fontsize`"
msgstr "**title_fontsize** : int o {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, por defecto: :rc:`legend.title_fontsize`"

#: of
msgid "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default:"
msgstr "int o {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, por defecto:"

#: matplotlib.figure.FigureBase.legend:248 of
msgid "The font size of the legend's title. Note: This cannot be combined with *title_fontproperties*. If you want to set the fontsize alongside other font properties, use the *size* parameter in *title_fontproperties*."
msgstr "El tamaño de la fuente del título de la leyenda. Nota: Esto no puede combinarse con *title_fontproperties*. Si desea establecer el tamaño de la fuente junto con otras propiedades de la fuente, utilice el parámetro *size* en *title_fontproperties*."

#: matplotlib.figure.FigureBase.legend:254 of
msgid "**borderpad** : float, default: :rc:`legend.borderpad`"
msgstr "**borderpad** : float, por defecto: :rc:`legend.borderpad`"

#: matplotlib.figure.FigureBase.legend:254 of
msgid "The fractional whitespace inside the legend border, in font-size units."
msgstr "El espacio en blanco fraccional dentro del borde de la leyenda, en unidades de tamaño de fuente."

#: matplotlib.figure.FigureBase.legend:257 of
msgid "**labelspacing** : float, default: :rc:`legend.labelspacing`"
msgstr "**espacio de etiquetas** : flotante, por defecto: :rc:`legend.labelspacing`"

#: matplotlib.figure.FigureBase.legend:257 of
msgid "The vertical space between the legend entries, in font-size units."
msgstr "El espacio vertical entre las entradas de la leyenda, en unidades de tamaño fuente."

#: matplotlib.figure.FigureBase.legend:260 of
msgid "**handlelength** : float, default: :rc:`legend.handlelength`"
msgstr "**handlelength** : float, por defecto: :rc:`legend.handlelength`"

#: matplotlib.figure.FigureBase.legend:260 of
msgid "The length of the legend handles, in font-size units."
msgstr "La longitud de la leyenda se mantiene, en unidades de tamaño de fuente."

#: matplotlib.figure.FigureBase.legend:263 of
msgid "**handleheight** : float, default: :rc:`legend.handleheight`"
msgstr "**handleheight** : float, por defecto: :rc:`legend.handleheight`"

#: matplotlib.figure.FigureBase.legend:263 of
msgid "The height of the legend handles, in font-size units."
msgstr "La altura de la leyenda se mantiene, en unidades de tamaño fuente."

#: matplotlib.figure.FigureBase.legend:266 of
msgid "**handletextpad** : float, default: :rc:`legend.handletextpad`"
msgstr "**handletextpad** : float, por defecto: :rc:`legend.handletextpad`"

#: matplotlib.figure.FigureBase.legend:266 of
msgid "The pad between the legend handle and text, in font-size units."
msgstr "La almohadilla entre el manejador de la leyenda y el texto, en unidades de tamaño de fuente."

#: matplotlib.figure.FigureBase.legend:269 of
msgid "**borderaxespad** : float, default: :rc:`legend.borderaxespad`"
msgstr "**borderaxespad** : float, predeterminado: :rc:`legend.borderaxespad`"

#: matplotlib.figure.FigureBase.legend:269 of
msgid "The pad between the axes and legend border, in font-size units."
msgstr "La almohadilla entre los ejes y el borde de la leyenda, en unidades de tamaño fuente."

#: matplotlib.figure.FigureBase.legend:272 of
msgid "**columnspacing** : float, default: :rc:`legend.columnspacing`"
msgstr "**columnspacing** : float, por defecto: :rc:`legend.columnspacing`"

#: matplotlib.figure.FigureBase.legend:272 of
msgid "The spacing between columns, in font-size units."
msgstr "El espacio entre columnas, en unidades de tamaño de fuente."

#: matplotlib.figure.FigureBase.legend:280 of
msgid "**handler_map**"
msgstr "**handler_map**"

#: of
msgid "dict or None"
msgstr "dict o None"

#: matplotlib.figure.FigureBase.legend:275 of
msgid "The custom dictionary mapping instances or types to a legend handler. This *handler_map* updates the default handler map found at `matplotlib.legend.Legend.get_legend_handler_map`."
msgstr "The custom dictionary mapping instances or types to a legend handler. This *handler_map* updates the default handler map found at `matplotlib.legend.Legend.get_legend_handler_map`."

#: matplotlib.figure.FigureBase.legend:285 of
msgid ":obj:`.Axes.legend`"
msgstr ":obj:`.Axes.legend`"

#: matplotlib.figure.FigureBase.legend:290 of
msgid "Some artists are not supported by this function.  See :doc:`/tutorials/intermediate/legend_guide` for details."
msgstr "Algunos artistas no son soportados por esta función. Vea :doc:`/tutorials/intermediate/legend_guide` para más detalles."

#: matplotlib.figure.Figure.mouseover:2
#: matplotlib.figure.FigureBase.mouseover:2
#: matplotlib.figure.SubFigure.mouseover:2 of
msgid "If this property is set to *True*, the artist will be queried for custom context information when the mouse cursor moves over it."
msgstr "Si esta propiedad está establecida a *True*, el artist será consultado para obtener información de contexto personalizada cuando el cursor del ratón se mueva sobre él."

#: matplotlib.figure.Figure.mouseover:5
#: matplotlib.figure.FigureBase.mouseover:5
#: matplotlib.figure.SubFigure.mouseover:5 of
msgid "See also :meth:`get_cursor_data`, :class:`.ToolCursorPosition` and :class:`.NavigationToolbar2`."
msgstr "Vea también :meth:`get_cursor_data`, :class:`.ToolCursorPosition` y :class:`.NavigationToolbar2`."

#: matplotlib.artist.Artist.pchanged:2 of
msgid "Call all of the registered callbacks."
msgstr "Llama a todos los callbacks registrados."

#: matplotlib.artist.Artist.pchanged:4 of
msgid "This function is triggered internally when a property is changed."
msgstr "Esta función se activa internamente cuando se cambia una propiedad."

#: matplotlib.artist.Artist.pchanged:17
#: matplotlib.artist.Artist.remove_callback:16 of
msgid ":obj:`add_callback`"
msgstr ":obj:`add_callback`"

#: matplotlib.artist.Artist.pick:2 of
msgid "Process a pick event."
msgstr "Procesar un evento de selección."

#: matplotlib.artist.Artist.pick:4 of
msgid "Each child artist will fire a pick event if *mouseevent* is over the artist and the artist has picker set."
msgstr "Cada artista infantil lanzará un evento de elegir si *mouseevent* ha terminado el artista y el artista ha seleccionado el selector de objetos."

#: matplotlib.artist.Artist.pick:18 of
msgid ":obj:`set_picker`, :obj:`get_picker`, :obj:`pickable`"
msgstr ":obj:`set_picker`, :obj:`get_picker`, :obj:`pickable`"

#: matplotlib.artist.Artist.pickable:2 of
msgid "Return whether the artist is pickable."
msgstr "Devuelve si el artist es seleccionable."

#: matplotlib.artist.Artist.pickable:16 of
msgid ":obj:`set_picker`, :obj:`get_picker`, :obj:`pick`"
msgstr ":obj:`set_picker`, :obj:`get_picker`, :obj:`pick`"

#: matplotlib.artist.Artist.properties:2 of
msgid "Return a dictionary of all the properties of the artist."
msgstr "Devuelve un diccionario con todas las propiedades del artist."

#: matplotlib.artist.Artist.remove:2 of
msgid "Remove the artist from the figure if possible."
msgstr "Quite al artista de la figura si es posible."

#: matplotlib.artist.Artist.remove:4 of
msgid "The effect will not be visible until the figure is redrawn, e.g., with `.FigureCanvasBase.draw_idle`.  Call `~.axes.Axes.relim` to update the axes limits if desired."
msgstr "El efecto no será visible hasta que la figura sea redibujada, por ejemplo, con `.FigureCanvasBase.draw_idle`. Llame `~.axes.Axes.relim` para actualizar los límites de ejes si lo desea."

#: matplotlib.artist.Artist.remove:8 of
msgid "Note: `~.axes.Axes.relim` will not see collections even if the collection was added to the axes with *autolim* = True."
msgstr "Nota: `~.axes.Axes.relim` no verá colecciones incluso si la colección fue añadida a los ejes con *autolim* = True."

#: matplotlib.artist.Artist.remove:11 of
msgid "Note: there is no support for removing the artist's legend entry."
msgstr "Nota: no hay soporte para eliminar la entrada de la leyenda del artista."

#: matplotlib.artist.Artist.remove_callback:2 of
msgid "Remove a callback based on its observer id."
msgstr "Eliminar una devolución de llamada basada en su id de observador."

#: matplotlib.figure.Figure.savefig:2 of
msgid "Save the current figure."
msgstr "Guardar la figura actual."

#: matplotlib.figure.Figure.savefig:4 of
msgid "Call signature::"
msgstr "Firma de llamada::"

#: matplotlib.figure.Figure.savefig:12 of
msgid "The available output formats depend on the backend being used."
msgstr "Los formatos de salida disponibles dependen del backend que se utilice."

#: matplotlib.figure.Figure.savefig:33 of
msgid "**fname**"
msgstr "**fname**"

#: of
msgid "str or path-like or binary file-like"
msgstr "str o como ruta o archivo binario"

#: matplotlib.figure.Figure.savefig:17 of
msgid "A path, or a Python file-like object, or possibly some backend-dependent object such as `matplotlib.backends.backend_pdf.PdfPages`."
msgstr "Una ruta, o un objeto tipo archivo Python, o posiblemente algún objeto dependiente del backend como `matplotlib.backends.backend_pdf.PdfPages`."

#: matplotlib.figure.Figure.savefig:21 of
msgid "If *format* is set, it determines the output format, and the file is saved as *fname*.  Note that *fname* is used verbatim, and there is no attempt to make the extension, if any, of *fname* match *format*, and no extension is appended."
msgstr "Si se establece *formato*, determina el formato de salida, y el archivo se guarda como *fname*. Ten en cuenta que *fname* se usa literalmente, y no hay intento de hacer la extensión, si existe, de *fname* coincide con *format*, y no se añade ninguna extensión."

#: matplotlib.figure.Figure.savefig:26 of
msgid "If *format* is not set, then the format is inferred from the extension of *fname*, if there is one.  If *format* is not set and *fname* has no extension, then the file is saved with :rc:`savefig.format` and the appropriate extension is appended to *fname*."
msgstr "Si no se establece *formato*, el formato se inferirá de la extensión de *fname*, si hay uno. Si *format* no está establecido y *fname* no tiene extensión, entonces el archivo se guarda con :rc:`savefig. ormat` y la extensión apropiada se añade a *fname*."

#: matplotlib.figure.Figure.savefig:39 of
msgid "**dpi** : float or 'figure', default: :rc:`savefig.dpi`"
msgstr "**dpi** : float o 'figure', por defecto: :rc:`savefig.dpi`"

#: of
msgid "float or 'figure', default:"
msgstr "flotante o 'figura', por defecto:"

#: matplotlib.figure.Figure.savefig:38 of
msgid "The resolution in dots per inch.  If 'figure', use the figure's dpi value."
msgstr "La resolución en puntos por pulgada. Si es 'figura', utilice el valor dpi de la figura."

#: matplotlib.figure.Figure.savefig:43 of
msgid "**format**"
msgstr "**formato**"

#: matplotlib.figure.Figure.savefig:42 of
msgid "The file format, e.g. 'png', 'pdf', 'svg', ... The behavior when this is unset is documented under *fname*."
msgstr "El formato de archivo, p. ej., 'png', 'pdf', 'svg', ... El comportamiento cuando no está configurado está documentado bajo *fname*."

#: matplotlib.figure.Figure.savefig:55 of
msgid "**metadata**"
msgstr "**metadatos**"

#: of
msgid "dict, optional"
msgstr "dict, optional"

#: matplotlib.figure.Figure.savefig:46 of
msgid "Key/value pairs to store in the image metadata. The supported keys and defaults depend on the image format and backend:"
msgstr "Pares clave/valor para almacenar en los metadatos de la imagen. Las claves y valores por defecto compatibles dependen del formato de la imagen y del backend:"

#: matplotlib.figure.Figure.savefig:49 of
msgid "'png' with Agg backend: See the parameter ``metadata`` of `~.FigureCanvasAgg.print_png`."
msgstr "'png' con el backend Agg: Vea el parámetro ``metadata`` de `~.FigureCanvasAgg.print_png`."

#: matplotlib.figure.Figure.savefig:51 of
msgid "'pdf' with pdf backend: See the parameter ``metadata`` of `~.backend_pdf.PdfPages`."
msgstr "'pdf' con el backend de pdf: Vea el parámetro ``metadata`` de `~.backend_pdf.PdfPages`."

#: matplotlib.figure.Figure.savefig:53 of
msgid "'svg' with svg backend: See the parameter ``metadata`` of `~.FigureCanvasSVG.print_svg`."
msgstr "'svg' con svg backend: Vea el parámetro ``metadata`` de `~.FigureCanvasSVG.print_svg`."

#: matplotlib.figure.Figure.savefig:55 of
msgid "'eps' and 'ps' with PS backend: Only 'Creator' is supported."
msgstr "'eps' y 'ps' con el backend PS: sólo 'Creador' es compatible."

#: matplotlib.figure.Figure.savefig:59 of
msgid "**bbox_inches** : str or `.Bbox`, default: :rc:`savefig.bbox`"
msgstr "**bbox_inches** : str o `.Bbox`, por defecto: :rc:`savefig.bbox`"

#: matplotlib.figure.Figure.savefig:58 of
msgid "Bounding box in inches: only the given portion of the figure is saved.  If 'tight', try to figure out the tight bbox of the figure."
msgstr "Cuadro delimitador en pulgadas: sólo se guarda la porción dada de la figura. Si 'tight', trate de averiguar la caja apretada de la figura."

#: matplotlib.figure.Figure.savefig:62 of
msgid "**pad_inches** : float, default: :rc:`savefig.pad_inches`"
msgstr "**pad_inches** : float, por defecto: :rc:`savefig.pad_inches`"

#: matplotlib.figure.Figure.savefig:62 of
msgid "Amount of padding around the figure when bbox_inches is 'tight'."
msgstr "Cantidad de relleno alrededor de la figura cuando bbox_inches es 'apretado'."

#: matplotlib.figure.Figure.savefig:66 of
msgid "**facecolor** : color or 'auto', default: :rc:`savefig.facecolor`"
msgstr "**facecolor** : color o 'auto', por defecto: :rc:`savefig.facecolor`"

#: of
msgid "color or 'auto', default:"
msgstr "color o 'auto', por defecto:"

#: matplotlib.figure.Figure.savefig:65 of
msgid "The facecolor of the figure.  If 'auto', use the current figure facecolor."
msgstr "El color de cara de la figura. Si 'auto', use el color de la figura actual."

#: matplotlib.figure.Figure.savefig:70 of
msgid "**edgecolor** : color or 'auto', default: :rc:`savefig.edgecolor`"
msgstr "**edgecolor** : color or 'auto', default: :rc:`savefig.edgecolor`"

#: matplotlib.figure.Figure.savefig:69 of
msgid "The edgecolor of the figure.  If 'auto', use the current figure edgecolor."
msgstr "El color del borde de la figura. Si 'auto', utilice el color de la figura actual."

#: matplotlib.figure.Figure.savefig:78 of
msgid "**backend**"
msgstr "**backend**"

#: of
msgid "str, optional"
msgstr "str, opcional"

#: matplotlib.figure.Figure.savefig:73 of
msgid "Use a non-default backend to render the file, e.g. to render a png file with the \"cairo\" backend rather than the default \"agg\", or a pdf file with the \"pgf\" backend rather than the default \"pdf\".  Note that the default backend is normally sufficient.  See :ref:`the-builtin-backends` for a list of valid backends for each file format.  Custom backends can be referenced as \"module://...\"."
msgstr "Utilice un backend no predeterminado para renderizar el archivo, p.ej. para renderizar un archivo png con el \"cairo\" backend en lugar de la \"agg\" predeterminada o un archivo pdf con el backend \"pgf\" en lugar del predeterminado \"pdf\". Tenga en cuenta que el backend por defecto normalmente es suficiente. Vea :ref:`the-builtin-backends` para una lista de backends válidos para cada formato de archivo. Los backends personalizados pueden ser referenciados como \"module://...\"."

#: matplotlib.figure.Figure.savefig:81 of
msgid "**orientation**"
msgstr "**orientación**"

#: of
msgid "{'landscape', 'portrait'}"
msgstr "{'landscape', 'portrait'}"

#: matplotlib.figure.Figure.savefig:81 of
msgid "Currently only supported by the postscript backend."
msgstr "Actualmente sólo está soportado por el backend postscript."

#: matplotlib.figure.Figure.savefig:86 of
msgid "**papertype**"
msgstr "**Tipo de papel**"

#: matplotlib.figure.Figure.savefig:84 of
msgid "One of 'letter', 'legal', 'executive', 'ledger', 'a0' through 'a10', 'b0' through 'b10'. Only supported for postscript output."
msgstr "Uno de 'letter', 'legal', 'executive', 'ledger', 'a0' a 'a10', 'b0' a 'b10'. Sólo soportado para la salida postscript."

#: matplotlib.figure.Figure.savefig:102 of
msgid "**transparent**"
msgstr "**transparente**"

#: matplotlib.figure.Figure.savefig:89 of
msgid "If *True*, the Axes patches will all be transparent; the Figure patch will also be transparent unless *facecolor* and/or *edgecolor* are specified via kwargs."
msgstr "Si es *Verdadero*, los parches de ejes serán transparentes; el parche Figura también será transparente a menos que se especifique *color cara* y/o *borde*."

#: matplotlib.figure.Figure.savefig:93 of
msgid "If *False* has no effect and the color of the Axes and Figure patches are unchanged (unless the Figure patch is specified via the *facecolor* and/or *edgecolor* keyword arguments in which case those colors are used)."
msgstr "Si *False* no tiene efecto y el color de los parches de Ejes y Figuras no se modificará (a menos que el parche Figura se especifique a través de los argumentos de palabra clave *cara* y/o *color* en cuyo caso se usarán esos colores)."

#: matplotlib.figure.Figure.savefig:98 of
msgid "The transparency of these patches will be restored to their original values upon exit of this function."
msgstr "La transparencia de estos parches será restaurada a sus valores originales al salir de esta función."

#: matplotlib.figure.Figure.savefig:101 of
msgid "This is useful, for example, for displaying a plot on top of a colored background on a web page."
msgstr "Esto es útil, por ejemplo, para mostrar una trama encima de un fondo de color en una página web."

#: matplotlib.figure.Figure.savefig:106 of
msgid "**bbox_extra_artists** : list of `~matplotlib.artist.Artist`, optional"
msgstr "**bbox_extra_artistas** : lista de `~matplotlib.artist.Artist`, opcional"

#: matplotlib.figure.Figure.savefig:105 of
msgid "A list of extra artists that will be considered when the tight bbox is calculated."
msgstr "Una lista de artistas adicionales que se considerarán cuando se calcule la caja ajustada."

#: matplotlib.figure.Figure.savefig:119 of
msgid "**pil_kwargs**"
msgstr "**pil_kwargs**"

#: matplotlib.figure.Figure.savefig:109 of
msgid "Additional keyword arguments that are passed to `PIL.Image.Image.save` when saving the figure."
msgstr "Argumentos adicionales de palabras clave que se pasan a `PIL.Image.save` al guardar la figura."

#: matplotlib.figure.FigureBase.sca:2 of
msgid "Set the current Axes to be *a* and return *a*."
msgstr "Establece los ejes actuales para ser *a* y devolver *a*."

#: matplotlib.artist.Figure.set:2 matplotlib.artist.FigureBase.set:2
#: matplotlib.artist.SubFigure.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.Figure.set:4 matplotlib.artist.FigureBase.set:4
#: matplotlib.artist.SubFigure.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.Artist.set_agg_filter:2 of
msgid "Set the agg filter."
msgstr "Establece el filtro de agg."

#: matplotlib.artist.Artist.set_agg_filter:25 of
msgid "**filter_func**"
msgstr "**filtro_función**"

#: matplotlib.artist.Artist.set_agg_filter:8 of
msgid "A filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array."
msgstr "Una función de filtro, que toma un array (m, n, 3) flotante y un valor dpi, y devuelve un array (m, n, 3)."

#: matplotlib.artist.Artist.set_alpha:2 of
msgid "Set the alpha value used for blending - not supported on all backends."
msgstr "Establece el valor alfa usado para mezclar - no soportado en todos los backends."

#: matplotlib.artist.Artist.set_alpha:8 of
msgid "*alpha* must be within the 0-1 range, inclusive."
msgstr "*alpha* debe estar dentro del rango 0-1, inclusive."

#: matplotlib.artist.Artist.set_animated:2 of
msgid "Set whether the artist is intended to be used in an animation."
msgstr "Establecer si el artista está destinado a ser utilizado en una animación."

#: matplotlib.artist.Artist.set_animated:4 of
msgid "If True, the artist is excluded from regular drawing of the figure. You have to call `.Figure.draw_artist` / `.Axes.draw_artist` explicitly on the artist. This appoach is used to speed up animations using blitting."
msgstr "Si es verdadero, el artista está excluido del dibujo normal de la figura. Tienes que llamar a `.Figure.draw_artist` / `. xes.draw_artist` explícitamente sobre el artista. Este appoach se utiliza para acelerar las animaciones usando chupando."

#: matplotlib.artist.Artist.set_animated:9 of
msgid "See also `matplotlib.animation` and :doc:`/tutorials/advanced/blitting`."
msgstr "Vea también `matplotlib.animation` y :doc:`/tutorials/advanced/blitting`."

#: matplotlib.artist.Artist.set_animated:28
#: matplotlib.artist.Artist.set_clip_on:23
#: matplotlib.artist.Artist.set_visible:21
#: matplotlib.figure.FigureBase.set_frameon:23 of
msgid "**b**"
msgstr "**b**"

#: matplotlib.figure.Figure.set_canvas:2 of
msgid "Set the canvas that contains the figure"
msgstr "Define el lienzo que contiene la figura"

#: matplotlib.figure.Figure.set_canvas:21 of
msgid "**canvas**"
msgstr "**canvas**"

#: matplotlib.artist.Artist.set_clip_box:2 of
msgid "Set the artist's clip `.Bbox`."
msgstr "Establecer el clip del artista `.Bbox`."

#: matplotlib.artist.Artist.set_clip_box:21 of
msgid "**clipbox** : `.Bbox`"
msgstr "**clipbox** : `.Bbox`"

#: matplotlib.artist.Artist.set_clip_box:20 of
msgid "Bbox"
msgstr "Bbox"

#: matplotlib.artist.Artist.set_clip_on:2 of
msgid "Set whether the artist uses clipping."
msgstr "Establecer si el artista utiliza el recorte."

#: matplotlib.artist.Artist.set_clip_on:4 of
msgid "When False artists will be visible outside of the axes which can lead to unexpected results."
msgstr "Cuando es False los artistas serán visibles fuera de los ejes lo que puede llevar a resultados inesperados."

#: matplotlib.artist.Artist.set_clip_path:2 of
msgid "Set the artist's clip path."
msgstr "Establecer la ruta del clip del artista."

#: matplotlib.artist.Artist.set_clip_path:9 of
msgid "**path** : `.Patch` or `.Path` or `.TransformedPath` or None"
msgstr "**ruta** : `.Patch` o `.Path` o `.TransformedPath` o None"

#: matplotlib.artist.Artist.set_clip_path:8 of
msgid "Patch or Path or TransformedPath or None"
msgstr "Patch o Path o TransformedPath o None"

#: matplotlib.artist.Artist.set_clip_path:8 of
msgid "The clip path. If given a `.Path`, *transform* must be provided as well. If *None*, a previously set clip path is removed."
msgstr "La ruta del clip. Si se le da un `.Path`, se debe proporcionar también *transform*. Si *None*, se elimina la ruta de recorte previamente establecida."

#: matplotlib.artist.Artist.set_clip_path:21 of
msgid "**transform** : `~matplotlib.transforms.Transform`, optional"
msgstr "**transformación** : `~matplotlib.transforms.Transform`, opcional"

#: matplotlib.artist.Artist.set_clip_path:20 of
msgid "Transform, optional"
msgstr "Transformación, opcional"

#: matplotlib.artist.Artist.set_clip_path:12 of
msgid "Only used if *path* is a `.Path`, in which case the given `.Path` is converted to a `.TransformedPath` using *transform*."
msgstr "Sólo se utiliza si *path* es un `.Path`, en cuyo caso el `.Path` dado se convierte en un `.TransformedPath` utilizando *transform*."

#: matplotlib.artist.Artist.set_clip_path:25 of
msgid "For efficiency, if *path* is a `.Rectangle` this method will set the clipping box to the corresponding rectangle and set the clipping path to ``None``."
msgstr "Por eficiencia, si *ruta* es un `.Rectángulo` este método establecerá la caja de recorte al rectángulo correspondiente y establecerá la ruta de recorte a ``Ninguna``."

#: matplotlib.artist.Artist.set_clip_path:29 of
msgid "For technical reasons (support of `~.Artist.set`), a tuple (*path*, *transform*) is also accepted as a single positional parameter."
msgstr "Por razones técnicas (soporte de `~.Artist.set`), también se acepta una tupla (*ruta*, *transformación*) como parámetro posicional único."

#: matplotlib.figure.Figure.set_constrained_layout:2 of
msgid "Set whether ``constrained_layout`` is used upon drawing. If None, :rc:`figure.constrained_layout.use` value will be used."
msgstr "Establece si ``constrained_layout`` es usado al dibujar. Si no, se usará el valor :rc:`figure.constrained_layout.use`."

#: matplotlib.figure.Figure.set_constrained_layout:5 of
msgid "When providing a dict containing the keys `w_pad`, `h_pad` the default ``constrained_layout`` paddings will be overridden.  These pads are in inches and default to 3.0/72.0. ``w_pad`` is the width padding and ``h_pad`` is the height padding."
msgstr "Cuando se proporciona un dictado que contiene las claves `w_pad`, `h_pad` los repuestos ``constrained_layout`` por defecto serán anulados. Estos pads están en pulgadas y por defecto en 3.0/72.0. ``w_pad`` es el relleno de ancho y ``h_pad`` es el relleno de altura."

#: matplotlib.figure.Figure.set_constrained_layout:28 of
msgid "**constrained**"
msgstr "**restringido**"

#: matplotlib.figure.Figure.set_constrained_layout_pads:2 of
msgid "Set padding for ``constrained_layout``."
msgstr "Establecer relleno para ``constrained_layout``."

#: matplotlib.figure.Figure.set_constrained_layout_pads:4 of
msgid "Tip: The parameters can be passed from a dictionary by using ``fig.set_constrained_layout(**pad_dict)``."
msgstr "Sugerencia: Los parámetros se pueden pasar desde un diccionario usando ``fig.set_constrained_layout(**pad_dict)``."

#: matplotlib.figure.Figure.set_constrained_layout_pads:14 of
msgid "**w_pad** : float, default: :rc:`figure.constrained_layout.w_pad`"
msgstr "**w_pad** : float, por defecto: :rc:`figure.constrained_layout.w_pad`"

#: matplotlib.figure.Figure.set_constrained_layout_pads:12 of
msgid "Width padding in inches.  This is the pad around Axes and is meant to make sure there is enough room for fonts to look good.  Defaults to 3 pts = 0.04167 inches"
msgstr "Relleno ancho en pulgadas. Esta es la almohadilla alrededor de los ejes y está destinada a asegurarse de que haya suficiente espacio para que las fuentes luzcan bien. Por defecto es 3 pts = 0.04167 pulgadas"

#: matplotlib.figure.Figure.set_constrained_layout_pads:17 of
msgid "**h_pad** : float, default: :rc:`figure.constrained_layout.h_pad`"
msgstr "**h_pad** : float, por defecto: :rc:`figure.constrained_layout.h_pad`"

#: matplotlib.figure.Figure.set_constrained_layout_pads:17 of
msgid "Height padding in inches. Defaults to 3 pts."
msgstr "Relleno alto en pulgadas. Por defecto es de 3 pts."

#: matplotlib.figure.Figure.set_constrained_layout_pads:21 of
msgid "**wspace** : float, default: :rc:`figure.constrained_layout.wspace`"
msgstr "**wspace** : float, default: :rc:`figure.constrained_layout.wspace`"

#: matplotlib.figure.Figure.set_constrained_layout_pads:20 of
msgid "Width padding between subplots, expressed as a fraction of the subplot width.  The total padding ends up being w_pad + wspace."
msgstr "Relleno de ancho entre subparcelas, expresado como una fracción de la anchura de la parcela."

#: matplotlib.figure.Figure.set_constrained_layout_pads:38 of
msgid "**hspace** : float, default: :rc:`figure.constrained_layout.hspace`"
msgstr "**hspace** : float, por defecto: :rc:`figure.constrained_layout.hspace`"

#: matplotlib.figure.Figure.set_constrained_layout_pads:24 of
msgid "Height padding between subplots, expressed as a fraction of the subplot width. The total padding ends up being h_pad + hspace."
msgstr "Relleno alto entre subparcelas, expresado como una fracción del ancho de la parcela."

#: matplotlib.figure.Figure.set_dpi:2 of
msgid "Set the resolution of the figure in dots-per-inch."
msgstr "Establece la resolución de la figura en los puntos porini."

#: matplotlib.figure.Figure.set_dpi:21 matplotlib.figure.Figure.set_figheight:8
#: matplotlib.figure.Figure.set_figwidth:8 of
msgid "**val**"
msgstr "**val**"

#: matplotlib.figure.FigureBase.set_edgecolor:2 of
msgid "Set the edge color of the Figure rectangle."
msgstr "Define el color del borde del rectángulo Figura."

#: matplotlib.figure.FigureBase.set_edgecolor:21
#: matplotlib.figure.FigureBase.set_facecolor:21 of
msgid "**color**"
msgstr "**color**"

#: matplotlib.figure.FigureBase.set_facecolor:2 of
msgid "Set the face color of the Figure rectangle."
msgstr "Define el color de la cara del rectángulo de la Figura."

#: matplotlib.figure.Figure.set_figheight:2 of
msgid "Set the height of the figure in inches."
msgstr "Define la altura de la figura en pulgadas."

#: matplotlib.figure.Figure.set_figheight:18
#: matplotlib.figure.Figure.set_figwidth:18
#: matplotlib.figure.Figure.set_size_inches:27 of
msgid "**forward**"
msgstr "**Adelante**"

#: matplotlib.figure.Figure.set_figheight:11
#: matplotlib.figure.Figure.set_figwidth:11 of
msgid "See `set_size_inches`."
msgstr "Vea `set_size_inches`."

#: matplotlib.figure.Figure.set_figheight:23
#: matplotlib.figure.Figure.set_size_inches:34 of
msgid ":obj:`matplotlib.figure.Figure.set_figwidth`"
msgstr ":obj:`matplotlib.figure.Figure.set_figwidth`"

#: matplotlib.artist.Artist.set_figure:2 of
msgid "Set the `.Figure` instance the artist belongs to."
msgstr "Establece la instancia `.Figure` a la que pertenece el artist."

#: matplotlib.artist.Artist.set_figure:21 of
msgid "**fig** : `.Figure`"
msgstr "**fig** : `.Figure`"

#: matplotlib.artist.Artist.set_figure:20 of
msgid "Figure"
msgstr "Figura"

#: matplotlib.figure.Figure.set_figwidth:2 of
msgid "Set the width of the figure in inches."
msgstr "Define el ancho de la figura en pulgadas."

#: matplotlib.figure.Figure.set_figwidth:23
#: matplotlib.figure.Figure.set_size_inches:36 of
msgid ":obj:`matplotlib.figure.Figure.set_figheight`"
msgstr ":obj:`matplotlib.figure.Figure.set_figheight`"

#: matplotlib.figure.FigureBase.set_frameon:2 of
msgid "Set the figure's background patch visibility, i.e. whether the figure background will be drawn. Equivalent to ``Figure.patch.set_visible()``."
msgstr "Establece la visibilidad del parche de fondo de la figura, es decir, si el fondo de la figura será dibujado. Equivalente a ``Figure.patch.set_visible()``."

#: matplotlib.artist.Artist.set_gid:2 of
msgid "Set the (group) id for the artist."
msgstr "Establece el id (grupo) para el artista."

#: matplotlib.artist.Artist.set_gid:21 of
msgid "**gid**"
msgstr "**gid**"

#: matplotlib.artist.Artist.set_in_layout:2 of
msgid "Set if artist is to be included in layout calculations, E.g. :doc:`/tutorials/intermediate/constrainedlayout_guide`, `.Figure.tight_layout()`, and ``fig.savefig(fname, bbox_inches='tight')``."
msgstr "Establece si el artista debe ser incluido en los cálculos del diseño, por ejemplo, :doc:`/tutorials/intermediate/constrainedlayout_guide`, `.Figure.tight_layout()`, y ``fig.savefig(fname, bbox_inches='tight')``."

#: matplotlib.artist.Artist.set_in_layout:24 of
msgid "**in_layout**"
msgstr "**en_diseño**"

#: matplotlib.artist.Artist.set_label:2 of
msgid "Set a label that will be displayed in the legend."
msgstr "Establece una etiqueta que se mostrará en la leyenda."

#: matplotlib.artist.Artist.set_label:21 matplotlib.figure.FigureBase.text:13
#: of
msgid "**s**"
msgstr "**s**"

#: matplotlib.artist.Artist.set_label:8 of
msgid "*s* will be converted to a string by calling `str`."
msgstr "*s* se convertirá en una cadena llamando a `str`."

#: matplotlib.figure.FigureBase.set_linewidth:2 of
msgid "Set the line width of the Figure rectangle."
msgstr "Define el ancho de línea del rectángulo Figura."

#: matplotlib.artist.Artist.set_path_effects:2 of
msgid "Set the path effects."
msgstr "Establecer los efectos de la ruta."

#: matplotlib.artist.Artist.set_path_effects:21 of
msgid "**path_effects** : `.AbstractPathEffect`"
msgstr "**path_effects** : `.AbstractPathEffect`"

#: matplotlib.artist.Artist.set_path_effects:20 of
msgid "AbstractPathEffect"
msgstr "Efecto de ruta abstracta"

#: matplotlib.artist.Artist.set_picker:2 of
msgid "Define the picking behavior of the artist."
msgstr "Definir el comportamiento de selección del artista."

#: matplotlib.artist.Artist.set_picker:45 of
msgid "**picker**"
msgstr "**seleccionador**"

#: matplotlib.artist.Artist.set_picker:8 of
msgid "This can be one of the following:"
msgstr "Esto puede ser uno de los siguientes:"

#: matplotlib.artist.Artist.set_picker:10 of
msgid "*None*: Picking is disabled for this artist (default)."
msgstr "*Ninguno*: La selección está deshabilitada para este artista (por defecto)."

#: matplotlib.artist.Artist.set_picker:12 of
msgid "A boolean: If *True* then picking will be enabled and the artist will fire a pick event if the mouse event is over the artist."
msgstr "Un booleano: Si *Verdadero* entonces se habilitará la selección y el artista disparará un evento de elegir si el evento del ratón está sobre el artista."

#: matplotlib.artist.Artist.set_picker:16 of
msgid "A float: If picker is a number it is interpreted as an epsilon tolerance in points and the artist will fire off an event if its data is within epsilon of the mouse event.  For some artists like lines and patch collections, the artist may provide additional data to the pick event that is generated, e.g., the indices of the data within epsilon of the pick event"
msgstr "Un float: Si el selector es un número, se interpreta como una tolerancia de epsilones en los puntos y el artista lanzará un evento si sus datos se encuentran dentro del epsilón del evento del ratón. Para algunos artistas como líneas y colecciones de parches, el artista puede proporcionar datos adicionales al evento de selección que se genere. ., los índices de los datos dentro del epsilón del evento de elección"

#: matplotlib.artist.Artist.set_picker:24 of
msgid "A function: If picker is callable, it is a user supplied function which determines whether the artist is hit by the mouse event::"
msgstr "Una función: Si el selector es llamable, es una función suministrada por el usuario que determina si el artista es golpeado por el evento del ratón::"

#: matplotlib.artist.Artist.set_picker:30 of
msgid "to determine the hit test.  if the mouse event is over the artist, return *hit=True* and props is a dictionary of properties you want added to the PickEvent attributes."
msgstr "para determinar la prueba de éxito. si el evento del ratón está sobre el artista, devuelve *hit=True* y props es un diccionario de propiedades que desea añadir a los atributos de PickEvent."

#: matplotlib.artist.Artist.set_rasterized:2 of
msgid "Force rasterized (bitmap) drawing for vector graphics output."
msgstr "Forzar dibujo rasterizado (mapa de bits) para salida de gráficos vectoriales."

#: matplotlib.artist.Artist.set_rasterized:4 of
msgid "Rasterized drawing is not supported by all artists. If you try to enable this on an artist that does not support it, the command has no effect and a warning will be issued."
msgstr "El dibujo asterizado no es apoyado por todos los artistas. Si intenta activar esto en un artista que no lo soporta, el comando no tiene efecto y se emitirá una advertencia."

#: matplotlib.artist.Artist.set_rasterized:8 of
msgid "This setting is ignored for pixel-based output."
msgstr "Este ajuste se ignora para la salida basada en píxeles."

#: matplotlib.artist.Artist.set_rasterized:10 of
msgid "See also :doc:`/gallery/misc/rasterization_demo`."
msgstr "Vea también :doc:`/gallery/misc/rasterization_demo`."

#: matplotlib.artist.Artist.set_rasterized:28 of
msgid "**rasterized**"
msgstr "**rasterizó**"

#: matplotlib.figure.Figure.set_size_inches:2 of
msgid "Set the figure size in inches."
msgstr "Establece el tamaño de la figura en pulgadas."

#: matplotlib.figure.Figure.set_size_inches:13 of
msgid "**w**"
msgstr "**w**"

#: matplotlib.figure.Figure.set_size_inches:12 of
msgid "Width and height in inches (if height not specified as a separate argument) or width."
msgstr "Ancho y altura en pulgadas (si la altura no se especifica como un argumento separado) o ancho."

#: matplotlib.figure.Figure.set_size_inches:16 of
msgid "**h**"
msgstr "**h**"

#: matplotlib.figure.Figure.set_size_inches:16 of
msgid "Height in inches."
msgstr "Altura en pulgadas."

#: matplotlib.figure.Figure.set_size_inches:19 of
msgid "If ``True``, the canvas size is automatically updated, e.g., you can resize the figure window from the shell."
msgstr "Si es ``True``, el tamaño del lienzo se actualiza automáticamente, por ejemplo, puede cambiar el tamaño de la ventana de figura desde el shell."

#: matplotlib.figure.Figure.set_size_inches:32 of
msgid ":obj:`matplotlib.figure.Figure.get_size_inches`"
msgstr ":obj:`matplotlib.figure.Figure.get_size_inches`"

#: matplotlib.figure.Figure.set_size_inches:41 of
msgid "To transform from pixels to inches divide by `Figure.dpi`."
msgstr "Para transformar de píxeles a pulgadas dividir por `Figure.dpi`."

#: matplotlib.artist.Artist.set_sketch_params:2 of
msgid "Set the sketch parameters."
msgstr "Establecer los parámetros del croquis."

#: matplotlib.artist.Artist.set_sketch_params:10 of
msgid "**scale**"
msgstr "**escala**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.artist.Artist.set_sketch_params:8 of
msgid "The amplitude of the wiggle perpendicular to the source line, in pixels.  If scale is `None`, or not provided, no sketch filter will be provided."
msgstr "La amplitud de la muñeca perpendicular a la línea de origen, en píxeles. Si la escala es `Ninguno`, o no proporcionada, no se proporcionará ningún filtro de croquis."

#: matplotlib.artist.Artist.set_sketch_params:14 of
msgid "**length**"
msgstr "**length**"

#: matplotlib.artist.Artist.set_sketch_params:13 of
msgid "The length of the wiggle along the line, in pixels (default 128.0)"
msgstr "La longitud del muñeco a lo largo de la línea, en píxeles (por defecto 128.0)"

#: matplotlib.artist.Artist.set_sketch_params:36 of
msgid "**randomness**"
msgstr "**aleatoria**"

#: matplotlib.artist.Artist.set_sketch_params:17 of
msgid "The scale factor by which the length is shrunken or expanded (default 16.0)"
msgstr "El factor de escala por el cual la longitud está reducida o expandida (por defecto 16.0)"

#: matplotlib.artist.Artist.set_sketch_params:20 of
msgid "The PGF backend uses this argument as an RNG seed and not as described above. Using the same seed yields the same random shape."
msgstr "El backend de PGF utiliza este argumento como semilla de RNG y no como se describe anteriormente. Usar la misma semilla produce la misma forma aleatoria."

#: matplotlib.artist.Artist.set_snap:2 of
msgid "Set the snapping behavior."
msgstr "Establece el comportamiento de desguace."

#: matplotlib.artist.Artist.set_snap:4 of
msgid "Snapping aligns positions with the pixel grid, which results in clearer images. For example, if a black line of 1px width was defined at a position in between two pixels, the resulting image would contain the interpolated value of that line in the pixel grid, which would be a grey value on both adjacent pixel positions. In contrast, snapping will move the line to the nearest integer pixel value, so that the resulting image will really contain a 1px wide black line."
msgstr "Ajustando posiciones altas con la cuadrícula de píxeles, lo que resulta en imágenes más claras. Por ejemplo, si una línea negra de 1px de ancho fue definida en una posición entre dos píxeles, la imagen resultante contendría el valor interpolado de esa línea en la cuadrícula de píxeles, que sería un valor gris en ambas posiciones de píxeles adyacentes. En contraste, el snapping moverá la línea al valor entero de píxel más cercano. para que la imagen resultante contenga realmente una línea negra de 1px."

#: matplotlib.artist.Artist.set_snap:13 of
msgid "Snapping is currently only supported by the Agg and MacOSX backends."
msgstr "El ajuste sólo está soportado actualmente por los backends Agg y MacOSX."

#: matplotlib.artist.Artist.set_snap:36 of
msgid "**snap**"
msgstr "**snap**"

#: matplotlib.artist.Artist.set_snap:18 of
msgid "Possible values:"
msgstr "Valores posibles:"

#: matplotlib.artist.Artist.set_snap:20 of
msgid "*True*: Snap vertices to the nearest pixel center."
msgstr "*Verdadero*: Ajustar los vértices al centro de píxeles más cercano."

#: matplotlib.artist.Artist.set_snap:21 of
msgid "*False*: Do not modify vertex positions."
msgstr "*Falso*: No modifique las posiciones de los vértices."

#: matplotlib.artist.Artist.set_snap:22 of
msgid "*None*: (auto) If the path contains only rectilinear line segments, round to the nearest pixel center."
msgstr "*Ninguno*: (auto) Si la ruta contiene sólo segmentos rectilineales, redondea al centro de píxeles más cercano."

#: matplotlib.figure.Figure.set_tight_layout:2 of
msgid "Set whether and how `.tight_layout` is called when drawing."
msgstr "Establece si y cómo se llama a `.tight_layout` al dibujar."

#: matplotlib.figure.Figure.set_tight_layout:24 of
msgid "**tight**"
msgstr "**endurecido**"

#: matplotlib.figure.Figure.set_tight_layout:8 of
msgid "If a bool, sets whether to call `.tight_layout` upon drawing. If ``None``, use :rc:`figure.autolayout` instead. If a dict, pass it as kwargs to `.tight_layout`, overriding the default paddings."
msgstr "Si un bool, establece si llamar a `.tight_layout` al dibujar. Si es ``nunca``, usa :rc:`figure. En su lugar, utolayout`. Si un dictamen, pasarlo como kwargs a `.tight_layout`, anulando los repuestos predeterminados."

#: matplotlib.artist.Artist.set_transform:2 of
msgid "Set the artist transform."
msgstr "Establece la transformación del artista."

#: matplotlib.artist.Artist.set_transform:21 of
msgid "**t** : `.Transform`"
msgstr "**t** : `.Transform`"

#: matplotlib.artist.Artist.set_transform:20 of
msgid "Transform"
msgstr "Transformar"

#: matplotlib.artist.Artist.set_url:2 of
msgid "Set the url for the artist."
msgstr "Establecer la url para el artista."

#: matplotlib.artist.Artist.set_url:21 of
msgid "**url**"
msgstr "**url**"

#: matplotlib.artist.Artist.set_visible:2 of
msgid "Set the artist's visibility."
msgstr "Establecer la visibilidad del artista."

#: matplotlib.artist.Artist.set_zorder:2 of
msgid "Set the zorder for the artist.  Artists with lower zorder values are drawn first."
msgstr "Establecer el zorder para el artista. Los artistas con valores de zorder más bajos se dibujan primero."

#: matplotlib.artist.Artist.set_zorder:22 of
msgid "**level**"
msgstr "**nivel**"

#: matplotlib.figure.Figure.show:2 of
msgid "If using a GUI backend with pyplot, display the figure window."
msgstr "Si se usa un backend GUI con pyplot, se mostrará la ventana de figura."

#: matplotlib.figure.Figure.show:4 of
msgid "If the figure was not created using `~.pyplot.figure`, it will lack a `~.backend_bases.FigureManagerBase`, and this method will raise an AttributeError."
msgstr "Si la figura no fue creada usando `~.pyplot.figure`, faltará un `~.backend_bases.FigureManagerBase`, y este método generará un AttributeError."

#: matplotlib.figure.Figure.show:10 of
msgid "This does not manage an GUI event loop. Consequently, the figure may only be shown briefly or not shown at all if you or your environment are not managing an event loop."
msgstr "Esto no administra un bucle de eventos GUI. En consecuencia, la figura sólo puede mostrarse brevemente o no mostrarse en absoluto si usted o su entorno no están gestionando un bucle de eventos."

#: matplotlib.figure.Figure.show:14 of
msgid "Proper use cases for `.Figure.show` include running this from a GUI application or an IPython shell."
msgstr "Los casos de uso adecuados para `.Figure.show` incluyen ejecutarlo desde una aplicación GUI o una shell IPython."

#: matplotlib.figure.Figure.show:17 of
msgid "If you're running a pure python shell or executing a non-GUI python script, you should use `matplotlib.pyplot.show` instead, which takes care of managing the event loop for you."
msgstr "Si está ejecutando una shell python pura o ejecutando un script python no GUI, debería usar `matplotlib. yplot.show` en su lugar, que se encarga de gestionar el ciclo de eventos para usted."

#: matplotlib.figure.Figure.show:38 of
msgid "**warn**"
msgstr "**advertir**"

#: matplotlib.figure.Figure.show:24 of
msgid "If ``True`` and we are not running headless (i.e. on Linux with an unset DISPLAY), issue warning when called on a non-GUI backend."
msgstr "Si es ``True`` y no estamos ejecutando headless (es decir, en Linux con un DISPLAY sin definir), emite una advertencia cuando se llama en un backend que no sea GUI."

#: matplotlib.figure.Figure.stale:2 matplotlib.figure.FigureBase.stale:2
#: matplotlib.figure.SubFigure.stale:2 of
msgid "Whether the artist is 'stale' and needs to be re-drawn for the output to match the internal state of the artist."
msgstr "Si el artista es 'stale' y necesita ser redibujado para que la salida coincida con el estado interno del artista."

#: matplotlib.figure.Figure.sticky_edges:2
#: matplotlib.figure.FigureBase.sticky_edges:2
#: matplotlib.figure.SubFigure.sticky_edges:2 of
msgid "``x`` and ``y`` sticky edge lists for autoscaling."
msgstr "``x`` y ``y`` listas de bordes pegajosos para autoescalado."

#: matplotlib.figure.Figure.sticky_edges:4
#: matplotlib.figure.FigureBase.sticky_edges:4
#: matplotlib.figure.SubFigure.sticky_edges:4 of
msgid "When performing autoscaling, if a data limit coincides with a value in the corresponding sticky_edges list, then no margin will be added--the view limit \"sticks\" to the edge. A typical use case is histograms, where one usually expects no margin on the bottom edge (0) of the histogram."
msgstr "Al realizar autoescalado, si un límite de datos coincide con un valor en la lista de bordes de stickys correspondiente. entonces no se añadirá ningún margen --el límite de vista \"pega\" al borde. Un caso de uso típico son los histogramas, donde normalmente no se espera margen en el borde inferior (0) del histograma."

#: matplotlib.figure.Figure.sticky_edges:10
#: matplotlib.figure.FigureBase.sticky_edges:10
#: matplotlib.figure.SubFigure.sticky_edges:10 of
msgid "Moreover, margin expansion \"bumps\" against sticky edges and cannot cross them.  For example, if the upper data limit is 1.0, the upper view limit computed by simple margin application is 1.2, but there is a sticky edge at 1.1, then the actual upper view limit will be 1.1."
msgstr "Además, la expansión del margen \"bumps\" contra bordes pegajosos y no pueden cruzarlos. Por ejemplo, si el límite superior de datos es 1. , el límite de la vista superior calculado por una aplicación de margen simple es 1. , pero hay un borde fijo en 1.1, entonces el límite real de la vista superior será 1.1."

#: matplotlib.figure.Figure.sticky_edges:15
#: matplotlib.figure.FigureBase.sticky_edges:15
#: matplotlib.figure.SubFigure.sticky_edges:15 of
msgid "This attribute cannot be assigned to; however, the ``x`` and ``y`` lists can be modified in place as needed."
msgstr "Este atributo no se puede asignar; sin embargo, las listas ``x`` y ``y`` pueden ser modificadas en su lugar según sea necesario."

#: matplotlib.figure.FigureBase.subfigures:2 of
msgid "Add a subfigure to this figure or subfigure."
msgstr "Agrega una subfigura a esta figura o subfigura."

#: matplotlib.figure.FigureBase.subfigures:4 of
msgid "A subfigure has the same artist methods as a figure, and is logically the same as a figure, but cannot print itself. See :doc:`/gallery/subplots_axes_and_figures/subfigures`."
msgstr "Una subfigura tiene los mismos métodos de artista que una figura, y es lógica igual que una figura, pero no puede imprimirse por sí misma. Vea :doc:`/gallery/subplots_axes_and_figures/subfiguras`."

#: matplotlib.figure.FigureBase.subfigures:11
#: matplotlib.figure.FigureBase.subplots:10 of
msgid "**nrows, ncols**"
msgstr "**nfilas, ncoles**"

#: matplotlib.figure.FigureBase.subfigures:11 of
msgid "Number of rows/columns of the subfigure grid."
msgstr "Número de filas/columnas de la cuadrícula de subfiguras."

#: matplotlib.figure.FigureBase.subfigures:15
#: matplotlib.figure.FigureBase.subplots:41 of
msgid "**squeeze**"
msgstr "**squeeze**"

#: matplotlib.figure.FigureBase.subfigures:14 of
msgid "If True, extra dimensions are squeezed out from the returned array of subfigures."
msgstr "Si es verdadero, las dimensiones extra se exprimen del array devuelto de subfiguras."

#: matplotlib.figure.FigureBase.subfigures:21 of
msgid "**wspace, hspace**"
msgstr "**wspace, hspace**"

#: of
msgid "float, default: None"
msgstr "float, default: None"

#: matplotlib.figure.FigureBase.subfigures:18 of
msgid "The amount of width/height reserved for space between subfigures, expressed as a fraction of the average subfigure width/height. If not given, the values will be inferred from a figure or rcParams when necessary."
msgstr "La cantidad de anchura/altura reservada para el espacio entre subfiguras, expresada como una fracción de la anchura/altura promedio de la subfigura. Si no se indica, los valores serán inferiores de una figura o rcParams cuando sea necesario."

#: matplotlib.figure.FigureBase.subfigures:26 of
msgid "**width_ratios** : array-like of length *ncols*, optional"
msgstr "**width_ratios** : array-like de longitud *ncols*, opcional"

#: of
msgid "array-like of length"
msgstr "longitud del array"

#: matplotlib.figure.FigureBase.subfigures:24 of
msgid "Defines the relative widths of the columns. Each column gets a relative width of ``width_ratios[i] / sum(width_ratios)``. If not given, all columns will have the same width."
msgstr "Define el ancho relativo de las columnas. Cada columna obtiene un ancho relativo de ``width_ratios[i] / suma(width_ratios)``. Si no se dan, todas las columnas tendrán el mismo anchura."

#: matplotlib.figure.FigureBase.subfigures:44 of
msgid "**height_ratios** : array-like of length *nrows*, optional"
msgstr "**altura_ratios** : tipo matriz de longitud *nrows*, opcional"

#: matplotlib.figure.FigureBase.subfigures:29 of
msgid "Defines the relative heights of the rows. Each row gets a relative height of ``height_ratios[i] / sum(height_ratios)``. If not given, all rows will have the same height."
msgstr "Define las alturas relativas de las filas. Cada fila tiene una altura relativa de ``height_ratios[i] / suma(height_ratios)``. Si no se da, todos los registros tendrán la misma altura."

#: matplotlib.figure.FigureBase.subplot_mosaic:2 of
msgid "Build a layout of Axes based on ASCII art or nested lists."
msgstr "Construye un diseño de ejes basado en arte ASCII o listas anidadas."

#: matplotlib.figure.FigureBase.subplot_mosaic:4 of
msgid "This is a helper function to build complex GridSpec layouts visually."
msgstr "Esta es una función de ayuda para construir diseños complejos de GridSpec visualmente."

#: matplotlib.figure.FigureBase.subplot_mosaic:8 of
msgid "This API is provisional and may be revised in the future based on early user feedback."
msgstr "Esta API es provisional y puede ser revisada en el futuro basándose en la retroalimentación temprana del usuario."

#: matplotlib.figure.FigureBase.subplot_mosaic:44 of
msgid "**mosaic**"
msgstr "**mosaic**"

#: of
msgid "list of list of {hashable or nested} or str"
msgstr "lista de {hashable or nested} o str"

#: matplotlib.figure.FigureBase.subplot_mosaic:14 of
msgid "A visual layout of how you want your Axes to be arranged labeled as strings.  For example ::"
msgstr "Un diseño visual de cómo quieres que tus ejes se organicen etiquetados como cadenas. Por ejemplo ::"

#: matplotlib.figure.FigureBase.subplot_mosaic:20 of
msgid "produces 4 Axes:"
msgstr "produce 4 ejes:"

#: matplotlib.figure.FigureBase.subplot_mosaic:22 of
msgid "'A panel' which is 1 row high and spans the first two columns"
msgstr "'Un panel' que tiene 1 fila de alto y abarca las dos primeras columnas"

#: matplotlib.figure.FigureBase.subplot_mosaic:23 of
msgid "'edge' which is 2 rows high and is on the right edge"
msgstr "'borde' que tiene 2 filas de alto y está en el borde derecho"

#: matplotlib.figure.FigureBase.subplot_mosaic:24 of
msgid "'C panel' which in 1 row and 1 column wide in the bottom left"
msgstr "'Panel C' que en 1 fila y 1 columna de ancho en la parte inferior izquierda"

#: matplotlib.figure.FigureBase.subplot_mosaic:25 of
msgid "a blank space 1 row and 1 column wide in the bottom center"
msgstr "un espacio en blanco 1 fila y 1 columna de ancho en el centro inferior"

#: matplotlib.figure.FigureBase.subplot_mosaic:27 of
msgid "Any of the entries in the layout can be a list of lists of the same form to create nested layouts."
msgstr "Cualquiera de las entradas en el diseño puede ser una lista de listas de la misma forma para crear diseños anidados."

#: matplotlib.figure.FigureBase.subplot_mosaic:30 of
msgid "If input is a str, then it can either be a multi-line string of the form ::"
msgstr "Si la entrada es una str, entonces puede ser una cadena de múltiples líneas de la forma ::"

#: matplotlib.figure.FigureBase.subplot_mosaic:38 of
msgid "where each character is a column and each line is a row. Or it can be a single-line string where rows are separated by ``;``::"
msgstr "donde cada carácter es una columna y cada línea es una fila. O puede ser una cadena de una sola línea donde las filas están separadas por ``;``::"

#: matplotlib.figure.FigureBase.subplot_mosaic:43 of
msgid "The string notation allows only single character Axes labels and does not support nesting but is very terse."
msgstr "La notación de cadena sólo permite etiquetas de ejes de un solo carácter y no soporta anidaciones pero es muy terno."

#: matplotlib.figure.FigureBase.subplot_mosaic:50
#: matplotlib.figure.FigureBase.subplots:27 of
msgid "**sharex, sharey**"
msgstr "**sharex, compartir**"

#: matplotlib.figure.FigureBase.subplot_mosaic:47 of
msgid "If True, the x-axis (*sharex*) or y-axis (*sharey*) will be shared among all subplots.  In that case, tick label visibility and axis units behave as for `subplots`.  If False, each subplot's x- or y-axis will be independent."
msgstr "Si es verdadero, el eje x (*sharex*) o eje y-(*sharey*) se compartirá entre todos los subtrazos. En ese caso, la visibilidad de las etiquetas y las unidades de ejes se comportan como en los «subplots». Si False, cada subplot será independiente."

#: matplotlib.figure.FigureBase.subplot_mosaic:54
#: matplotlib.figure.FigureBase.subplots:45 of
msgid "**subplot_kw**"
msgstr "**subplot_kw**"

#: matplotlib.figure.FigureBase.subplot_mosaic:53 of
msgid "Dictionary with keywords passed to the `.Figure.add_subplot` call used to create each subplot."
msgstr "Diccionario con palabras clave pasadas a la llamada `.Figure.add_subplot` usada para crear cada subplot."

#: matplotlib.figure.FigureBase.subplot_mosaic:58
#: matplotlib.figure.FigureBase.subplots:50 of
msgid "**gridspec_kw**"
msgstr "**gridspec_kw**"

#: matplotlib.figure.FigureBase.subplot_mosaic:57 of
msgid "Dictionary with keywords passed to the `.GridSpec` constructor used to create the grid the subplots are placed on."
msgstr "Diccionario con palabras clave pasadas al constructor `.GridSpec` usado para crear la cuadrícula en la que se colocan las subparcelas."

#: matplotlib.figure.FigureBase.subplot_mosaic:64 of
msgid "**empty_sentinel**"
msgstr "**número vacío**"

#: of
msgid "object, optional"
msgstr "objeto, opcional"

#: matplotlib.figure.FigureBase.subplot_mosaic:61 of
msgid "Entry in the layout to mean \"leave this space empty\".  Defaults to ``'.'``. Note, if *layout* is a string, it is processed via `inspect.cleandoc` to remove leading white space, which may interfere with using white-space as the empty sentinel."
msgstr "Entrada en el diseño para significar \"dejar este espacio vacío\". Por defecto es ``'.'``. Tenga en cuenta, si *layout* es una cadena, es procesada a través de `inspect. leandoc` para eliminar el espacio blanco inicial, que puede interferir con el uso del espacio blanco como el centinel vacío."

#: matplotlib.figure.FigureBase.subplot_mosaic:83 of
msgid "dict[label, Axes]"
msgstr "dictar[etiqueta, ejes]"

#: matplotlib.figure.FigureBase.subplot_mosaic:69 of
msgid "A dictionary mapping the labels to the Axes objects.  The order of the axes is left-to-right and top-to-bottom of their position in the total layout."
msgstr "Un diccionario que mapea las etiquetas a los objetos de los ejes. El orden de los ejes es de izquierda a derecha y arriba a abajo de su posición en el diseño total."

#: matplotlib.figure.FigureBase.subplots:2 of
msgid "Add a set of subplots to this figure."
msgstr "Agrega un conjunto de subparcelas a esta figura."

#: matplotlib.figure.FigureBase.subplots:4 of
msgid "This utility wrapper makes it convenient to create common layouts of subplots in a single call."
msgstr "Este envoltorio de utilidades hace conveniente crear diseños comunes de subparcelas en una sola llamada."

#: matplotlib.figure.FigureBase.subplots:10 of
msgid "Number of rows/columns of the subplot grid."
msgstr "Número de filas/columnas de la cuadrícula de subgráfico."

#: of
msgid "bool or {'none', 'all', 'row', 'col'}, default: False"
msgstr "bool o {'None ', 'all', 'row', 'col'}, por defecto: False"

#: matplotlib.figure.FigureBase.subplots:13 of
msgid "Controls sharing of x-axis (*sharex*) or y-axis (*sharey*):"
msgstr "Controla la compartición del eje x (*sharex*) o eje y-(*sharey*):"

#: matplotlib.figure.FigureBase.subplots:15 of
msgid "True or 'all': x- or y-axis will be shared among all subplots."
msgstr "Verdadero o 'todo': x o Y se compartirán entre todas las subparcelas."

#: matplotlib.figure.FigureBase.subplots:16 of
msgid "False or 'none': each subplot x- or y-axis will be independent."
msgstr "False o 'ninguno': cada subparcela x o eje Y será independiente."

#: matplotlib.figure.FigureBase.subplots:17 of
msgid "'row': each subplot row will share an x- or y-axis."
msgstr "'fila': cada fila de subparcelas compartirá un eje x o y-."

#: matplotlib.figure.FigureBase.subplots:18 of
msgid "'col': each subplot column will share an x- or y-axis."
msgstr "'col': cada columna de la subparcela compartirá un eje x o y-."

#: matplotlib.figure.FigureBase.subplots:20 of
msgid "When subplots have a shared x-axis along a column, only the x tick labels of the bottom subplot are created. Similarly, when subplots have a shared y-axis along a row, only the y tick labels of the first column subplot are created. To later turn other subplots' ticklabels on, use `~matplotlib.axes.Axes.tick_params`."
msgstr "Cuando las subparcelas tienen un eje x compartido a lo largo de una columna, sólo se crean las etiquetas x del subgrafico inferior. De la misma manera, cuando las subparcelas tienen un eje compartido a lo largo de una fila, sólo se crean las etiquetas de tick y de la subparcela de la primera columna. Para activar más tarde otras etiquetas de subplots, use `~matplotlib.axes.Axes.tick_params`."

#: matplotlib.figure.FigureBase.subplots:26 of
msgid "When subplots have a shared axis that has units, calling `.Axis.set_units` will update each axis with the new units."
msgstr "Cuando las subparcelas tienen un eje compartido que tiene unidades, llamar a `.Axis.set_units` actualizará cada eje con las nuevas unidades."

#: matplotlib.figure.FigureBase.subplots:30 of
msgid "If True, extra dimensions are squeezed out from the returned array of Axes:"
msgstr "Si es verdadero, las dimensiones extra se exprimen de la matriz devuelta de ejes:"

#: matplotlib.figure.FigureBase.subplots:33 of
msgid "if only one subplot is constructed (nrows=ncols=1), the resulting single Axes object is returned as a scalar."
msgstr "si sólo se construye un subplano (nrows=ncols=1), el objeto de ejes individuales resultante se devuelve como escalar."

#: matplotlib.figure.FigureBase.subplots:35 of
msgid "for Nx1 or 1xM subplots, the returned object is a 1D numpy object array of Axes objects."
msgstr "para subparcelas Nx1 o 1xM, el objeto devuelto es una matriz de objetos numpy 1D de objetos Ejes."

#: matplotlib.figure.FigureBase.subplots:37 of
msgid "for NxM, subplots with N>1 and M>1 are returned as a 2D array."
msgstr "para NxM, las subparcelas con N>1 y M>1 se devuelven como una matriz 2D."

#: matplotlib.figure.FigureBase.subplots:39 of
msgid "If False, no squeezing at all is done: the returned Axes object is always a 2D array containing Axes instances, even if it ends up being 1x1."
msgstr "Si False, no se hace ninguna exprimencia: el objeto devuelto de los ejes es siempre una matriz 2D que contiene instancias de ejes, incluso si termina siendo 1x1."

#: matplotlib.figure.FigureBase.subplots:44 of
msgid "Dict with keywords passed to the `.Figure.add_subplot` call used to create each subplot."
msgstr "Dicta con palabras clave pasadas a la llamada `.Figure.add_subplot` usada para crear cada subplot."

#: matplotlib.figure.FigureBase.subplots:48 of
msgid "Dict with keywords passed to the `~matplotlib.gridspec.GridSpec` constructor used to create the grid the subplots are placed on."
msgstr "Dicta con palabras clave pasadas al constructor `~matplotlib.gridspec.GridSpec` usado para crear la cuadrícula en la que se colocan las subparcelas."

#: matplotlib.figure.FigureBase.subplots:64 of
msgid "`~.axes.Axes` or array of Axes"
msgstr "`~.axes.Ejes` o array de ejes"

#: matplotlib.figure.FigureBase.subplots:55 of
msgid "Either a single `~matplotlib.axes.Axes` object or an array of Axes objects if more than one subplot was created. The dimensions of the resulting array can be controlled with the *squeeze* keyword, see above."
msgstr "O bien un solo objeto `~matplotlib.axes.Axes` o un array de objetos de ejes si se ha creado más de un subgráfico. Las dimensiones del array resultante pueden ser controladas con la palabra clave *squeeze*, ver arriba."

#: matplotlib.figure.FigureBase.subplots_adjust:2 of
msgid "Adjust the subplot layout parameters."
msgstr "Ajuste los parámetros de diseño de subplotes."

#: matplotlib.figure.FigureBase.subplots_adjust:4 of
msgid "Unset parameters are left unmodified; initial values are given by :rc:`figure.subplot.[name]`."
msgstr "Los parámetros desestablecidos quedan sin modificar; los valores iniciales son dados por :rc:`figure.subplot.[name]`."

#: matplotlib.figure.FigureBase.subplots_adjust:11
#: matplotlib.figure.SubplotParams:30 of
msgid "**left**"
msgstr "**left**"

#: matplotlib.figure.FigureBase.subplots_adjust:10
#: matplotlib.figure.SubplotParams:29 of
msgid "The position of the left edge of the subplots, as a fraction of the figure width."
msgstr "La posición del borde izquierdo de las subparcelas, como una fracción del ancho de la figura."

#: matplotlib.figure.FigureBase.subplots_adjust:15
#: matplotlib.figure.SubplotParams:34 of
msgid "**right**"
msgstr "**derecha**"

#: matplotlib.figure.FigureBase.subplots_adjust:14
#: matplotlib.figure.SubplotParams:33 of
msgid "The position of the right edge of the subplots, as a fraction of the figure width."
msgstr "La posición del borde derecho de las subparcelas, como una fracción del ancho de la figura."

#: matplotlib.figure.FigureBase.subplots_adjust:18
#: matplotlib.figure.SubplotParams:37 of
msgid "The position of the bottom edge of the subplots, as a fraction of the figure height."
msgstr "La posición del borde inferior de las subparcelas, como una fracción de la altura de la figura."

#: matplotlib.figure.FigureBase.subplots_adjust:23
#: matplotlib.figure.SubplotParams:42 of
msgid "**top**"
msgstr "**arriba**"

#: matplotlib.figure.FigureBase.subplots_adjust:22
#: matplotlib.figure.SubplotParams:41 of
msgid "The position of the top edge of the subplots, as a fraction of the figure height."
msgstr "La posición del borde superior de las subparcelas, como una fracción de la altura de la figura."

#: matplotlib.figure.FigureBase.subplots_adjust:27
#: matplotlib.figure.SubplotParams:46 of
msgid "**wspace**"
msgstr "**wspace**"

#: matplotlib.figure.FigureBase.subplots_adjust:26
#: matplotlib.figure.SubplotParams:45 of
msgid "The width of the padding between subplots, as a fraction of the average Axes width."
msgstr "La anchura del relleno entre subparcelas, como una fracción de la anchura media de los ejes."

#: matplotlib.figure.FigureBase.subplots_adjust:44
#: matplotlib.figure.SubplotParams:63 of
msgid "**hspace**"
msgstr "**hspace**"

#: matplotlib.figure.FigureBase.subplots_adjust:30
#: matplotlib.figure.SubplotParams:49 of
msgid "The height of the padding between subplots, as a fraction of the average Axes height."
msgstr "La altura del relleno entre subparcelas, como una fracción de la altura media de los ejes."

#: matplotlib.figure.FigureBase.suptitle:2 of
msgid "Add a centered suptitle to the figure."
msgstr "Agrega un suptítulo centrado a la figura."

#: matplotlib.figure.FigureBase.suptitle:8
#: matplotlib.figure.FigureBase.supxlabel:8
#: matplotlib.figure.FigureBase.supylabel:8 of
msgid "**t**"
msgstr "**t**"

#: matplotlib.figure.FigureBase.suptitle:8 of
msgid "The suptitle text."
msgstr "El texto de sutítulo."

#: matplotlib.figure.FigureBase.suptitle:11
#: matplotlib.figure.FigureBase.supxlabel:11
#: matplotlib.figure.FigureBase.supylabel:11 of
msgid "**x**"
msgstr "**x**"

#: of
msgid "float, default: 0.5"
msgstr "float, default: 0.5"

#: matplotlib.figure.FigureBase.suptitle:11
#: matplotlib.figure.FigureBase.supxlabel:11
#: matplotlib.figure.FigureBase.supylabel:11 of
msgid "The x location of the text in figure coordinates."
msgstr "La posición x del texto en coordenadas de figura."

#: matplotlib.figure.FigureBase.suptitle:14
#: matplotlib.figure.FigureBase.supxlabel:14
#: matplotlib.figure.FigureBase.supylabel:14 of
msgid "**y**"
msgstr "**y**"

#: of
msgid "float, default: 0.98"
msgstr "float, por defecto: 0.98"

#: matplotlib.figure.FigureBase.suptitle:14
#: matplotlib.figure.FigureBase.supxlabel:14
#: matplotlib.figure.FigureBase.supylabel:14 of
msgid "The y location of the text in figure coordinates."
msgstr "La ubicación y del texto en coordenadas de figura."

#: matplotlib.figure.FigureBase.suptitle:17
#: matplotlib.figure.FigureBase.supxlabel:17
#: matplotlib.figure.FigureBase.supylabel:17 of
msgid "**horizontalalignment, ha**"
msgstr "**horizontalalineamiento, ha**"

#: of
msgid "{'center', 'left', 'right'}, default: center"
msgstr "{'center', 'left', 'right'}, por defecto: centro"

#: matplotlib.figure.FigureBase.suptitle:17
#: matplotlib.figure.FigureBase.supxlabel:17
#: matplotlib.figure.FigureBase.supylabel:17 of
msgid "The horizontal alignment of the text relative to (*x*, *y*)."
msgstr "La alineación horizontal del texto relativo a (*x*, *y*)."

#: matplotlib.figure.FigureBase.suptitle:20
#: matplotlib.figure.FigureBase.supxlabel:20
#: matplotlib.figure.FigureBase.supylabel:20 of
msgid "**verticalalignment, va**"
msgstr "**alineación vertical, va**"

#: of
msgid "{'top', 'center', 'bottom', 'baseline'}, default: top"
msgstr "{'top', 'center', 'bottom', 'baseline'}, por defecto: superior"

#: matplotlib.figure.FigureBase.suptitle:20
#: matplotlib.figure.FigureBase.supxlabel:20
#: matplotlib.figure.FigureBase.supylabel:20 of
msgid "The vertical alignment of the text relative to (*x*, *y*)."
msgstr "La alineación vertical del texto relativa a (*x*, *y*)."

#: matplotlib.figure.FigureBase.suptitle:24
#: matplotlib.figure.FigureBase.supxlabel:24
#: matplotlib.figure.FigureBase.supylabel:24 of
msgid "**fontsize, size** : default: :rc:`figure.titlesize`"
msgstr "**fontsize, size** : default: :rc:`figure.titlesize`"

#: matplotlib.figure.FigureBase.suptitle:23
#: matplotlib.figure.FigureBase.supxlabel:23
#: matplotlib.figure.FigureBase.supylabel:23 of
msgid "The font size of the text. See `.Text.set_size` for possible values."
msgstr "El tamaño de fuente del texto. Consulte `.Text.set_size` para ver los valores posibles."

#: matplotlib.figure.FigureBase.suptitle:28
#: matplotlib.figure.FigureBase.supxlabel:28
#: matplotlib.figure.FigureBase.supylabel:28 of
msgid "**fontweight, weight** : default: :rc:`figure.titleweight`"
msgstr "**fontweight, weight** : por defecto: :rc:`figure.titleweight`"

#: matplotlib.figure.FigureBase.suptitle:27
#: matplotlib.figure.FigureBase.supxlabel:27
#: matplotlib.figure.FigureBase.supylabel:27 of
msgid "The font weight of the text. See `.Text.set_weight` for possible values."
msgstr "El peso de la fuente del texto. Consulte `.Text.set_weight` para ver los valores posibles."

#: matplotlib.figure.FigureBase.suptitle:35
#: matplotlib.figure.FigureBase.supxlabel:35
#: matplotlib.figure.FigureBase.supylabel:35 of
msgid "text"
msgstr "texto"

#: matplotlib.figure.FigureBase.suptitle:33 of
msgid "The `.Text` instance of the suptitle."
msgstr "La instancia `.Text` del suptítulo."

#: matplotlib.figure.FigureBase.suptitle:43
#: matplotlib.figure.FigureBase.supxlabel:43
#: matplotlib.figure.FigureBase.supylabel:43 of
msgid "**fontproperties**"
msgstr "**fontproperties**"

#: of
msgid "None or dict, optional"
msgstr "Ninguno o dictado opcional"

#: matplotlib.figure.FigureBase.suptitle:40
#: matplotlib.figure.FigureBase.supxlabel:40
#: matplotlib.figure.FigureBase.supylabel:40 of
msgid "A dict of font properties. If *fontproperties* is given the default values for font size and weight are taken from the `.FontProperties` defaults. :rc:`figure.titlesize` and :rc:`figure.titleweight` are ignored in this case."
msgstr "Un dictado de propiedades de la fuente. Si se da a *fontproperties* los valores por defecto para el tamaño y peso de la fuente son tomados del `. ontProperties` por defecto. :rc:`figure.titlesize` y :rc:`figure.titleweight` son ignorados en este caso."

#: matplotlib.figure.FigureBase.suptitle:46
#: matplotlib.figure.FigureBase.supxlabel:46
#: matplotlib.figure.FigureBase.supylabel:46 of
msgid "Additional kwargs are `matplotlib.text.Text` properties."
msgstr "Los kwargs adicionales son propiedades `matplotlib.text.Text`."

#: matplotlib.figure.FigureBase.supxlabel:2 of
msgid "Add a centered supxlabel to the figure."
msgstr "Agrega una etiqueta supxlabel centrada a la figura."

#: matplotlib.figure.FigureBase.supxlabel:8 of
msgid "The supxlabel text."
msgstr "El texto de suxetiqueta."

#: of
msgid "float, default: 0.01"
msgstr "float, por defecto: 0.01"

#: of
msgid "{'top', 'center', 'bottom', 'baseline'}, default: bottom"
msgstr "{'top', 'center', 'bottom', 'baseline'}, por defecto: inferior"

#: matplotlib.figure.FigureBase.supxlabel:33 of
msgid "The `.Text` instance of the supxlabel."
msgstr "La instancia `.Text` de la etiqueta supxlabel."

#: matplotlib.figure.FigureBase.supylabel:2 of
msgid "Add a centered supylabel to the figure."
msgstr "Agrega una etiqueta supylabel centrada a la figura."

#: matplotlib.figure.FigureBase.supylabel:8 of
msgid "The supylabel text."
msgstr "El texto supylabel."

#: of
msgid "float, default: 0.02"
msgstr "float, por defecto: 0.02"

#: of
msgid "{'center', 'left', 'right'}, default: left"
msgstr "{'center', 'left', 'right'}, por defecto: izquierda"

#: of
msgid "{'top', 'center', 'bottom', 'baseline'}, default: center"
msgstr "{'top', 'center', 'bottom', 'baseline'}, por defecto: centro"

#: matplotlib.figure.FigureBase.supylabel:33 of
msgid "The `.Text` instance of the supylabel."
msgstr "La instancia `.Text` de la etiqueta supylabel."

#: matplotlib.figure.FigureBase.text:2 of
msgid "Add text to figure."
msgstr "Añadir texto a la figura."

#: matplotlib.figure.FigureBase.text:10 of
msgid "**x, y**"
msgstr "**x, y**"

#: matplotlib.figure.FigureBase.text:8 of
msgid "The position to place the text. By default, this is in figure coordinates, floats in [0, 1]. The coordinate system can be changed using the *transform* keyword."
msgstr "La posición para colocar el texto. De forma predeterminada, esto está en coordenadas de figura, flotan en [0, 1]. El sistema de coordenadas se puede cambiar usando la palabra clave *transform*."

#: matplotlib.figure.FigureBase.text:13 of
msgid "The text string."
msgstr "La cadena de texto."

#: matplotlib.figure.FigureBase.text:18 of
msgid "**fontdict**"
msgstr "**fontdict**"

#: matplotlib.figure.FigureBase.text:16 of
msgid "A dictionary to override the default text properties. If not given, the defaults are determined by :rc:`font.*`. Properties passed as *kwargs* override the corresponding ones given in *fontdict*."
msgstr "Un diccionario para sobrescribir las propiedades de texto predeterminadas. Si no se proporciona, los valores predeterminados son determinados por :rc:`font. `. Propiedades pasadas como *kwargs* sobreescribir las correspondientes dadas en *fontdict*."

#: matplotlib.figure.FigureBase.text:25 of
msgid "`~.text.Text`"
msgstr "`~.text.Texto`"

#: matplotlib.figure.FigureBase.text:85 of
msgid "**\\*\\*kwargs** : `~matplotlib.text.Text` properties"
msgstr "**\\*\\*kwargs** : propiedades `~matplotlib.text.Text`"

#: matplotlib.figure.FigureBase.text:84 of
msgid "Text properties"
msgstr "Propiedades del texto"

#: matplotlib.figure.FigureBase.text:30 of
msgid "Other miscellaneous text parameters."
msgstr "Otros parámetros de texto variados."

#: matplotlib.figure.FigureBase.text:41 of
msgid ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"
msgstr ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"

#: matplotlib.figure.FigureBase.text:42 of
msgid ":meth:`bbox <matplotlib.text.Text.set_bbox>`"
msgstr ":meth:`bbox <matplotlib.text.Text.set_bbox>`"

#: matplotlib.figure.FigureBase.text:42 of
msgid "dict with properties for `.patches.FancyBboxPatch`"
msgstr "dict con propiedades para `.patches.FancyBboxPatch`"

#: matplotlib.figure.FigureBase.text:46 of
msgid ":meth:`color <matplotlib.text.Text.set_color>` or c"
msgstr ":meth:`color <matplotlib.text.Text.set_color>` or c"

#: matplotlib.figure.FigureBase.text:48 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` or family"
msgstr ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` o familia"

#: matplotlib.figure.FigureBase.text:48 of
msgid "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"
msgstr "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"

#: matplotlib.figure.FigureBase.text:49 of
msgid ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` or font or font_properties"
msgstr ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` o font o font_properties"

#: matplotlib.figure.FigureBase.text:49 of
msgid "`.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr "`.font_manager.FontProperties` o `str` o `pathlib.Path`"

#: matplotlib.figure.FigureBase.text:50 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` or size"
msgstr ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` o size"

#: matplotlib.figure.FigureBase.text:50 of
msgid "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
msgstr "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"

#: matplotlib.figure.FigureBase.text:51 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"
msgstr ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"

#: matplotlib.figure.FigureBase.text:51 of
msgid "{a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"

#: matplotlib.figure.FigureBase.text:52 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` or style"
msgstr ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` o style"

#: matplotlib.figure.FigureBase.text:52 of
msgid "{'normal', 'italic', 'oblique'}"
msgstr "{'normal', 'italic', 'oblique'}"

#: matplotlib.figure.FigureBase.text:53 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` or variant"
msgstr ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` o variant"

#: matplotlib.figure.FigureBase.text:53 of
msgid "{'normal', 'small-caps'}"
msgstr "{'normal', 'small-caps'}"

#: matplotlib.figure.FigureBase.text:54 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"
msgstr ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"

#: matplotlib.figure.FigureBase.text:54 of
msgid "{a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"

#: matplotlib.figure.FigureBase.text:56 of
msgid ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"
msgstr ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"

#: matplotlib.figure.FigureBase.text:56 of
msgid "{'center', 'right', 'left'}"
msgstr "{'center', 'right', 'left'}"

#: matplotlib.figure.FigureBase.text:59 of
msgid ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"
msgstr ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"

#: matplotlib.figure.FigureBase.text:59 of
msgid "float (multiple of font size)"
msgstr "float (múltiplo del tamaño de la fuente)"

#: matplotlib.figure.FigureBase.text:60 of
msgid ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"
msgstr ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"

#: matplotlib.figure.FigureBase.text:61 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` or ma"
msgstr ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` o ma"

#: matplotlib.figure.FigureBase.text:61 of
msgid "{'left', 'right', 'center'}"
msgstr "{'left', 'right', 'center'}"

#: matplotlib.figure.FigureBase.text:62 of
msgid ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"
msgstr ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"

#: matplotlib.figure.FigureBase.text:65 of
msgid ":meth:`position <matplotlib.text.Text.set_position>`"
msgstr ":meth:`position <matplotlib.text.Text.set_position>`"

#: matplotlib.figure.FigureBase.text:65 of
msgid "(float, float)"
msgstr "(float, float)"

#: matplotlib.figure.FigureBase.text:67 of
msgid ":meth:`rotation <matplotlib.text.Text.set_rotation>`"
msgstr ":meth:`rotation <matplotlib.text.Text.set_rotation>`"

#: matplotlib.figure.FigureBase.text:67 of
msgid "float or {'vertical', 'horizontal'}"
msgstr "float o {'vertical', 'horizontal'}"

#: matplotlib.figure.FigureBase.text:68 of
msgid ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"
msgstr ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"

#: matplotlib.figure.FigureBase.text:68 of
msgid "{None, 'default', 'anchor'}"
msgstr "{None, 'default', 'anchor'}"

#: matplotlib.figure.FigureBase.text:71 of
msgid ":meth:`text <matplotlib.text.Text.set_text>`"
msgstr ":meth:`text <matplotlib.text.Text.set_text>`"

#: matplotlib.figure.FigureBase.text:73 of
msgid ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"
msgstr ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"

#: matplotlib.figure.FigureBase.text:75 of
msgid ":meth:`usetex <matplotlib.text.Text.set_usetex>`"
msgstr ":meth:`usetex <matplotlib.text.Text.set_usetex>`"

#: matplotlib.figure.FigureBase.text:76 of
msgid ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"
msgstr ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"

#: matplotlib.figure.FigureBase.text:76 of
msgid "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
msgstr "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"

#: matplotlib.figure.FigureBase.text:78 of
msgid ":meth:`wrap <matplotlib.text.Text.set_wrap>`"
msgstr ":meth:`wrap <matplotlib.text.Text.set_wrap>`"

#: matplotlib.figure.FigureBase.text:79 of
msgid ":meth:`x <matplotlib.text.Text.set_x>`"
msgstr ":meth:`x <matplotlib.text.Text.set_x>`"

#: matplotlib.figure.FigureBase.text:80 of
msgid ":meth:`y <matplotlib.text.Text.set_y>`"
msgstr ":meth:`y <matplotlib.text.Text.set_y>`"

#: matplotlib.figure.FigureBase.text:90 of
msgid ":obj:`.Axes.text`"
msgstr ":obj:`.Ejes.text`"

#: matplotlib.figure.FigureBase.text:92 of
msgid ":obj:`.pyplot.text`"
msgstr ":obj:`.pyplot.text`"

#: matplotlib.figure.Figure.tight_layout:2 of
msgid "Adjust the padding between and around subplots."
msgstr "Ajuste el relleno entre subparcelas y alrededores."

#: matplotlib.figure.Figure.tight_layout:4 of
msgid "To exclude an artist on the Axes from the bounding box calculation that determines the subplot parameters (i.e. legend, or annotation), set ``a.set_in_layout(False)`` for that artist."
msgstr "excluir a un artista en los ejes del cálculo de la caja de límites que determina los parámetros de subplot (i. . leyenda, o anotación), establezca ``a.set_in_layout(False)`` para ese artista."

#: matplotlib.figure.Figure.tight_layout:12 of
msgid "**pad**"
msgstr "**pad**"

#: of
msgid "float, default: 1.08"
msgstr "float, por defecto: 1.08"

#: matplotlib.figure.Figure.tight_layout:11 of
msgid "Padding between the figure edge and the edges of subplots, as a fraction of the font size."
msgstr "Relleno entre el borde de la figura y los bordes de los subplots, como fracción del tamaño de la fuente."

#: matplotlib.figure.Figure.tight_layout:16 of
msgid "**h_pad, w_pad** : float, default: *pad*"
msgstr "**h_pad, w_pad** : flotante, por defecto: *pad*"

#: matplotlib.figure.Figure.tight_layout:15 of
msgid "Padding (height/width) between edges of adjacent subplots, as a fraction of the font size."
msgstr "Relleno (altura/ancho) entre bordes de subparcelas adyacentes, como una fracción del tamaño de la fuente."

#: of
msgid "tuple (left, bottom, right, top), default: (0, 0, 1, 1)"
msgstr "tupla (izquierda, inferior, derecha, arriba), por defecto: (0, 0, 1, 1)"

#: matplotlib.figure.Figure.tight_layout:19 of
msgid "A rectangle in normalized figure coordinates into which the whole subplots area (including labels) will fit."
msgstr "Un rectángulo en coordenadas normalizadas en las que caben todas las subparcelas (incluyendo etiquetas)."

#: matplotlib.figure.Figure.tight_layout:32 of
msgid ":obj:`.Figure.set_tight_layout`"
msgstr ":obj:`.Figure.set_tight_layout`"

#: matplotlib.figure.Figure.tight_layout:34 of
msgid ":obj:`.pyplot.tight_layout`"
msgstr ":obj:`.pyplot.tight_layout`"

#: matplotlib.artist.Artist.update:2 of
msgid "Update this artist's properties from the dict *props*."
msgstr "Actualizar las propiedades de este artista desde el dict *props*."

#: matplotlib.artist.Artist.update:21 of
msgid "**props**"
msgstr "**props**"

#: of
msgid "dict"
msgstr "dict"

#: matplotlib.artist.Artist.update_from:2 of
msgid "Copy properties from *other* to *self*."
msgstr "Copiar propiedades de *otro* a *self*."

#: matplotlib.figure.Figure.waitforbuttonpress:2 of
msgid "Blocking call to interact with the figure."
msgstr "Bloquear llamada para interactuar con la figura."

#: matplotlib.figure.Figure.waitforbuttonpress:4 of
msgid "Wait for user input and return True if a key was pressed, False if a mouse button was pressed and None if no input was given within *timeout* seconds.  Negative values deactivate *timeout*."
msgstr "Esperar a la entrada del usuario y devolver True si se presionó una tecla, False si un botón del ratón fue presionado y Ninguno si no se dio ninguna entrada dentro de *timeout* segundos. Valores negativos desactivan *timeout*."

#: matplotlib.figure.FigureBase:2 of
msgid "Base class for `.figure.Figure` and `.figure.SubFigure` containing the methods that add artists to the figure or subfigure, create Axes, etc."
msgstr "Clase base para `.figure.Figure` y `.figure.SubFigure` conteniendo los métodos que agregan artistas a la figura o subfigura, crear ejes, etc."

#: matplotlib.figure.FigureBase.axes:2 of
msgid "The `~.axes.Axes` instance the artist resides in, or *None*."
msgstr "La instancia `~.axes.Axes` en la que reside el artist, o *Ninguno*."

#: matplotlib.figure.SubFigure:2 of
msgid "Logical figure that can be placed inside a figure."
msgstr "Figura lógica que puede colocarse dentro de una figura."

#: matplotlib.figure.SubFigure:4 of
msgid "Typically instantiated using `.Figure.add_subfigure` or `.SubFigure.add_subfigure`, or `.SubFigure.subfigures`.  A subfigure has the same methods as a figure except for those particularly tied to the size or dpi of the figure, and is confined to a prescribed region of the figure. For example the following puts two subfigures side-by-side::"
msgstr "Normalmente instanciado usando `.Figure.add_subfigure` o `.SubFigure.add_subfigure`, o `.SubFigure.subfigures`. Una subfigura tiene los mismos métodos que una figura excepto aquellos que están particularmente vinculados al tamaño o dpi de la figura, y se limita a una región prescrita de la figura. Por ejemplo, lo siguiente pone dos subfiguras lado a lado::"

#: matplotlib.figure.SubFigure:15 of
msgid "See :doc:`/gallery/subplots_axes_and_figures/subfigures`"
msgstr "Ver :doc:`/gallery/subplots_axes_and_figures/subfiguras`"

#: matplotlib.figure.SubFigure:42 of
msgid "**parent** : `.figure.Figure` or `.figure.SubFigure`"
msgstr "**padre** : `.figure.Figure` o `.figure.SubFigure`"

#: matplotlib.figure.SubFigure:41 of
msgid "figure.Figure or figure.SubFigure"
msgstr "figure. Figura o figure. SubFigura"

#: matplotlib.figure.SubFigure:41 of
msgid "Figure or subfigure that contains the SubFigure.  SubFigures can be nested."
msgstr "Figura o subfigura que contiene la subfigura. Las subfiguras pueden ser anidadas."

#: matplotlib.figure.SubFigure:49 of
msgid "The figure patch face color."
msgstr "El parche de la figura se enfrenta al color."

#: matplotlib.figure.SubFigure:105 of
msgid "**\\*\\*kwargs** : `.SubFigure` properties, optional"
msgstr "**\\*\\*kwargs** : Propiedades `.SubFigure`, opcional"

#: matplotlib.figure.SubFigure:104 of
msgid "SubFigure properties, optional"
msgstr "Propiedades de subFigura, opcional"

#: matplotlib.figure.SubFigure.axes:2 of
msgid "List of Axes in the SubFigure.  You can access and modify the Axes in the SubFigure through this list."
msgstr "Lista de ejes en la subfigura. Puede acceder y modificar los ejes en la subFigura a través de esta lista."

#: matplotlib.figure.SubFigure.axes:5 of
msgid "Do not modify the list itself. Instead, use `~.SubFigure.add_axes`, `~.SubFigure.add_subplot` or `~.SubFigure.delaxes` to add or remove an Axes."
msgstr "No modifiques la lista en sí. En su lugar, usa `~.SubFigure.add_axes`, `~.SubFigure.add_subplot` o `~.SubFigure.delaxes` para agregar o quitar un eje."

#: matplotlib.figure.SubFigure.axes:9 of
msgid "Note: The `.SubFigure.axes` property and `~.SubFigure.get_axes` method are equivalent."
msgstr "Nota: La propiedad `.SubFigure.axes` y el método `~.SubFigure.get_axes` son equivalentes."

#: matplotlib.figure.SubplotParams:2 of
msgid "A class to hold the parameters for a subplot."
msgstr "Una clase para mantener los parámetros de una subplot."

#: matplotlib.figure.SubplotParams:23 of
msgid "Defaults are given by :rc:`figure.subplot.[name]`."
msgstr "Los valores por defecto son dados por :rc:`figure.subplot.[name]`."

#: matplotlib.figure.SubplotParams.update:2 of
msgid "Update the dimensions of the passed parameters. *None* means unchanged."
msgstr "Actualizar las dimensiones de los parámetros pasados. *nunca* significa sin cambios."

#: matplotlib.figure.figaspect:2 of
msgid "Calculate the width and height for a figure with a specified aspect ratio."
msgstr "Calcula el ancho y la altura de una figura con una relación de aspecto especificada."

#: matplotlib.figure.figaspect:4 of
msgid "While the height is taken from :rc:`figure.figsize`, the width is adjusted to match the desired aspect ratio. Additionally, it is ensured that the width is in the range [4., 16.] and the height is in the range [2., 16.]. If necessary, the default height is adjusted to ensure this."
msgstr "Mientras que la altura se toma de :rc:`figure.figsize`, el ancho se ajusta para que coincida con la relación de aspecto deseada. Además, se asegura que el ancho está en el rango [4., 16.] y que la altura está en el rango [2. Si es necesario, la altura por defecto se ajusta para asegurar esto."

#: matplotlib.figure.figaspect:15 of
msgid "**arg**"
msgstr "**arg**"

#: of
msgid "float or 2D array"
msgstr "array decimal o 2D"

#: matplotlib.figure.figaspect:12 of
msgid "If a float, this defines the aspect ratio (i.e. the ratio height / width). In case of an array the aspect ratio is number of rows / number of columns, so that the array could be fitted in the figure undistorted."
msgstr "Si un flotante, define la relación de aspecto (es decir, la altura / anchura). En caso de una matriz, la relación de aspecto es el número de filas / número de columnas, para que la matriz pueda ser instalada en la figura sin distorsiones."

#: matplotlib.figure.figaspect:27 of
msgid "**width, height**"
msgstr "**width, height**"

#: matplotlib.figure.figaspect:20 of
msgid "The figure size in inches."
msgstr "El tamaño de la figura en pulgadas."

#: matplotlib.figure.figaspect:31 of
msgid "If you want to create an Axes within the figure, that still preserves the aspect ratio, be sure to create it with equal width and height. See examples below."
msgstr "Si quieres crear un hacha dentro de la figura, que aún conserva la relación de aspecto, asegúrese de crearlo con la misma anchura y altura. Ver ejemplos a continuación."

#: matplotlib.figure.figaspect:35 of
msgid "Thanks to Fernando Perez for this function."
msgstr "Gracias a Fernando Pérez por esta función."

#: matplotlib.figure.figaspect:40 of
msgid "Make a figure twice as tall as it is wide::"
msgstr "Hacer una cifra dos veces más alta que la ancho::"

#: matplotlib.figure.figaspect:47 of
msgid "Make a figure with the proper aspect for an array::"
msgstr "Hacer una figura con el aspecto adecuado para una matriz::"

