msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-03 14:50\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_enums_api.po\n"
"X-Crowdin-File-ID: 1708\n"
"Language: es_ES\n"

#: ../../api/_enums_api.rst:3
msgid "``matplotlib._enums``"
msgstr "``matplotlib._enums``"

#: matplotlib._enums:1 of
msgid "Enums representing sets of strings that Matplotlib uses as input parameters."
msgstr "Enums que representan conjuntos de cadenas que Matplotlib utiliza como parámetros de entrada."

#: matplotlib._enums:3 of
msgid "Matplotlib often uses simple data types like strings or tuples to define a concept; e.g. the line capstyle can be specified as one of 'butt', 'round', or 'projecting'. The classes in this module are used internally and serve to document these concepts formally."
msgstr "Matplotlib a menudo utiliza tipos de datos simples como cadenas o tuplas para definir un concepto; por ejemplo, el estilo de la línea puede ser especificado como uno de 'tope', 'redondo', o 'proyectando'. Las clases de este módulo se utilizan internamente y sirven para documentar estos conceptos formalmente."

#: matplotlib._enums:8 of
msgid "As an end-user you will not use these classes directly, but only the values they define."
msgstr "Como usuario final no usarás estas clases directamente, sino sólo los valores que definen."

#: matplotlib._enums.JoinStyle:2 of
msgid "Define how the connection between two line segments is drawn."
msgstr "Definir cómo se dibuja la conexión entre dos segmentos de línea."

#: matplotlib._enums.JoinStyle:4 of
msgid "For a visual impression of each *JoinStyle*, `view these docs online <JoinStyle>`, or run `JoinStyle.demo`."
msgstr "Para una impresión visual de cada *JoinStyle*, `revisa estos documentos en línea <JoinStyle>`, o ejecuta `JoinStyle.demo`."

#: matplotlib._enums.JoinStyle:7 of
msgid "Lines in Matplotlib are typically defined by a 1D `~.path.Path` and a finite ``linewidth``, where the underlying 1D `~.path.Path` represents the center of the stroked line."
msgstr "Las líneas en Matplotlib se definen típicamente por un `~.path.Path` 1D y un ``linewidth`` finito, donde el `~.path.Path` 1D subyacente representa el centro de la línea trazada."

#: matplotlib._enums.JoinStyle:11 of
msgid "By default, `~.backend_bases.GraphicsContextBase` defines the boundaries of a stroked line to simply be every point within some radius, ``linewidth/2``, away from any point of the center line. However, this results in corners appearing \"rounded\", which may not be the desired behavior if you are drawing, for example, a polygon or pointed star."
msgstr "Por defecto, `~.backend_bases.GraphicsContextBase` define los límites de una línea trazada para ser simplemente cada punto dentro de algún radio, ``linewidth/2``, lejos de cualquier punto de la línea central. Sin embargo, esto hace que las esquinas aparezcan \"redondeadas\", lo que puede no ser el comportamiento deseado si se está dibujando, por ejemplo, un polígono o una estrella puntiaguda."

#: matplotlib._enums.CapStyle:12 matplotlib._enums.JoinStyle:17 of
msgid "**Supported values:**"
msgstr "**Valores soportados:**"

#: matplotlib._enums.JoinStyle:24 of
msgid "'miter'"
msgstr "'miter'"

#: matplotlib._enums.JoinStyle:22 of
msgid "the \"arrow-tip\" style. Each boundary of the filled-in area will extend in a straight line parallel to the tangent vector of the centerline at the point it meets the corner, until they meet in a sharp point."
msgstr "el estilo \"punta de flecha\". Cada límite del área rellenada se extenderá en una línea recta paralela al vector tangente de la línea central en el punto en que se encuentra con la esquina, hasta que se encuentren en un punto agudo."

#: matplotlib._enums.CapStyle:22 matplotlib._enums.JoinStyle:27 of
msgid "'round'"
msgstr "'round'"

#: matplotlib._enums.JoinStyle:27 of
msgid "stokes every point within a radius of ``linewidth/2`` of the center lines."
msgstr "remata cada punto dentro de un radio de ``linewidth/2`` de las líneas centrales."

#: matplotlib._enums.JoinStyle:30 of
msgid "'bevel'"
msgstr "'bevel'"

#: matplotlib._enums.JoinStyle:30 of
msgid "the \"squared-off\" style. It can be thought of as a rounded corner where the \"circular\" part of the corner has been cut off."
msgstr "el estilo \"cuadrado\". Puede considerarse como una esquina redondeada en la que se ha cortado la parte \"circular\" de la esquina."

#: matplotlib._enums.JoinStyle:35 of
msgid "Very long miter tips are cut off (to form a *bevel*) after a backend-dependent limit called the \"miter limit\", which specifies the maximum allowed ratio of miter length to line width. For example, the PDF backend uses the default value of 10 specified by the PDF standard, while the SVG backend does not even specify the miter limit, resulting in a default value of 4 per the SVG specification. Matplotlib does not currently allow the user to adjust this parameter."
msgstr "Las puntas de inglete muy largas se cortan (para formar un *bisel*) después de un límite dependiente del backend llamado \"límite de inglete\", que especifica la relación máxima permitida entre la longitud del inglete y el ancho de la línea. Por ejemplo, el backend PDF utiliza el valor por defecto de 10 especificado por el estándar PDF, mientras que el backend SVG ni siquiera especifica el límite de inglete, resultando en un valor por defecto de 4 según la especificación SVG. Matplotlib no permite actualmente al usuario ajustar este parámetro."

#: matplotlib._enums.JoinStyle:43 of
msgid "A more detailed description of the effect of a miter limit can be found in the `Mozilla Developer Docs <https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit>`_"
msgstr "Una descripción más detallada del efecto de un límite de inglete se puede encontrar en los `Docs para desarrolladores de Mozilla <https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit>`_"

#: ../../api/_enums_api.rst:7
msgid "(`Source code <../api/_enums_api-1.py>`__, `png <../api/_enums_api-1.png>`__, `pdf <../api/_enums_api-1.pdf>`__)"
msgstr "(`Código fuente <../api/_enums_api-1.py>`__, `png <../api/_enums_api-1.png>`__, `pdf <../api/_enums_api-1.pdf>`__)"

msgid "Demo of possible JoinStyle's"
msgstr "Demostración de posibles JoinStyle's"

#: matplotlib._enums.JoinStyle.demo:2 of
msgid "Demonstrate how each JoinStyle looks for various join angles."
msgstr "Demostrar cómo se ve cada JoinStyle para varios ángulos de unión."

#: matplotlib._enums.CapStyle:2 of
msgid "Define how the two endpoints (caps) of an unclosed line are drawn."
msgstr "Define cómo se dibujan los dos puntos finales (tapas) de una línea no cerrada."

#: matplotlib._enums.CapStyle:4 of
msgid "How to draw the start and end points of lines that represent a closed curve (i.e. that end in a `~.path.Path.CLOSEPOLY`) is controlled by the line's `JoinStyle`. For all other lines, how the start and end points are drawn is controlled by the *CapStyle*."
msgstr "La forma de dibujar los puntos inicial y final de las líneas que representan una curva cerrada (es decir, que terminan en un `~.path.Path.CLOSEPOLY`) está controlada por el `JoinStyle` de la línea. Para todas las demás líneas, la forma en que se dibujan los puntos de inicio y final se controla mediante el *CapStyle*."

#: matplotlib._enums.CapStyle:9 of
msgid "For a visual impression of each *CapStyle*, `view these docs online <CapStyle>` or run `CapStyle.demo`."
msgstr "Para una impresión visual de cada *CapStyle*, `vea estos docs online <CapStyle>` o ejecute `CapStyle.demo`."

#: matplotlib._enums.CapStyle:16 of
msgid "'butt'"
msgstr "'butt'"

#: matplotlib._enums.CapStyle:17 of
msgid "the line is squared off at its endpoint."
msgstr "la línea se hace cuadrada en su punto final."

#: matplotlib._enums.CapStyle:19 of
msgid "'projecting'"
msgstr "'projecting'"

#: matplotlib._enums.CapStyle:19 of
msgid "the line is squared off as in *butt*, but the filled in area extends beyond the endpoint a distance of ``linewidth/2``."
msgstr "la línea se hace cuadrada como en *butt*, pero el área rellenada se extiende más allá del punto final una distancia de ``linewidth/2``."

#: matplotlib._enums.CapStyle:22 of
msgid "like *butt*, but a semicircular cap is added to the end of the line, of radius ``linewidth/2``."
msgstr "como *butt*, pero se añade una tapa semicircular al final de la línea, de radio ``linewidth/2``."

#: ../../api/_enums_api.rst:7
msgid "(`Source code <../api/_enums_api-2.py>`__, `png <../api/_enums_api-2.png>`__, `pdf <../api/_enums_api-2.pdf>`__)"
msgstr "(`Código fuente <../api/_enums_api-2.py>`__, `png <../api/_enums_api-2.png>`__, `pdf <../api/_enums_api-2.pdf>`__)"

msgid "Demo of possible CapStyle's"
msgstr "Demostración de posibles CapStyle's"

#: matplotlib._enums.CapStyle.demo:2 of
msgid "Demonstrate how each CapStyle looks for a thick line segment."
msgstr "Demostrar cómo cada CapStyle busca un segmento de línea gruesa."

