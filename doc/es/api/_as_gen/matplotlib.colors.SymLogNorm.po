msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:59\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.colors.SymLogNorm.po\n"
"X-Crowdin-File-ID: 960\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.rst:2
msgid "matplotlib.colors.SymLogNorm"
msgstr "matplotlib.colors.SymLogNorm"

#: matplotlib.colors.SymLogNorm:1 of
msgid "Bases: :py:class:`matplotlib.colors.SymLogNorm`"
msgstr "Bases: :py:class:`matplotlib.colors.SymLogNorm`"

#: matplotlib.colors.SymLogNorm:2 of
msgid "The symmetrical logarithmic scale is logarithmic in both the positive and negative directions from the origin."
msgstr "La escala logarítmica simétrica es logarítmica tanto en las direcciones positivas como negativas desde el origen."

#: matplotlib.colors.SymLogNorm:5 of
msgid "Since the values close to zero tend toward infinity, there is a need to have a range around zero that is linear.  The parameter *linthresh* allows the user to specify the size of this range (-*linthresh*, *linthresh*)."
msgstr "Puesto que los valores cercanos a cero tienden a ser infinitos, hay una necesidad de tener un rango alrededor de cero que sea lineal. El parámetro *linuco* permite al usuario especificar el tamaño de este rango (-*linuco*, *linuco*)."

#: matplotlib.colors.SymLogNorm
#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__ of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.colors.SymLogNorm:14 of
msgid "**linthresh**"
msgstr "**linthresh**"

#: of
msgid "float"
msgstr "float"

#: matplotlib.colors.SymLogNorm:13 of
msgid "The range within which the plot is linear (to avoid having the plot go to infinity around zero)."
msgstr "El rango dentro del cual la trama es lineal (para evitar tener la trama va a infinidad alrededor de cero)."

#: matplotlib.colors.SymLogNorm:22 of
msgid "**linscale**"
msgstr "**linscale**"

#: of
msgid "float, default: 1"
msgstr "float, default: 1"

#: matplotlib.colors.SymLogNorm:17 of
msgid "This allows the linear range (-*linthresh* to *linthresh*) to be stretched relative to the logarithmic range. Its value is the number of decades to use for each half of the linear range. For example, when *linscale* == 1.0 (the default), the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range."
msgstr "Esto permite que el rango lineal (-*lineal* a *lineal*) sea estirado en relación al rango logarítmico. Su valor es el número de décadas a usar para cada mitad del rango lineal. Por ejemplo, cuando *linscale* == 1. (el valor por defecto), el espacio utilizado para las mitades positivas y negativas de la gama lineal será igual a una década en el rango logarítmico."

#: matplotlib.colors.SymLogNorm:38 of
msgid "**base**"
msgstr "**base**"

#: of
msgid "float, default: 10"
msgstr "float, por defecto: 10"

#: matplotlib.colors.SymLogNorm:52 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: of
msgid "float or None"
msgstr "float o None"

#: matplotlib.colors.SymLogNorm:50 of
msgid "If *vmin* and/or *vmax* is not given, they are initialized from the minimum and maximum value, respectively, of the first input processed; i.e., ``__call__(A)`` calls ``autoscale_None(A)``."
msgstr "Si no se da *vmin* y/o *vmax*, se inicializan a partir del valor mínimo y máximo, respectivamente, del primer proceso de entrada; i. ., ``__call__(A)`` llama a ``autoscale_deleta(A)``."

#: matplotlib.colors.SymLogNorm:69
#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:21 of
msgid "**clip**"
msgstr "**clip**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.colors.SymLogNorm:55 of
msgid "If ``True`` values falling outside the range ``[vmin, vmax]``, are mapped to 0 or 1, whichever is closer, and masked values are set to 1.  If ``False`` masked values remain masked."
msgstr "Si los valores ``True`` que caen fuera del rango ``[vmin, vmax]``, son asignados a 0 o 1, cualquiera que esté más cerca, y los valores enmascarados se establecen a 1. Si los valores enmascarados ``False`` permanecen enmascarados."

#: matplotlib.colors.SymLogNorm:59 of
msgid "Clipping silently defeats the purpose of setting the over, under, and masked colors in a colormap, so it is likely to lead to surprises; therefore the default is ``clip=False``."
msgstr "Recortar silenciosamente derrota el propósito de poner los colores alto, bajo y enmascarados en un mapa de color, por lo que es probable que conduzca a sorpresas; por lo tanto, el valor por defecto es ``clip=False``."

#: matplotlib.colors.SymLogNorm:72
#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:24 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.colors.SymLogNorm:73 of
msgid "Returns 0 if ``vmin == vmax``."
msgstr "Devuelve 0 si ``vmin == vmax``."

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:2 of
msgid "Normalize *value* data in the ``[vmin, vmax]`` interval into the ``[0.0, 1.0]`` interval and return it."
msgstr "Normaliza los datos de *valor* en el intervalo ``[vmin, vmax]`` en el intervalo ``[0.0, 1.0]`` y devuelve."

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:9 of
msgid "**value**"
msgstr "**valor**"

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:9 of
msgid "Data to normalize."
msgstr "Datos a normalizar."

#: of
msgid "bool"
msgstr "bool"

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:12 of
msgid "If ``None``, defaults to ``self.clip`` (which defaults to ``False``)."
msgstr "Si ``ninguno``, el valor predeterminado es ``self.clip`` (que por defecto es ``False``)."

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:25 of
msgid "If not already initialized, ``self.vmin`` and ``self.vmax`` are initialized using ``self.autoscale_None(value)``."
msgstr "Si no se ha inicializado, ``self.vmin`` y ``self.vmax`` son inicializados usando ``self.autoscale_ichard (value)``."

#: ../../../../../../../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:2
msgid "Examples using ``matplotlib.colors.SymLogNorm``"
msgstr "Ejemplos usando ``matplotlib.colors.SymLogNorm``"

#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:10
msgid "Colormap Normalizations"
msgstr "Normalizaciones del mapa de colores"

#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:10
#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:18
msgid ":ref:`sphx_glr_gallery_userdemo_colormap_normalizations.py`"
msgstr ":ref:`sphx_glr_gallery_userdemo_colormap_normalizations.py`"

#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:29
msgid "Colormap Normalizations Symlognorm"
msgstr "Normalizaciones del mapa de colores Symlognorm"

#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:29
#: ../../api/_as_gen/matplotlib.colors.SymLogNorm.examples:37
msgid ":ref:`sphx_glr_gallery_userdemo_colormap_normalizations_symlognorm.py`"
msgstr ":ref:`sphx_glr_gallery_userdemo_colormap_normalizations_symlognorm.py`"

