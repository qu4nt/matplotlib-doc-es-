msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/backend_pgf_api.po\n"
"X-Crowdin-File-ID: 1738\n"
"Language: es_ES\n"

#: ../../api/backend_pgf_api.rst:2
msgid ":mod:`.backend_pgf`"
msgstr ":mod:`.backend_pgf`"

#: matplotlib.backends.backend_pgf.FigureCanvasPgf:1 of
msgid "Bases: :py:class:`matplotlib.backend_bases.FigureCanvasBase`"
msgstr "Bases: :py:class:`matplotlib.backend_bases.FigureCanvasBase`"

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.draw:2 of
msgid "Render the `.Figure`."
msgstr "Renderiza la `.Figure`."

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.draw:4 of
msgid "It is important that this method actually walk the artist tree even if not output is produced because this will trigger deferred work (like computing limits auto-limits and tick values) that users may want access to before saving to disk."
msgstr "Es importante que este método realmente recorra el árbol del artista incluso si no se produce la salida, ya que esto desencadenará trabajos diferidos (como la computación limita los límites automáticos y los valores de tick) a los que los usuarios pueden querer acceder antes de guardar en el disco."

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.get_default_filetype:2 of
msgid "Return the default savefig file format as specified in :rc:`savefig.format`."
msgstr "Devuelve el formato predeterminado de archivo savefig especificado en :rc:`savefig.format`."

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.get_default_filetype:5 of
msgid "The returned string does not include a period. This method is overridden in backends that only support a single file type."
msgstr "La cadena devuelta no incluye un período. Este método se reemplaza en backends que sólo soportan un único tipo de archivo."

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.print_pdf:2 of
msgid "Use LaTeX to compile a pgf generated figure to pdf."
msgstr "Utilice LaTeX para compilar una figura generada por pgf a pdf."

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.print_pgf:2 of
msgid "Output pgf macros for drawing the figure so it can be included and rendered in latex documents."
msgstr "Macros pgf de salida para dibujar la figura de modo que pueda ser incluida y renderizada en documentos de látex."

#: matplotlib.backends.backend_pgf.FigureCanvasPgf.print_png:2 of
msgid "Use LaTeX to compile a pgf figure to pdf and convert it to png."
msgstr "Use LaTeX para compilar una figura pgf a pdf y convertirla a png."

#: matplotlib.backends.backend_pgf.LatexError:1 of
msgid "Bases: :py:class:`Exception`"
msgstr "Bases: :py:class:`Exception`"

#: matplotlib.backends.backend_pgf.LatexManager:1
#: matplotlib.backends.backend_pgf.PdfPages:1
#: matplotlib.backends.backend_pgf.TmpDirCleaner:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.backends.backend_pgf.LatexManager:2 of
msgid "The LatexManager opens an instance of the LaTeX application for determining the metrics of text elements. The LaTeX environment can be modified by setting fonts and/or a custom preamble in `.rcParams`."
msgstr "El LatexManager abre una instancia de la aplicación LaTeX para determinar las métricas de los elementos de texto. El entorno LaTeX puede ser modificado configurando fuentes y/o un preámbulo personalizado en `.rcParams`."

#: matplotlib.backends.backend_pgf.LatexManager.get_width_height_descent:2 of
msgid "Get the width, total height, and descent (in TeX points) for a text typeset by the current LaTeX environment."
msgstr "Obtener el ancho, la altura total y el descenso (en puntos TeX) para un tipo de texto según el entorno LaTeX actual."

#: matplotlib.backends.backend_pgf.PdfPages:2 of
msgid "A multi-page PDF file using the pgf backend"
msgstr "Un archivo PDF de varias páginas usando el backend de pgf"

#: matplotlib.backends.backend_pgf.PdfPages:17 of
msgid "Examples"
msgstr "Ejemplos"

#: matplotlib.backends.backend_pgf.PdfPages:33 of
msgid "Create a new PdfPages object."
msgstr "Crear un nuevo objeto PdfPages."

#: matplotlib.backends.backend_pgf.PdfPages
#: matplotlib.backends.backend_pgf.PdfPages.savefig
#: matplotlib.backends.backend_pgf.RendererPgf.draw_image
#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers
#: matplotlib.backends.backend_pgf.RendererPgf.draw_text
#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.backends.backend_pgf.PdfPages:40 of
msgid "**filename**"
msgstr "**nombre de archivo**"

#: of
msgid "str or path-like"
msgstr "str o como ruta"

#: matplotlib.backends.backend_pgf.PdfPages:39 of
msgid "Plots using `PdfPages.savefig` will be written to a file at this location. Any older file with the same name is overwritten."
msgstr "Los lotes usando `PdfPages.savefig` serán escritos en un archivo en esta ubicación. Cualquier archivo antiguo con el mismo nombre es sobrescrito."

#: matplotlib.backends.backend_pgf.PdfPages:44 of
msgid "**keep_empty**"
msgstr "**guardar_vacío**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.backends.backend_pgf.PdfPages:43 of
msgid "If set to False, then empty pdf files will be deleted automatically when closed."
msgstr "Si se establece en False, los archivos pdf vacíos se eliminarán automáticamente cuando se cierre."

#: matplotlib.backends.backend_pgf.PdfPages:70 of
msgid "**metadata**"
msgstr "**metadatos**"

#: of
msgid "dict, optional"
msgstr "dict, optional"

#: matplotlib.backends.backend_pgf.PdfPages:47 of
msgid "Information dictionary object (see PDF reference section 10.2.1 'Document Information Dictionary'), e.g.: ``{'Creator': 'My software', 'Author': 'Me', 'Title': 'Awesome'}``."
msgstr "Objeto de diccionario de información (consulte la sección de referencia de PDF 10.2.1 'Diccionario de información de documento'), por ejemplo: ``{'Creator': 'My software', 'Author': 'Me', 'Title': 'Awesome'}``."

#: matplotlib.backends.backend_pgf.PdfPages:51 of
msgid "The standard keys are 'Title', 'Author', 'Subject', 'Keywords', 'Creator', 'Producer', 'CreationDate', 'ModDate', and 'Trapped'. Values have been predefined for 'Creator', 'Producer' and 'CreationDate'. They can be removed by setting them to `None`."
msgstr "Las claves estándar son 'Título', 'Autor', 'Tamaño', 'Palabras clave', 'Creador', 'Productor', 'CreationDate', 'ModDate' y 'Trapped'. Los valores han sido predefinidos para 'Creador', 'Productor' y 'CreationDate'. Pueden ser eliminados poniéndolos en 'Ning'."

#: matplotlib.backends.backend_pgf.PdfPages:56 of
msgid "Note that some versions of LaTeX engines may ignore the 'Producer' key and set it to themselves."
msgstr "Tenga en cuenta que algunas versiones de motores LaTeX pueden ignorar la clave 'Productor' y configurarla a sí mismas."

#: matplotlib.backends.backend_pgf.PdfPages.close:2 of
msgid "Finalize this object, running LaTeX in a temporary directory and moving the final pdf file to *filename*."
msgstr "Finalice este objeto, ejecutando LaTeX en un directorio temporal y moviendo el archivo pdf final a *filename*."

#: matplotlib.backends.backend_pgf.PdfPages.get_pagecount:2 of
msgid "Return the current number of pages in the multipage pdf file."
msgstr "Devuelve el número actual de páginas en el archivo pdf multipágina."

#: matplotlib.backends.backend_pgf.PdfPages.savefig:2 of
msgid "Save a `.Figure` to this file as a new page."
msgstr "Guarda un `.Figure` en este archivo como una nueva página."

#: matplotlib.backends.backend_pgf.PdfPages.savefig:4 of
msgid "Any other keyword arguments are passed to `~.Figure.savefig`."
msgstr "Cualquier otro argumento de palabra clave se pasa a `~.Figure.savefig`."

#: matplotlib.backends.backend_pgf.PdfPages.savefig:22 of
msgid "**figure** : `.Figure` or int, default: the active figure"
msgstr "**figura** : `.Figure` o int, por defecto: la figura activa"

#: matplotlib.backends.backend_pgf.PdfPages.savefig:21 of
msgid "Figure or int, default: the active figure"
msgstr "Figura o int, por defecto: la figura activa"

#: matplotlib.backends.backend_pgf.PdfPages.savefig:9 of
msgid "The figure, or index of the figure, that is saved to the file."
msgstr "La figura, o índice de la figura, que se guarda en el archivo."

#: matplotlib.backends.backend_pgf.RendererPgf:1 of
msgid "Bases: :py:class:`matplotlib.backend_bases.RendererBase`"
msgstr "Bases: :py:class:`matplotlib.backend_bases.RendererBase`"

#: matplotlib.backends.backend_pgf.RendererPgf:2 of
msgid "Create a new PGF renderer that translates any drawing instruction into text commands to be interpreted in a latex pgfpicture environment."
msgstr "Crea un nuevo renderizador PGF que traduzca cualquier instrucción de dibujo en comandos de texto para ser interpretado en un entorno pgfpicture de látex."

#: matplotlib.backends.backend_pgf.RendererPgf of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.backends.backend_pgf.RendererPgf:21 of
msgid "**figure** : `matplotlib.figure.Figure`"
msgstr "**figura** : `matplotlib.figure.Figure`"

#: matplotlib.backends.backend_pgf.RendererPgf:20 of
msgid "matplotlib.figure.Figure"
msgstr "matplotlib.figure.Figure"

#: matplotlib.backends.backend_pgf.RendererPgf:21 of
msgid "Matplotlib figure to initialize height, width and dpi from."
msgstr "Figura Matplotlib para inicializar la altura, el ancho y el dpi de."

#: matplotlib.backends.backend_pgf.RendererPgf:25 of
msgid "**fh**"
msgstr "**fh**"

#: of
msgid "file-like"
msgstr "como archivo"

#: matplotlib.backends.backend_pgf.RendererPgf:24 of
msgid "File handle for the output of the drawing commands."
msgstr "Gestor de archivos para la salida de los comandos de dibujo."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:2 of
msgid "Draw an RGBA image."
msgstr "Draw an RGBA image."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:8
#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:12
#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:8 of
msgid "**gc** : `.GraphicsContextBase`"
msgstr "**gc** : `.GraphicsContextBase`"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:7
#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:11
#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:7 of
msgid "GraphicsContextBase"
msgstr "Contexto gráfico base"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:8 of
msgid "A graphics context with clipping information."
msgstr "Un contexto gráfico con información de recorte."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:12
#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:11 of
msgid "**x**"
msgstr "**x**"

#: of
msgid "scalar"
msgstr "escalar"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:11 of
msgid "The distance in physical units (i.e., dots or pixels) from the left hand side of the canvas."
msgstr "La distancia en unidades físicas (es decir, puntos o píxeles) desde el lado izquierdo del lienzo."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:16
#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:14 of
msgid "**y**"
msgstr "**y**"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:15 of
msgid "The distance in physical units (i.e., dots or pixels) from the bottom side of the canvas."
msgstr "La distancia en unidades físicas (es decir, puntos o píxeles) desde la parte inferior del lienzo."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:19 of
msgid "**im**"
msgstr "**im**"

#: of
msgid "(N, M, 4) array-like of np.uint8"
msgstr "(N, M, 4) array-like de np.uint8"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:19 of
msgid "An array of RGBA pixels."
msgstr "Una matriz de píxeles RGBA."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:43 of
msgid "**transform** : `matplotlib.transforms.Affine2DBase`"
msgstr "**transform** : `matplotlib.transforms.Affine2DBase`"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:42 of
msgid "matplotlib.transforms.Affine2DBase"
msgstr "matplotlib.transforms.Affine2DBase"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_image:22 of
msgid "If and only if the concrete backend is written such that :meth:`option_scale_image` returns ``True``, an affine transformation (i.e., an `.Affine2DBase`) *may* be passed to :meth:`draw_image`.  The translation vector of the transformation is given in physical units (i.e., dots or pixels). Note that the transformation does not override *x* and *y*, and has to be applied *before* translating the result by *x* and *y* (this can be accomplished by adding *x* and *y* to the translation vector defined by *transform*)."
msgstr "Si y solo si se escribe el backend concreto tal que :meth:`option_scale_image` devuelva ``True``, una transformación de afino (i.e. un `.Affine2DBase`) *podrá* ser pasado a :meth:`draw_image`. El vector de traducción de la transformación se da en unidades físicas (i. ., puntos o píxeles). Tenga en cuenta que la transformación no anula *x* y *y*, y tiene que ser aplicado *antes* de traducir el resultado por *x* y *y* (esto se puede lograr añadiendo *x* y *y* al vector de traducción definido por *transform*)."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:2 of
msgid "Draw a marker at each of *path*'s vertices (excluding control points)."
msgstr "Dibuja un marcador en cada uno de los vértices de *path* (excluyendo los puntos de control)."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:4 of
msgid "This provides a fallback implementation of draw_markers that makes multiple calls to :meth:`draw_path`.  Some backends may want to override this method in order to draw the marker only once and reuse it multiple times."
msgstr "Esto proporciona una implementación de draw_markers que hace varias llamadas a :meth:`draw_path`. Algunos backends pueden querer sobreescribir este método para dibujar el marcador una sola vez y reutilizarlo varias veces."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:12
#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:8 of
msgid "The graphics context."
msgstr "El contexto gráfico."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:15 of
msgid "**marker_trans** : `matplotlib.transforms.Transform`"
msgstr "**marker_trans** : `matplotlib.transforms.Transform`"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:14
#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:30 of
msgid "matplotlib.transforms.Transform"
msgstr "matplotlib.transforms.Transformar"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:15 of
msgid "An affine transform applied to the marker."
msgstr "Una transformación afectada aplicada al marcador."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:31 of
msgid "**trans** : `matplotlib.transforms.Transform`"
msgstr "**trans** : `matplotlib.transforms.Transform`"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_markers:18 of
msgid "An affine transform applied to the path."
msgstr "Una transformación afectada aplicada a la ruta."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_path:2 of
msgid "Draw a `~.path.Path` instance using the given affine transform."
msgstr "Dibuja una instancia `~.path.Path` usando la transforma affine dada."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:2 of
msgid "Draw the text instance."
msgstr "Dibuja la instancia de texto."

#: of
msgid "float"
msgstr "float"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:11 of
msgid "The x location of the text in display coords."
msgstr "La posición x del texto en las coordenadas de la pantalla."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:14 of
msgid "The y location of the text baseline in display coords."
msgstr "La ubicación y de la línea de referencia del texto en las coordenadas de la pantalla."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:17 of
msgid "**s**"
msgstr "**s**"

#: of
msgid "str"
msgstr "str"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:17 of
msgid "The text string."
msgstr "La cadena de texto."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:20 of
msgid "**prop** : `matplotlib.font_manager.FontProperties`"
msgstr "**prop** : `matplotlib.font_manager.FontProperties`"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:19 of
msgid "matplotlib.font_manager.FontProperties"
msgstr "Propiedades de fuente"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:20 of
msgid "The font properties."
msgstr "Las propiedades de la fuente."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:23 of
msgid "**angle**"
msgstr "**angle**"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:23 of
msgid "The rotation angle in degrees anti-clockwise."
msgstr "El ángulo de rotación en grados en sentido anti-reloj."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:34 of
msgid "**mtext** : `matplotlib.text.Text`"
msgstr "**mtext** : `matplotlib.text.Text`"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:33 of
msgid "matplotlib.text.Text"
msgstr "matplotlib.text.Texto"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:26 of
msgid "The original text object to be rendered."
msgstr "El objeto de texto original a ser renderizado."

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:37
#: matplotlib.backends.backend_pgf.TmpDirCleaner:15
#: matplotlib.backends.backend_pgf.TmpDirCleaner.add:15
#: matplotlib.backends.backend_pgf.TmpDirCleaner.cleanup_remaining_tmpdirs:15
#: of
msgid "Notes"
msgstr "Notes"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:38 of
msgid "**Note for backend implementers:**"
msgstr "**Nota para implementadores de backend:**"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:40 of
msgid "When you are trying to determine if you have gotten your bounding box right (which is what enables the text layout/alignment to work properly), it helps to change the line in text.py::"
msgstr "Cuando está intentando determinar si tiene configurado su cuadro de límite correcto (que es lo que permite que el diseño de texto/alineación funcione correctamente), ayuda a cambiar la línea en el texto. y::"

#: matplotlib.backends.backend_pgf.RendererPgf.draw_text:46 of
msgid "to if 1, and then the actual bounding box will be plotted along with your text."
msgstr "a si 1, y luego el cuadro de límite actual será trazado junto con su texto."

#: matplotlib.backends.backend_pgf.RendererPgf.flipy:2 of
msgid "Return whether y values increase from top to bottom."
msgstr "Devuelve si los valores y aumentan de arriba a abajo."

#: matplotlib.backends.backend_pgf.RendererPgf.flipy:4 of
msgid "Note that this only affects drawing of texts and images."
msgstr "Tenga en cuenta que esto sólo afecta al dibujo de textos e imágenes."

#: matplotlib.backends.backend_pgf.RendererPgf.get_canvas_width_height:2 of
msgid "Return the canvas width and height in display coords."
msgstr "Devuelve el ancho y la altura del lienzo en las coordenadas de la pantalla."

#: matplotlib.backends.backend_pgf.RendererPgf.get_text_width_height_descent:2
#: of
msgid "Get the width, height, and descent (offset from the bottom to the baseline), in display coords, of the string *s* with `.FontProperties` *prop*."
msgstr "Obtener la anchura, la altura y el descenso (offset de la parte inferior a la línea de referencia), en las coordenadas de visualización, de la cadena *s* con `.FontProperties` *prop*."

#: matplotlib.backends.backend_pgf.RendererPgf.option_image_nocomposite:2 of
msgid "Return whether image composition by Matplotlib should be skipped."
msgstr "Devuelve si la composición de la imagen por Matplotlib debe ser omitida."

#: matplotlib.backends.backend_pgf.RendererPgf.option_image_nocomposite:4 of
msgid "Raster backends should usually return False (letting the C-level rasterizer take care of image composition); vector backends should usually return ``not rcParams[\"image.composite_image\"]``."
msgstr "Los backends Raster generalmente deben devolver False (dejando que el rasterizador de nivel C se ocupe de la composición de la imagen); los backends de vector generalmente deben devolver ``not rcParams[\"image.composite_image\"]``."

#: matplotlib.backends.backend_pgf.RendererPgf.option_scale_image:2 of
msgid "Return whether arbitrary affine transformations in :meth:`draw_image` are supported (True for most vector backends)."
msgstr "Devuelve si las transformaciones afectadas arbitrarias en :meth:`draw_image` son soportadas (Verdadero para la mayoría de los servidores vectoriales)."

#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels:2 of
msgid "Convert points to display units."
msgstr "Convierte puntos para mostrar unidades."

#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels:4 of
msgid "You need to override this function (unless your backend doesn't have a dpi, e.g., postscript or svg).  Some imaging systems assume some value for pixels per inch::"
msgstr "Necesitas sobreescribir esta función (a menos que tu backend no tenga un dpi, p.ej. postscript o svg). Algunos sistemas de imágenes asumen algún valor para píxeles por pulgada::"

#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels:13 of
msgid "**points**"
msgstr "**puntos**"

#: of
msgid "float or array-like"
msgstr "flotante o matriz"

#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels:13 of
msgid "a float or a numpy array of float"
msgstr "un float o un array numpy de float"

#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.backends.backend_pgf.RendererPgf.points_to_pixels:30 of
msgid "Points converted to pixels"
msgstr "Puntos convertidos en píxeles"

#: matplotlib.backends.backend_pgf.TmpDirCleaner:2
#: matplotlib.backends.backend_pgf.TmpDirCleaner.add:2
#: matplotlib.backends.backend_pgf.TmpDirCleaner.cleanup_remaining_tmpdirs:2 of
msgid "[*Deprecated*]"
msgstr "[*Deprecated*]"

#: matplotlib.backends.backend_pgf.TmpDirCleaner:16
#: matplotlib.backends.backend_pgf.TmpDirCleaner.add:16
#: matplotlib.backends.backend_pgf.TmpDirCleaner.cleanup_remaining_tmpdirs:16
#: of
msgid "\\"
msgstr "\\"

#: matplotlib.backends.backend_pgf.common_texification:2 of
msgid "Do some necessary and/or useful substitutions for texts to be included in LaTeX documents."
msgstr "Realizar algunos sustitutos necesarios y/o útiles de los textos que se incluirán en los documentos de LaTeX."

#: matplotlib.backends.backend_pgf.common_texification:5 of
#, python-format
msgid "This distinguishes text-mode and math-mode by replacing the math separator ``$`` with ``\\(\\displaystyle %s\\)``. Escaped math separators (``\\$``) are ignored."
msgstr "Esto distingue el modo texto y el modo matemático reemplazando el separador de matemáticas ``$`` por ``\\(\\displaystyle %s\\)``. Los separadores de matemáticas escapados (``\\$``) son ignorados."

#: matplotlib.backends.backend_pgf.common_texification:9 of
msgid "The following characters are escaped in text segments: ``_^$%``"
msgstr "Los siguientes caracteres se escapan en segmentos de texto: ``_^$%``"

#: matplotlib.backends.backend_pgf.get_fontspec:2 of
msgid "Build fontspec preamble from rc."
msgstr "Construye preámbulo de fontspec desde rc."

#: matplotlib.backends.backend_pgf.get_preamble:2 of
msgid "Get LaTeX preamble from rc."
msgstr "Obtener preámbulo LaTeX de rc."

#: matplotlib.backends.backend_pgf.make_pdf_to_png_converter:2 of
msgid "Return a function that converts a pdf file to a png file."
msgstr "Devuelve una función que convierte un archivo pdf a un archivo png."

