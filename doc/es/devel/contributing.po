msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-03 22:46\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/devel/contributing.po\n"
"X-Crowdin-File-ID: 2040\n"
"Language: es_ES\n"

#: ../../devel/contributing.rst:5
msgid "Contributing"
msgstr "Contribuyendo a"

#: ../../devel/contributing.rst:7
msgid "This project is a community effort, and everyone is welcome to contribute. Everyone within the community is expected to abide by our `code of conduct <https://github.com/matplotlib/matplotlib/blob/master/CODE_OF_CONDUCT.md>`_."
msgstr "Este proyecto es un esfuerzo comunitario, y todo el mundo es bienvenido a contribuir. Se espera que todo el mundo dentro de la comunidad cumpla con nuestro `código de conducta <https://github.com/matplotlib/matplotlib/blob/master/CODE_OF_CONDUCT.md>`_."

#: ../../devel/contributing.rst:12
msgid "The project is hosted on https://github.com/matplotlib/matplotlib"
msgstr "El proyecto está alojado en https://github.com/matplotlib/matplotlib"

#: ../../devel/contributing.rst:16
msgid "Contributor incubator"
msgstr "Incubadora de colaboradores"

#: ../../devel/contributing.rst:18
msgid "If you are interested in becoming a regular contributor to Matplotlib, but don't know where to start or feel insecure about it, you can join our non-public communication channel for new contributors. To do so, please go to `gitter <https://gitter.im/matplotlib/matplotlib>`_ and ask to be added to '#incubator'. This is a private gitter room moderated by core Matplotlib developers where you can get guidance and support for your first few PRs.  This is a place you can ask questions about anything: how to use git, github, how our PR review process works, technical questions about the code, what makes for good documentation or a blog post, how to get involved involved in community work, or get \"pre-review\" on your PR."
msgstr "Si tienes interés en convertirte en un colaborador/a habitual de Matplotlib, pero no sabes por dónde empezar o te sientes inseguro/a al respecto, puedes unirte a nuestro canal de comunicación no público para nuevos colaboradores. Para ello, dirígete a `gitter <https://gitter.im/matplotlib/matplotlib>`_ y pide que te añadan a ``incubadora''. Esta es una sala privada de gitter moderada por los desarrolladores del núcleo de Matplotlib, donde puedes obtener orientación y apoyo para tus primeros PRs.  Este es un lugar donde puedes hacer preguntas sobre cualquier cosa: cómo usar git, github, cómo funciona nuestro proceso de revisión de PRs, preguntas técnicas sobre el código, qué hace una buena documentación o una entrada de blog, cómo involucrarse en el trabajo de la comunidad, o conseguir una \"pre-revisión\" de tu PR."

#: ../../devel/contributing.rst:32
msgid "Issues for new contributors"
msgstr "Cuestiones para los nuevos contribuyentes"

#: ../../devel/contributing.rst:34
#, python-format
msgid "While any contributions are welcome, we have marked some issues as particularly suited for new contributors by the label `good first issue <https://github.com/matplotlib/matplotlib/labels/good%20first%20issue>`_ These are well documented issues, that do not require a deep understanding of the internals of Matplotlib. The issues may additionally be tagged with a difficulty. ``Difficulty: Easy`` is suited for people with little Python experience. ``Difficulty: Medium`` and ``Difficulty: Hard`` are not trivial to solve and require more thought and programming experience."
msgstr "Aunque todas las contribuciones son bienvenidas, hemos marcado algunas cuestiones como especialmente adecuadas para los nuevos contribuyentes con la etiqueta `buena primera cuestión <https://github.com/matplotlib/matplotlib/labels/good%20first%20issue>`_ Se trata de cuestiones bien documentadas, que no requieren un conocimiento profundo de los aspectos internos de Matplotlib. Los temas pueden ser etiquetados adicionalmente con una dificultad. ``Dificultad: Fácil`` es adecuado para personas con poca experiencia en Python. Dificultad: Medium`` y ``Difficulty: Difícil`` no son triviales de resolver y requieren más reflexión y experiencia en programación."

#: ../../devel/contributing.rst:46
msgid "Submitting a bug report"
msgstr "Envío de un informe de error"

#: ../../devel/contributing.rst:48
msgid "If you find a bug in the code or documentation, do not hesitate to submit a ticket to the `Issue Tracker <https://github.com/matplotlib/matplotlib/issues>`_. You are also welcome to post feature requests or pull requests."
msgstr "Si encuentras un error en el código o en la documentación, no dudes en enviar un ticket al `Issue Tracker <https://github.com/matplotlib/matplotlib/issues>`_. También eres bienvenido/a a publicar solicitudes de características o pull requests."

#: ../../devel/contributing.rst:53
msgid "If you are reporting a bug, please do your best to include the following:"
msgstr "Si estás informando de un error, por favor, haz lo posible por incluir lo siguiente:"

#: ../../devel/contributing.rst:55
msgid "A short, top-level summary of the bug. In most cases, this should be 1-2 sentences."
msgstr "Un breve resumen de nivel superior del fallo. En la mayoría de los casos, esto debería ser 1-2 frases."

#: ../../devel/contributing.rst:58
msgid "A short, self-contained code snippet to reproduce the bug, ideally allowing a simple copy and paste to reproduce. Please do your best to reduce the code snippet to the minimum required."
msgstr "Un fragmento de código corto y autocontenido para reproducir el fallo, que idealmente permita un simple copiar y pegar para reproducirlo. Por favor, haz lo posible por reducir el fragmento de código al mínimo necesario."

#: ../../devel/contributing.rst:62
msgid "The actual outcome of the code snippet."
msgstr "El resultado real del fragmento de código."

#: ../../devel/contributing.rst:64
msgid "The expected outcome of the code snippet."
msgstr "El resultado esperado del fragmento de código."

#: ../../devel/contributing.rst:66
msgid "The Matplotlib version, Python version and platform that you are using. You can grab the version with the following commands::"
msgstr "La versión de Matplotlib, la versión de Python y la plataforma que estás utilizando. Puedes obtener la versión con los siguientes comandos::"

#: ../../devel/contributing.rst:76
msgid "We have preloaded the issue creation page with a Markdown template that you can use to organize this information."
msgstr "Hemos precargado la página de creación de incidencias con una plantilla Markdown que puedes utilizar para organizar esta información."

#: ../../devel/contributing.rst:79
msgid "Thank you for your help in keeping bug reports complete, targeted and descriptive."
msgstr "Gracias por tu ayuda para que los informes de errores sean completos, específicos y descriptivos."

#: ../../devel/contributing.rst:84
msgid "Requesting a new feature"
msgstr "Solicitar una nueva característica"

#: ../../devel/contributing.rst:86
msgid "Please post feature requests to the `Issue Tracker <https://github.com/matplotlib/matplotlib/issues>`_."
msgstr "Por favor, publica las peticiones de características en el `Rastreador de temas <https://github.com/matplotlib/matplotlib/issues>`_."

#: ../../devel/contributing.rst:89
msgid "The Matplotlib developers will give feedback on the feature proposal. Since Matplotlib is an open source project with limited resources, we encourage users to then also :ref:`participate in the implementation <contributing-code>`."
msgstr "Los desarrolladores de Matplotlib darán su opinión sobre la propuesta de características. Dado que Matplotlib es un proyecto de código abierto con recursos limitados, animamos a los usuarios a que entonces también :ref:`participen en la implementación <contributing-code>`."

#: ../../devel/contributing.rst:97
msgid "Contributing code"
msgstr "Código de contribución"

#: ../../devel/contributing.rst:102
msgid "How to contribute"
msgstr "Cómo contribuir"

#: ../../devel/contributing.rst:104
msgid "The preferred way to contribute to Matplotlib is to fork the `main repository <https://github.com/matplotlib/matplotlib/>`__ on GitHub, then submit a \"pull request\" (PR)."
msgstr "La forma preferida de contribuir a Matplotlib es hacer un fork del `repositorio principal <https://github.com/matplotlib/matplotlib/>`__ en GitHub, y luego enviar un \"pull request\" (PR)."

#: ../../devel/contributing.rst:108
msgid "A brief overview is:"
msgstr "Un breve resumen es:"

#: ../../devel/contributing.rst:110
msgid "`Create an account <https://github.com/join>`_ on GitHub if you do not already have one."
msgstr "`Crea una cuenta <https://github.com/join>` en GitHub si aún no tienes una."

#: ../../devel/contributing.rst:113
msgid "Fork the `project repository <https://github.com/matplotlib/matplotlib>`_: click on the 'Fork' button near the top of the page. This creates a copy of the code under your account on the GitHub server."
msgstr "Fork del `repositorio del proyecto <https://github.com/matplotlib/matplotlib>`_: haz clic en el botón 'Fork' cerca de la parte superior de la página. Esto crea una copia del código bajo tu cuenta en el servidor de GitHub."

#: ../../devel/contributing.rst:117
msgid "Clone this copy to your local disk::"
msgstr "Clona esta copia en tu disco local::"

#: ../../devel/contributing.rst:121
msgid "Enter the directory and install the local version of Matplotlib. See :ref:`installing_for_devs` for instructions"
msgstr "Entra en el directorio e instala la versión local de Matplotlib. Ver :ref:`installing_for_devs` para instrucciones"

#: ../../devel/contributing.rst:124
msgid "Create a branch to hold your changes::"
msgstr "Crea una rama para mantener tus cambios::"

#: ../../devel/contributing.rst:128
msgid "and start making changes. Never work in the ``master`` branch!"
msgstr "y empezar a hacer cambios. Nunca trabajes en la rama ``master``!"

#: ../../devel/contributing.rst:130
msgid "Work on this copy, on your computer, using Git to do the version control. When you're done editing e.g., ``lib/matplotlib/collections.py``, do::"
msgstr "Trabaja en esta copia, en tu ordenador, usando Git para hacer el control de versiones. Cuando hayas terminado de editar, por ejemplo, ``lib/matplotlib/collections.py``, haz::"

#: ../../devel/contributing.rst:136
msgid "to record your changes in Git, then push them to GitHub with::"
msgstr "para registrar tus cambios en Git, y luego empujarlos a GitHub con::"

#: ../../devel/contributing.rst:140
msgid "Finally, go to the web page of your fork of the Matplotlib repo, and click 'Pull request' to send your changes to the maintainers for review."
msgstr "Por último, ve a la página web de tu fork del repo de Matplotlib, y haz clic en 'Pull request' para enviar tus cambios a los mantenedores para su revisión."

#: ../../devel/contributing.rst:145
msgid "`Git documentation <https://git-scm.com/doc>`_"
msgstr "`Git documentation <https://git-scm.com/doc>`_"

#: ../../devel/contributing.rst:146
msgid "`Git-Contributing to a Project <https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project>`_"
msgstr "`Git-Contributing to a Project <https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project>`_"

#: ../../devel/contributing.rst:147
msgid "`Introduction to GitHub  <https://lab.github.com/githubtraining/introduction-to-github>`_"
msgstr "`Introducción a GitHub <https://lab.github.com/githubtraining/introduction-to-github>`_"

#: ../../devel/contributing.rst:148
msgid ":ref:`development-workflow` for best practices for Matplotlib"
msgstr ":ref:`development-workflow` para las mejores prácticas para Matplotlib"

#: ../../devel/contributing.rst:149
msgid ":ref:`using-git`"
msgstr ":ref:`using-git`"

#: ../../devel/contributing.rst:152
msgid "Contributing pull requests"
msgstr "Contribuyendo con pull requests"

#: ../../devel/contributing.rst:154
msgid "It is recommended to check that your contribution complies with the following rules before submitting a pull request:"
msgstr "Se recomienda comprobar que tu contribución cumpla con las siguientes reglas antes de enviar un pull request:"

#: ../../devel/contributing.rst:157
msgid "If your pull request addresses an issue, please use the title to describe the issue and mention the issue number in the pull request description to ensure that a link is created to the original issue."
msgstr "Si tu pull request se refiere a un problema, por favor, utiliza el título para describir el problema y menciona el número de problema en la descripción del pull request para asegurar que se cree un enlace al problema original."

#: ../../devel/contributing.rst:161
msgid "All public methods should have informative docstrings with sample usage when appropriate. Use the `numpy docstring standard <https://numpydoc.readthedocs.io/en/latest/format.html>`_."
msgstr "Todos los métodos públicos deben tener docstrings informativos con ejemplos de uso cuando sea apropiado. Utilice el estándar de documentación de `numpy <https://numpydoc.readthedocs.io/en/latest/format.html>`."

#: ../../devel/contributing.rst:165
msgid "Formatting should follow the recommendations of PEP8_, as enforced by flake8_.  You can check flake8 compliance from the command line with ::"
msgstr "El formato debe seguir las recomendaciones de PEP8_, tal y como lo impone flake8_.  Puedes comprobar el cumplimiento de flake8 desde la línea de comandos con ::"

#: ../../devel/contributing.rst:171
msgid "or your editor may provide integration with it.  Note that Matplotlib intentionally does not use the black_ auto-formatter (1__), in particular due to its unability to understand the semantics of mathematical expressions (2__, 3__)."
msgstr "o tu editor puede proporcionar la integración con él.  Ten en cuenta que Matplotlib no utiliza intencionadamente el autoformato black_ (1__), en particular debido a su incapacidad para entender la semántica de las expresiones matemáticas (2__, 3__)."

#: ../../devel/contributing.rst:183
msgid "Each high-level plotting function should have a simple example in the ``Example`` section of the docstring.  This should be as simple as possible to demonstrate the method.  More complex examples should go in the ``examples`` tree."
msgstr "Cada función de trazado de alto nivel debería tener un ejemplo sencillo en la sección ``Ejemplo`` del docstring.  Este debe ser lo más simple posible para demostrar el método.  Los ejemplos más complejos deben ir en el árbol ``examples``."

#: ../../devel/contributing.rst:188
msgid "Changes (both new features and bugfixes) should have good test coverage. See :ref:`testing` for more details."
msgstr "Los cambios (tanto las nuevas características como las correcciones de errores) deben tener una buena cobertura de pruebas. Mira :ref:`testing` para más detalles."

#: ../../devel/contributing.rst:191
msgid "Import the following modules using the standard scipy conventions::"
msgstr "Importar los siguientes módulos utilizando las convenciones estándar de scipy::"

#: ../../devel/contributing.rst:200
msgid "In general, Matplotlib modules should **not** import `.rcParams` using ``from matplotlib import rcParams``, but rather access it as ``mpl.rcParams``.  This is because some modules are imported very early, before the `.rcParams` singleton is constructed."
msgstr "En general, los módulos de Matplotlib  **no** deberían importar `.rcParams` usando ``from matplotlib import rcParams``, sino acceder a él como ``mpl.rcParams``.  Esto se debe a que algunos módulos se importan muy pronto, antes de que se construya el singleton `.rcParams`."

#: ../../devel/contributing.rst:205
msgid "If your change is a major new feature, add an entry to the ``What's new`` section by adding a new file in ``doc/users/next_whats_new`` (see :file:`doc/users/next_whats_new/README.rst` for more information)."
msgstr "Si tu cambio es una nueva característica importante, añade una entrada a la sección ``What's new`` añadiendo un nuevo fichero en ``doc/users/next_whats_new`` (ver :file:`doc/users/next_whats_new/README.rst` para más información)."

#: ../../devel/contributing.rst:209
msgid "If you change the API in a backward-incompatible way, please document it in :file:`doc/api/next_api_changes/behavior`, by adding a new file with the naming convention ``99999-ABC.rst`` where the pull request number is followed by the contributor's initials. (see :file:`doc/api/api_changes.rst` for more information)"
msgstr "Si cambias la API de forma incompatible con versiones anteriores, documéntalo en :file:`doc/api/next_api_changes/behavior`, añadiendo un nuevo archivo con la convención de nombres ``99999-ABC.rst`` donde el número de pull request va seguido de las iniciales del contribuidor. (ver :file:`doc/api/api_changes.rst` para más información)"

#: ../../devel/contributing.rst:215
msgid "See below for additional points about :ref:`keyword-argument-processing`, if applicable for your pull request."
msgstr "A continuación encontrarás puntos adicionales sobre :ref:`procesamiento de palabras clave-argumentos`, si es aplicable a tu pull request."

#: ../../devel/contributing.rst:220
msgid "The current state of the Matplotlib code base is not compliant with all of those guidelines, but we expect that enforcing those constraints on all new contributions will move the overall code base quality in the right direction."
msgstr "El estado actual de la base de código de Matplotlib no cumple con todas esas directrices, pero esperamos que la aplicación de esas restricciones en todas las nuevas contribuciones hará que la calidad general de la base de código vaya en la dirección correcta."

#: ../../devel/contributing.rst:228
msgid ":ref:`coding_guidelines`"
msgstr ":ref:`coding_guidelines`"

#: ../../devel/contributing.rst:229
msgid ":ref:`testing`"
msgstr ":ref:`testing`"

#: ../../devel/contributing.rst:230 ../../devel/contributing.rst:258
msgid ":ref:`documenting-matplotlib`"
msgstr ":ref:`documenting-matplotlib`"

#: ../../devel/contributing.rst:238
msgid "Contributing documentation"
msgstr "Contribuyendo a la documentación"

#: ../../devel/contributing.rst:240
msgid "You as an end-user of Matplotlib can make a valuable contribution because you more clearly see the potential for improvement than a core developer. For example, you can:"
msgstr "Tú, como usuario final de Matplotlib, puedes hacer una valiosa contribución porque ves más claramente el potencial de mejora que un desarrollador del núcleo. Por ejemplo, puedes:"

#: ../../devel/contributing.rst:243
msgid "Fix a typo"
msgstr "Arreglar un error tipográfico"

#: ../../devel/contributing.rst:244
msgid "Clarify a docstring"
msgstr "Aclarar un docstring"

#: ../../devel/contributing.rst:245
msgid "Write or update an :ref:`example plot <gallery>`"
msgstr "Escribir o actualizar una :ref:`grafo de ejemplo <gallery>`"

#: ../../devel/contributing.rst:246
msgid "Write or update a comprehensive :ref:`tutorial <tutorials>`"
msgstr "Escribir o actualizar un completo :ref:`tutorial <tutorials>`"

#: ../../devel/contributing.rst:248
msgid "The documentation source files live in the same GitHub repository as the code. Contributions are proposed and accepted through the pull request process. For details see :ref:`how-to-contribute`."
msgstr "Los archivos fuente de la documentación viven en el mismo repositorio de GitHub que el código. Las contribuciones se proponen y aceptan a través del proceso de pull request. Para más detalles, véase :ref:`how-to-contribute`."

#: ../../devel/contributing.rst:252
msgid "If you have trouble getting started, you may instead open an `issue`_ describing the intended improvement."
msgstr "Si tienes problemas para empezar, puedes abrir un `issue`_ describiendo la mejora que pretendes."

#: ../../devel/contributing.rst:263
msgid "Other ways to contribute"
msgstr "Otras formas de contribuir"

#: ../../devel/contributing.rst:265
msgid "It also helps us if you spread the word: reference the project from your blog and articles or link to it from your website!  If Matplotlib contributes to a project that leads to a scientific publication, please follow the :doc:`/users/project/citing` guidelines."
msgstr "También nos ayuda que corras la voz: ¡haz referencia al proyecto desde tu blog y artículos o enlaza con él desde tu página web!  Si Matplotlib contribuye a un proyecto que da lugar a una publicación científica, por favor, sigue las directrices de :doc:`/users/project/citing`."

#: ../../devel/contributing.rst:273
msgid "Coding guidelines"
msgstr "Pautas de codificación"

#: ../../devel/contributing.rst:276
msgid "API changes"
msgstr "Cambios en la API"

#: ../../devel/contributing.rst:278
msgid "API consistency and stability are of great value. Therefore, API changes (e.g. signature changes, behavior changes, removals) will only be conducted if the added benefit is worth the user effort for adapting."
msgstr "La consistencia y la estabilidad de la API son de gran valor. Por lo tanto, los cambios de la API (por ejemplo, cambios de firma, cambios de comportamiento, eliminaciones) sólo se llevará a cabo si el beneficio añadido vale la pena el esfuerzo del usuario para adaptarse."

#: ../../devel/contributing.rst:282
msgid "API changes in Matplotlib have to be performed following the deprecation process below, except in very rare circumstances as deemed necessary by the development team. This ensures that users are notified before the change will take effect and thus prevents unexpected breaking of code."
msgstr "Los cambios de la API en Matplotlib tienen que realizarse siguiendo el proceso de depreciación que se indica a continuación, excepto en circunstancias muy raras que el equipo de desarrollo considere necesarias. Esto asegura que los usuarios sean notificados antes de que el cambio surta efecto y así se evitan rupturas inesperadas de código."

#: ../../devel/contributing.rst:288
msgid "Rules"
msgstr "Reglas"

#: ../../devel/contributing.rst:290
msgid "Deprecations are targeted at the next point.release (e.g. 3.x)"
msgstr "Las desapariciones se dirigen al siguiente punto.release (por ejemplo, 3.x)"

#: ../../devel/contributing.rst:291
msgid "Deprecated API is generally removed two two point-releases after introduction of the deprecation. Longer deprecations can be imposed by core developers on a case-by-case basis to give more time for the transition"
msgstr "La API desaprobada se elimina generalmente dos versiones puntuales después de la introducción de la desaprobación. Las depreciaciones más largas pueden ser impuestas por los desarrolladores del núcleo sobre una base de caso por caso para dar más tiempo para la transición"

#: ../../devel/contributing.rst:294
msgid "The old API must remain fully functional during the deprecation period"
msgstr "La antigua API debe seguir siendo totalmente funcional durante el periodo de depreciación"

#: ../../devel/contributing.rst:295
msgid "If alternatives to the deprecated API exist, they should be available during the deprecation period"
msgstr "Si existen alternativas a la API obsoleta, deberían estar disponibles durante el periodo de obturación"

#: ../../devel/contributing.rst:297
msgid "If in doubt, decisions about API changes are finally made by the API consistency lead developer"
msgstr "En caso de duda, las decisiones sobre los cambios en la API son tomadas finalmente por el desarrollador principal de la consistencia de la API"

#: ../../devel/contributing.rst:301
msgid "Introducing"
msgstr "Presentación de"

#: ../../devel/contributing.rst:303
msgid "Announce the deprecation in a new file :file:`doc/api/next_api_changes/deprecations/99999-ABC.rst` where ``99999`` is the pull request number and ``ABC`` are the contributor's initials."
msgstr "Anuncia la depreciación en un nuevo archivo :file:`doc/api/next_api_changes/deprecations/99999-ABC.rst` donde ``999`` es el número de pull request y ``ABC`` son las iniciales del contribuidor."

#: ../../devel/contributing.rst:306
msgid "If possible, issue a `.MatplotlibDeprecationWarning` when the deprecated API is used. There are a number of helper tools for this:"
msgstr "Si es posible, emite un `.MatplotlibDeprecationWarning` cuando utilices la API obsoleta. Hay una serie de herramientas de ayuda para esto:"

#: ../../devel/contributing.rst:309
msgid "Use ``_api.warn_deprecated()`` for general deprecation warnings"
msgstr "Usa ``_api.warn_deprecated()`` para avisos generales de depreciación"

#: ../../devel/contributing.rst:310
msgid "Use the decorator ``@_api.deprecated`` to deprecate classes, functions, methods, or properties"
msgstr "Utiliza el decorador ``@_api.deprecated`` para desaprobar clases, funciones, métodos o propiedades"

#: ../../devel/contributing.rst:312
msgid "To warn on changes of the function signature, use the decorators ``@_api.delete_parameter``, ``@_api.rename_parameter``, and ``@_api.make_keyword_only``"
msgstr "Para avisar de cambios en la firma de la función, utiliza los decoradores ``@_api.delete_parameter``, ``@_api.rename_parameter``, y ``@_api.make_keyword_only``"

#: ../../devel/contributing.rst:316
msgid "All these helpers take a first parameter *since*, which should be set to the next point release, e.g. \"3.x\"."
msgstr "Todos estos helpers toman un primer parámetro *since*, que debe ser establecido a la siguiente versión de punto, por ejemplo \"3.x\"."

#: ../../devel/contributing.rst:320
msgid "Expiring"
msgstr "Expiración"

#: ../../devel/contributing.rst:322
msgid "Announce the API changes in a new file :file:`doc/api/next_api_changes/[kind]/99999-ABC.rst` where ``99999`` is the pull request number and ``ABC`` are the contributor's initials, and ``[kind]`` is one of the folders :file:`behavior`, :file:`development`, :file:`removals`. See :file:`doc/api/next_api_changes/README.rst` for more information. For the content, you can usually copy the deprecation notice and adapt it slightly."
msgstr "Anuncia los cambios de la API en un nuevo fichero :file:`doc/api/next_api_changes/[kind]/99999-ABC.rst` donde ``999`` es el número de pull request y ``ABC`` son las iniciales del contribuidor, y ``[kind]`` es una de las carpetas :file:`behavior`, :file:`development`, :file:`removals`. Consulta :file:`doc/api/next_api_changes/README.rst` para más información. Para el contenido, normalmente se puede copiar el aviso de depreciación y adaptarlo ligeramente."

#: ../../devel/contributing.rst:329
msgid "Change the code functionality and remove any related deprecation warnings."
msgstr "Cambia la funcionalidad del código y elimina las advertencias de desaprobación relacionadas."

#: ../../devel/contributing.rst:332
msgid "Adding new API"
msgstr "Añadiendo nueva API"

#: ../../devel/contributing.rst:334
msgid "Every new function, parameter and attribute that is not explicitly marked as private (i.e., starts with an underscore) becomes part of Matplotlib's public API. As discussed above, changing the existing API is cumbersome. Therefore, take particular care when adding new API:"
msgstr "Cada nueva función, parámetro y atributo que no esté marcado explícitamente como privado (es decir, que empiece con un guión bajo) pasa a formar parte de la API pública de Matplotlib. Como se ha comentado anteriormente, cambiar la API existente es engorroso. Por lo tanto, ten especial cuidado cuando añadas una nueva API:"

#: ../../devel/contributing.rst:339
msgid "Mark helper functions and internal attributes as private by prefixing them with an underscore."
msgstr "Marca las funciones de ayuda y los atributos internos como privados anteponiéndoles un guión bajo."

#: ../../devel/contributing.rst:341
msgid "Carefully think about good names for your functions and variables."
msgstr "Piensa cuidadosamente en buenos nombres para tus funciones y variables."

#: ../../devel/contributing.rst:342
msgid "Try to adopt patterns and naming conventions from existing parts of the Matplotlib API."
msgstr "Intenta adoptar patrones y convenciones de nomenclatura de las partes existentes de la API de Matplotlib."

#: ../../devel/contributing.rst:344
msgid "Consider making as many arguments keyword-only as possible. See also `API Evolution the Right Way -- Add Parameters Compatibly`__."
msgstr "Considera la posibilidad de hacer el mayor número posible de argumentos con palabras clave. Ver también `API Evolution the Right Way -- Add Parameters Compatibly`__."

#: ../../devel/contributing.rst:351
msgid "New modules and files: installation"
msgstr "Nuevos módulos y archivos: instalación"

#: ../../devel/contributing.rst:353
msgid "If you have added new files or directories, or reorganized existing ones, make sure the new files are included in the match patterns in in *package_data* in :file:`setupext.py`."
msgstr "Si has añadido nuevos ficheros o directorios, o has reorganizado los existentes, asegúrate de que los nuevos ficheros están incluidos en los patrones de coincidencia en *package_data* en :file:`setupext.py`."

#: ../../devel/contributing.rst:358
msgid "C/C++ extensions"
msgstr "Extensiones C/C++"

#: ../../devel/contributing.rst:360
msgid "Extensions may be written in C or C++."
msgstr "Las extensiones pueden estar escritas en C o C++."

#: ../../devel/contributing.rst:362
msgid "Code style should conform to PEP7 (understanding that PEP7 doesn't address C++, but most of its admonitions still apply)."
msgstr "El estilo del código debe ajustarse a PEP7 (entendiendo que PEP7 no se refiere a C++, pero la mayoría de sus advertencias siguen siendo aplicables)."

#: ../../devel/contributing.rst:365
msgid "Python/C interface code should be kept separate from the core C/C++ code.  The interface code should be named :file:`FOO_wrap.cpp` or :file:`FOO_wrapper.cpp`."
msgstr "El código de interfaz de Python/C debe mantenerse separado del código C/C++ del núcleo.  El código de la interfaz debe llamarse :file:`FOO_wrap.cpp` o :file:`FOO_wrapper.cpp`."

#: ../../devel/contributing.rst:369
msgid "Header file documentation (aka docstrings) should be in Numpydoc format.  We don't plan on using automated tools for these docstrings, and the Numpydoc format is well understood in the scientific Python community."
msgstr "La documentación de los archivos de cabecera (aka docstrings) debe estar en formato Numpydoc.  No planeamos usar herramientas automatizadas para estos docstrings, y el formato Numpydoc es bien entendido en la comunidad científica de Python."

#: ../../devel/contributing.rst:374
msgid "C/C++ code in the :file:`extern/` directory is vendored, and should be kept close to upstream whenever possible.  It can be modified to fix bugs or implement new features only if the required changes cannot be made elsewhere in the codebase.  In particular, avoid making style fixes to it."
msgstr "El código C/C++ en el directorio :file:`extern/` se vende, y debe mantenerse cerca del upstream siempre que sea posible. Puede ser modificado para arreglar errores o implementar nuevas características sólo si los cambios requeridos no se pueden hacer en otra parte de la base de código. En particular, evita hacer arreglos de estilo en él."

#: ../../devel/contributing.rst:382
msgid "Keyword argument processing"
msgstr "Procesamiento del argumento de la palabra clave"

#: ../../devel/contributing.rst:384
msgid "Matplotlib makes extensive use of ``**kwargs`` for pass-through customizations from one function to another.  A typical example is `~matplotlib.axes.Axes.text`.  The definition of `matplotlib.pyplot.text` is a simple pass-through to `matplotlib.axes.Axes.text`::"
msgstr "Matplotlib hace un uso extensivo de ``**kwargs`` para pasar personalizaciones de una función a otra. Un ejemplo típico es `~matplotlib.axes.Axes.text`. La definición de `matplotlib.pyplot.text` es un simple paso a `matplotlib.axes.Axes.text`::"

#: ../../devel/contributing.rst:393
msgid "`matplotlib.axes.Axes.text` (simplified for illustration) just passes all ``args`` and ``kwargs`` on to ``matplotlib.text.Text.__init__``::"
msgstr "`matplotlib.axes.Axes.text` (simplificado para ilustrar) sólo pasa todos los ``args`` y ``kwargs`` a ``matplotlib.text.Text.__init__`::"

#: ../../devel/contributing.rst:400
msgid "and ``matplotlib.text.Text.__init__`` (again, simplified) just passes them on to the `matplotlib.artist.Artist.update` method::"
msgstr "y ``matplotlib.text.Text.__init__`` (de nuevo, simplificado) sólo los pasa al método `matplotlib.artist.Artist.update`::"

#: ../../devel/contributing.rst:408
msgid "``update`` does the work looking for methods named like ``set_property`` if ``property`` is a keyword argument.  i.e., no one looks at the keywords, they just get passed through the API to the artist constructor which looks for suitably named methods and calls them with the value."
msgstr "``update`` hace el trabajo buscando métodos nombrados como ``set_property`` si ``property`` es un argumento de palabra clave. Es decir, nadie mira las palabras clave, simplemente se pasan a través de la API al constructor del artist  que busca métodos con nombres adecuados y los llama con el valor."

#: ../../devel/contributing.rst:414
msgid "As a general rule, the use of ``**kwargs`` should be reserved for pass-through keyword arguments, as in the example above.  If all the keyword args are to be used in the function, and not passed on, use the key/value keyword args in the function definition rather than the ``**kwargs`` idiom."
msgstr "Como regla general, el uso de ``**kwargs`` debe reservarse para argumentos de palabras clave de paso, como en el ejemplo anterior. Si todos los argumentos de palabra clave se van a utilizar en la función, y no se van a pasar, utilice los argumentos de palabra clave/valor en la definición de la función en lugar del modismo ``**kwargs``."

#: ../../devel/contributing.rst:420
msgid "In some cases, you may want to consume some keys in the local function, and let others pass through.  Instead of popping arguments to use off ``**kwargs``, specify them as keyword-only arguments to the local function.  This makes it obvious at a glance which arguments will be consumed in the function.  For example, in :meth:`~matplotlib.axes.Axes.plot`, ``scalex`` and ``scaley`` are local arguments and the rest are passed on as :meth:`~matplotlib.lines.Line2D` keyword arguments::"
msgstr "En algunos casos, puede querer consumir algunas claves en la función local, y dejar que otras pasen.  En lugar de hacer estallar los argumentos a utilizar fuera de ``**kwargs``, especifíquelos como argumentos de sólo palabras clave a la función local.  Esto hace que sea obvio a simple vista qué argumentos serán consumidos en la función.  Por ejemplo, en :meth:`~matplotlib.axes.Axes.plot`, ``scalex`` y ``scaley`` son argumentos locales y el resto se pasan como argumentos de palabra clave :meth:`~matplotlib.lines.Line2D`::"

#: ../../devel/contributing.rst:439
msgid "Using logging for debug messages"
msgstr "Uso del registro para los mensajes de depuración"

#: ../../devel/contributing.rst:441
msgid "Matplotlib uses the standard Python `logging` library to write verbose warnings, information, and debug messages. Please use it! In all those places you write `print` calls to do your debugging, try using `logging.debug` instead!"
msgstr "Matplotlib utiliza la librería estándar de Python `logging` para escribir advertencias, información y mensajes de depuración. ¡Por favor, utilízala! En todos aquellos lugares en los que escribes llamadas `print` para hacer tu depuración, ¡intenta usar `logging.debug` en su lugar!"

#: ../../devel/contributing.rst:447
msgid "To include `logging` in your module, at the top of the module, you need to ``import logging``.  Then calls in your code like::"
msgstr "Para incluir `logging` en tu módulo, en la parte superior del módulo, necesitas ``importar logging``.  A continuación, las llamadas en su código como::"

#: ../../devel/contributing.rst:457
msgid "will log to a logger named ``matplotlib.yourmodulename``."
msgstr "se registrará en un logger llamado ``matplotlib.yourmodulename``."

#: ../../devel/contributing.rst:459
msgid "If an end-user of Matplotlib sets up `logging` to display at levels more verbose than ``logging.WARNING`` in their code with the Matplotlib-provided helper::"
msgstr "Si un usuario final de Matplotlib configura el `logging` para que se muestre a niveles más detallados que ``logging.WARNING`` en su código con el ayudante proporcionado por Matplotlib::"

#: ../../devel/contributing.rst:465
msgid "or manually with ::"
msgstr "o manualmente con ::"

#: ../../devel/contributing.rst:471
msgid "Then they will receive messages like"
msgstr "Entonces recibirán mensajes como"

#: ../../devel/contributing.rst:480
msgid "Which logging level to use?"
msgstr "¿Qué nivel de registro utilizar?"

#: ../../devel/contributing.rst:482
msgid "There are five levels at which you can emit messages."
msgstr "Hay cinco niveles en los que se pueden emitir mensajes."

#: ../../devel/contributing.rst:484
msgid "`logging.critical` and `logging.error` are really only there for errors that will end the use of the library but not kill the interpreter."
msgstr "`logging.critical` y `logging.error` están realmente ahí sólo para errores que terminarán el uso de la biblioteca pero no matarán al intérprete."

#: ../../devel/contributing.rst:486
msgid "`logging.warning` and `._api.warn_external` are used to warn the user, see below."
msgstr "`logging.warning` y `._api.warn_external` se utilizan para avisar al usuario, ver más abajo."

#: ../../devel/contributing.rst:488
msgid "`logging.info` is for information that the user may want to know if the program behaves oddly. They are not displayed by default. For instance, if an object isn't drawn because its position is ``NaN``, that can usually be ignored, but a mystified user could call ``logging.basicConfig(level=logging.INFO)`` and get an error message that says why."
msgstr "`logging.info` es para información que el usuario puede querer saber si el programa se comporta de forma extraña. No se muestran por defecto. Por ejemplo, si un objeto no se dibuja porque su posición es ``NaN``, normalmente se puede ignorar, pero un usuario desconcertado podría llamar a ``logging.basicConfig(level=logging.INFO)`` y obtener un mensaje de error que diga por qué."

#: ../../devel/contributing.rst:494
msgid "`logging.debug` is the least likely to be displayed, and hence can be the most verbose.  \"Expected\" code paths (e.g., reporting normal intermediate steps of layouting or rendering) should only log at this level."
msgstr "`logging.debug` es el menos probable que se muestre, y por lo tanto puede ser el más verboso. Las rutas de código \"esperadas\" (por ejemplo, informando de los pasos intermedios normales de la maquetación o el renderizado) sólo deberían registrar en este nivel."

#: ../../devel/contributing.rst:498
msgid "By default, `logging` displays all log messages at levels higher than ``logging.WARNING`` to `sys.stderr`."
msgstr "Por defecto, `logging` muestra todos los mensajes de registro de niveles superiores a ``logging.WARNING`` en `sys.stderr`."

#: ../../devel/contributing.rst:501
msgid "The `logging tutorial`_ suggests that the difference between `logging.warning` and `._api.warn_external` (which uses `warnings.warn`) is that `._api.warn_external` should be used for things the user must change to stop the warning (typically in the source), whereas `logging.warning` can be more persistent. Moreover, note that `._api.warn_external` will by default only emit a given warning *once* for each line of user code, whereas `logging.warning` will display the message every time it is called."
msgstr "El `tutorial de registro`_ sugiere que la diferencia entre `logging.warning` y `._api.warn_external` (que utiliza `warnings.warn`) es que `._api.warn_external` debe utilizarse para cosas que el usuario debe cambiar para detener la advertencia (normalmente en el código fuente), mientras que `logging.warning` puede ser más persistente. Además, tenga en cuenta que `._api.warn_external` sólo emitirá por defecto una advertencia determinada *una vez* por cada línea de código del usuario, mientras que `logging.warning` mostrará el mensaje cada vez que sea llamado."

#: ../../devel/contributing.rst:509
msgid "By default, `warnings.warn` displays the line of code that has the ``warn`` call. This usually isn't more informative than the warning message itself. Therefore, Matplotlib uses `._api.warn_external` which uses `warnings.warn`, but goes up the stack and displays the first line of code outside of Matplotlib. For example, for the module::"
msgstr "Por defecto, `warnings.warn` muestra la línea de código que tiene la llamada ``warn``. Esto normalmente no es más informativo que el propio mensaje de advertencia. Por lo tanto, Matplotlib utiliza `._api.warn_external` que utiliza `warnings.warn`, pero sube por la pila y muestra la primera línea de código fuera de Matplotlib. Por ejemplo, para el módulo::"

#: ../../devel/contributing.rst:522
msgid "running the script::"
msgstr "ejecutando el script::"

#: ../../devel/contributing.rst:527
msgid "will display::"
msgstr "mostrará::"

#: ../../devel/contributing.rst:532
msgid "Modifying the module to use `._api.warn_external`::"
msgstr "Modificando el módulo para usar:: "

#: ../../devel/contributing.rst:540
msgid "and running the same script will display"
msgstr "y al ejecutar el mismo script se mostrará"

#: ../../devel/contributing.rst:552
msgid "Writing examples"
msgstr "Escribir ejemplos"

#: ../../devel/contributing.rst:554
msgid "We have hundreds of examples in subdirectories of :file:`matplotlib/examples`, and these are automatically generated when the website is built to show up in the :ref:`examples <gallery>` section of the website."
msgstr "Tenemos cientos de ejemplos en subdirectorios de :file:`matplotlib/examples`, y estos se generan automáticamente cuando se construye el sitio web para que aparezcan en la sección :ref:`examples <gallery>` del sitio web."

#: ../../devel/contributing.rst:558
msgid "Any sample data that the example uses should be kept small and distributed with Matplotlib in the :file:`lib/matplotlib/mpl-data/sample_data/` directory.  Then in your example code you can load it into a file handle with::"
msgstr "Cualquier dato de muestra que utilice el ejemplo debe mantenerse pequeño y distribuirse con Matplotlib en el directorio :file:`lib/matplotlib/mpl-data/sample_data/`.  Entonces en tu código de ejemplo puedes cargarlo en un manejador de archivo con::"

