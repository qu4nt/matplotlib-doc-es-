msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:02\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.pcolor.po\n"
"X-Crowdin-File-ID: 1226\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.pcolor.rst:2
msgid "matplotlib.pyplot.pcolor"
msgstr "matplotlib.pyplot.pcolor"

#: matplotlib.pyplot.pcolor:2 of
msgid "Create a pseudocolor plot with a non-regular rectangular grid."
msgstr "Crea una gráfica pseudocolor con una cuadrícula rectangular no regular."

#: matplotlib.pyplot.pcolor:4 of
msgid "Call signature::"
msgstr "Firma de llamada::"

#: matplotlib.pyplot.pcolor:8 of
msgid "*X* and *Y* can be used to specify the corners of the quadrilaterals."
msgstr "*X* y *Y* pueden usarse para especificar las esquinas de los cuadriláteres."

#: matplotlib.pyplot.pcolor:12 of
msgid "``pcolor()`` can be very slow for large arrays. In most cases you should use the similar but much faster `~.Axes.pcolormesh` instead. See :ref:`Differences between pcolor() and pcolormesh() <differences-pcolor-pcolormesh>` for a discussion of the differences."
msgstr "``pcolor()`` puede ser muy lento para matrices grandes. En la mayoría de los casos debería usar el similar pero mucho más rápido `~.Axes. colormesh` en su lugar. Vea :ref:`Diferencias entre pcolor() y pcolormesh() <differences-pcolor-pcolormesh>` para una discusión de las diferencias."

#: matplotlib.pyplot.pcolor of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.pyplot.pcolor:22 of
msgid "**C**"
msgstr "**C**"

#: of
msgid "2D array-like"
msgstr "Arreglo 2D"

#: matplotlib.pyplot.pcolor:22 of
msgid "The color-mapped values."
msgstr "Los valores mapeados por colores."

#: matplotlib.pyplot.pcolor:49 of
msgid "**X, Y**"
msgstr "**X, Y**"

#: of
msgid "array-like, optional"
msgstr "tipo arreglo, opcional"

#: matplotlib.pyplot.pcolor:25 of
msgid "The coordinates of the corners of quadrilaterals of a pcolormesh::"
msgstr "Las coordenadas de las esquinas de los cuadriláteros de una malla de color::"

#: matplotlib.pyplot.pcolor:33 of
msgid "Note that the column index corresponds to the x-coordinate, and the row index corresponds to y. For details, see the :ref:`Notes <axes-pcolormesh-grid-orientation>` section below."
msgstr "Tenga en cuenta que el índice de columna corresponde a la coordenada x, y el índice de registro corresponde a y. Para más detalles, vea la sección :ref:`Notas <axes-pcolormesh-grid-orientation>` a continuación."

#: matplotlib.pyplot.pcolor:37 of
msgid "If ``shading='flat'`` the dimensions of *X* and *Y* should be one greater than those of *C*, and the quadrilateral is colored due to the value at ``C[i, j]``.  If *X*, *Y* and *C* have equal dimensions, a warning will be raised and the last row and column of *C* will be ignored."
msgstr "Si ``sombreando='plano'` las dimensiones de *X* y *Y* deben ser una mayor que las de *C*, y el cuadrilátero se colorea debido al valor en ``C[i, j]``. Si *X*, *Y* y *C* tienen las mismas dimensiones, se levantará una advertencia y se ignorará la última fila y columna de *C*."

#: matplotlib.pyplot.pcolor:43 of
msgid "If ``shading='nearest'``, the dimensions of *X* and *Y* should be the same as those of *C* (if not, a ValueError will be raised). The color ``C[i, j]`` will be centered on ``(X[i, j], Y[i, j])``."
msgstr "Si ``shading='nearest'``, las dimensiones de *X* y *Y* deben ser las mismas que las de *C* (si no, un ValueError será levantado). El color ``C[i, j]`` se centrará en ``(X[i, j], Y[i, j])``."

#: matplotlib.pyplot.pcolor:47 of
msgid "If *X* and/or *Y* are 1-D arrays or column vectors they will be expanded as needed into the appropriate 2D arrays, making a rectangular grid."
msgstr "Si *X* y/o *Y* son arrays 1-D o vectores de columnas, se expandirán según sea necesario en las matrices 2D apropiadas, haciendo una cuadrícula rectangular."

#: matplotlib.pyplot.pcolor:67 of
msgid "**shading** : {'flat', 'nearest', 'auto'}, default: :rc:`pcolor.shading`"
msgstr "**sombreando** : {'flat', 'nearest', 'auto'}, por defecto: :rc:`pcolor.shading`"

#: of
msgid "{'flat', 'nearest', 'auto'}, default:"
msgstr "{'flat', 'nearest', 'auto'}por defecto:"

#: matplotlib.pyplot.pcolor:52 of
msgid "The fill style for the quadrilateral. Possible values:"
msgstr "El estilo de relleno para el cuadrilateral. Posibles valores:"

#: matplotlib.pyplot.pcolor:54 of
msgid "'flat': A solid color is used for each quad. The color of the quad (i, j), (i+1, j), (i, j+1), (i+1, j+1) is given by ``C[i, j]``. The dimensions of *X* and *Y* should be one greater than those of *C*; if they are the same as *C*, then a deprecation warning is raised, and the last row and column of *C* are dropped."
msgstr "'plano': Se utiliza un color sólido para cada quad. El color del quad (i, j), (i+1, j), (i, j+1), (i+1, j+1) es dado por ``C[i, j]``. Las dimensiones de *X* y *Y* deben ser una mayor que las de *C*; si son lo mismo que *C*, entonces una advertencia de desaprobación es levantada, y la última fila y columna de *C* son soltadas."

#: matplotlib.pyplot.pcolor:60 of
msgid "'nearest': Each grid point will have a color centered on it, extending halfway between the adjacent grid centers.  The dimensions of *X* and *Y* must be the same as *C*."
msgstr "'más cercano': Cada punto de cuadrícula tendrá un color centrado en él, extendiéndose a mitad de camino entre los centros de cuadrícula adyacentes. Las dimensiones de *X* y *Y* deben ser las mismas que *C*."

#: matplotlib.pyplot.pcolor:63 of
msgid "'auto': Choose 'flat' if dimensions of *X* and *Y* are one larger than *C*.  Choose 'nearest' if dimensions are the same."
msgstr "'auto': Elija 'plano' si las dimensiones de *X* y *Y* son una mayor que *C*. Elija 'más cercana' si las dimensiones son las mismas."

#: matplotlib.pyplot.pcolor:66 of
msgid "See :doc:`/gallery/images_contours_and_fields/pcolormesh_grids` for more description."
msgstr "Vea :doc:`/gallery/images_contours_and_fields/pcolormesh_grids` para más descripción."

#: matplotlib.pyplot.pcolor:71 of
msgid "**cmap** : str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
msgstr "**cmap** : str o `~matplotlib.colors.Colormap`, por defecto: :rc:`image.cmap`"

#: of
msgid "str or"
msgstr "str o"

#: matplotlib.pyplot.pcolor:70 of
msgid "A Colormap instance or registered colormap name. The colormap maps the *C* values to colors."
msgstr "Una instancia de Colormap o nombre de mapa de color registrado. El mapa de colores asigna los valores *C* a colores."

#: matplotlib.pyplot.pcolor:76 of
msgid "**norm** : `~matplotlib.colors.Normalize`, optional"
msgstr "**norma** : `~matplotlib.colors.Normalize`, opcional"

#: matplotlib.pyplot.pcolor:75 of
msgid "Normalize, optional"
msgstr "Normalizar, opcional"

#: matplotlib.pyplot.pcolor:74 of
msgid "The Normalize instance scales the data values to the canonical colormap range [0, 1] for mapping to colors. By default, the data range is mapped to the colorbar range using linear scaling."
msgstr "La instancia Normalize escala los valores de datos al rango de mapa de color canónico [0, 1] para mapear a colores. De forma predeterminada, el rango de datos se asigna al rango de la barra de colores usando escalado lineal."

#: matplotlib.pyplot.pcolor:83 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: of
msgid "float, default: None"
msgstr "float, default: None"

#: matplotlib.pyplot.pcolor:79 of
msgid "The colorbar range. If *None*, suitable min/max values are automatically chosen by the `.Normalize` instance (defaults to the respective min/max values of *C* in case of the default linear scaling). It is an error to use *vmin*/*vmax* when *norm* is given."
msgstr "El rango de la barra de color. Si *nunca*, los valores mínimos / máximos adecuados son automáticamente elegidos por el `. instancia ormalize` (por defecto a los respectivos valores min/max de *C* en caso de la escala lineal predeterminada). Es un error usar *vmin*/*vmax* cuando se da *norma*."

#: matplotlib.pyplot.pcolor:94 of
msgid "**edgecolors**"
msgstr "**edgecolors**"

#: of
msgid "{'none', None, 'face', color, color sequence}, optional"
msgstr "{'Ninguno', Ninguno, 'cara', color, secuencia de color}, opcional"

#: matplotlib.pyplot.pcolor:86 of
msgid "The color of the edges. Defaults to 'none'. Possible values:"
msgstr "El color de los bordes. Por defecto es 'ninguno'. Valores posibles:"

#: matplotlib.pyplot.pcolor:88 of
msgid "'none' or '': No edge."
msgstr "'Ninguno' o '': Sin borde."

#: matplotlib.pyplot.pcolor:89 of
msgid "*None*: :rc:`patch.edgecolor` will be used. Note that currently :rc:`patch.force_edgecolor` has to be True for this to work."
msgstr "*nunca*: :rc:`patch.edgecolor` será usado. Ten en cuenta que actualmente :rc:`patch.force_edgecolor` tiene que ser verdadero para que esto funcione."

#: matplotlib.pyplot.pcolor:91 of
msgid "'face': Use the adjacent face color."
msgstr "'cara': Usa el color de la cara adyacente."

#: matplotlib.pyplot.pcolor:92 of
msgid "A color or sequence of colors will set the edge color."
msgstr "Un color o secuencia de colores establecerá el color del borde."

#: matplotlib.pyplot.pcolor:94 of
msgid "The singular form *edgecolor* works as an alias."
msgstr "La forma singular *borde* funciona como un alias."

#: matplotlib.pyplot.pcolor:99 of
msgid "**alpha**"
msgstr "**alfa**"

#: matplotlib.pyplot.pcolor:97 of
msgid "The alpha blending value of the face color, between 0 (transparent) and 1 (opaque). Note: The edgecolor is currently not affected by this."
msgstr "El valor de mezcla alfa del color de la cara, entre 0 (transparente) y 1 (opacoe). Nota: El color del borde no se ve afectado por esto."

#: matplotlib.pyplot.pcolor:102 of
msgid "**snap**"
msgstr "**snap**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.pyplot.pcolor:102 of
msgid "Whether to snap the mesh to pixel boundaries."
msgstr "Ajustar la malla a límites de píxeles."

#: matplotlib.pyplot.pcolor of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.pyplot.pcolor:109 of
msgid "`matplotlib.collections.Collection`"
msgstr "`matplotlib.collections.Collection`"

#: matplotlib.pyplot.pcolor of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.pyplot.pcolor:120 of
msgid "**antialiaseds**"
msgstr "**antialiaseds**"

#: matplotlib.pyplot.pcolor:114 of
msgid "The default *antialiaseds* is False if the default *edgecolors*\\ =\"none\" is used.  This eliminates artificial lines at patch boundaries, and works regardless of the value of alpha. If *edgecolors* is not \"none\", then the default *antialiaseds* is taken from :rc:`patch.antialiased`. Stroking the edges may be preferred if *alpha* is 1, but will cause artifacts otherwise."
msgstr "El *antialiaseds* por defecto es False si se usan los *edgecolors*\\ =\"none\". Esto elimina líneas artificiales en los límites de parche, y funciona independientemente del valor de alfa. Si *edgecolors* no es \"ninguno\", entonces el *antialias* predeterminado es tomado del `parche :rc:. Ntialiased`. El trazado de los bordes puede ser preferido si *alpha* es 1, pero causará artefactos de otra manera."

#: matplotlib.pyplot.pcolor:124 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.pyplot.pcolor:123 of
msgid "If given, all parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception)."
msgstr "Si se dan, todos los parámetros también aceptan una cadena ``s``, que se interpreta como ``data[s]`` (a menos que se produzca una excepción)."

#: matplotlib.pyplot.pcolor:179 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.pyplot.pcolor:127 of
msgid "Additionally, the following arguments are allowed. They are passed along to the `~matplotlib.collections.PolyCollection` constructor:"
msgstr "Además, se permiten los siguientes argumentos. Se pasan al constructor `~matplotlib.collections.PolyCollection`:"

#: matplotlib.pyplot.pcolor:134 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.pyplot.pcolor:134 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.pyplot.pcolor:136 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.pyplot.pcolor:136 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.pyplot.pcolor:137 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"

#: matplotlib.pyplot.pcolor:137 of
msgid "array-like or scalar or None"
msgstr "como matriz o escalar o ninguno"

#: matplotlib.pyplot.pcolor:138 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.pyplot.pcolor:138 matplotlib.pyplot.pcolor:144
#: matplotlib.pyplot.pcolor:153 matplotlib.pyplot.pcolor:165
#: matplotlib.pyplot.pcolor:174 of
msgid "bool"
msgstr "bool"

#: matplotlib.pyplot.pcolor:139 of
msgid ":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` or aa or antialiaseds"
msgstr ":meth:`antialias <matplotlib.collections.Collection.set_antialiased>` o aa o antialiaseds"

#: matplotlib.pyplot.pcolor:139 of
msgid "bool or list of bools"
msgstr "libro o lista de bools"

#: matplotlib.pyplot.pcolor:140 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"

#: matplotlib.pyplot.pcolor:140 of
msgid "array-like or None"
msgstr "tipo array o ninguno"

#: matplotlib.pyplot.pcolor:141 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"

#: matplotlib.pyplot.pcolor:141 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.pyplot.pcolor:142 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"

#: matplotlib.pyplot.pcolor:142 of
msgid "(vmin: float, vmax: float)"
msgstr "(vmin: flotante, vmax: flotante)"

#: matplotlib.pyplot.pcolor:143 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.pyplot.pcolor:143 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.pyplot.pcolor:144 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.pyplot.pcolor:145 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.pyplot.pcolor:145 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.pyplot.pcolor:146 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"

#: matplotlib.pyplot.pcolor:146 of
msgid "`.Colormap` or str or None"
msgstr "`.Colormap` o str o ninguno"

#: matplotlib.pyplot.pcolor:147 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ":meth:`color <matplotlib.collections.Collection.set_color>`"

#: matplotlib.pyplot.pcolor:147 of
msgid "color or list of rgba tuples"
msgstr "color o lista de tubos rgba"

#: matplotlib.pyplot.pcolor:148 of
msgid ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec or edgecolors"
msgstr ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` o ec o aristas colores"

#: matplotlib.pyplot.pcolor:148 of
msgid "color or list of colors or 'face'"
msgstr "color o lista de colores o 'cara'"

#: matplotlib.pyplot.pcolor:149 of
msgid ":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or facecolors or fc"
msgstr ":meth:`carecolor <matplotlib.collections.Collection.set_facecolor>` o colores de caras o fc"

#: matplotlib.pyplot.pcolor:149 of
msgid "color or list of colors"
msgstr "color o lista de colores"

#: matplotlib.pyplot.pcolor:150 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.pyplot.pcolor:150 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.pyplot.pcolor:151 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.pyplot.pcolor:151 matplotlib.pyplot.pcolor:170 of
msgid "str"
msgstr "str"

#: matplotlib.pyplot.pcolor:152 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ":meth:`colgante <matplotlib.collections.Collection.set_hatch>`"

#: matplotlib.pyplot.pcolor:152 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"

#: matplotlib.pyplot.pcolor:153 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.pyplot.pcolor:154 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"

#: matplotlib.pyplot.pcolor:154 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.pyplot.pcolor:155 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.pyplot.pcolor:155 of
msgid "object"
msgstr "object"

#: matplotlib.pyplot.pcolor:156 of
msgid ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or dashes or linestyles or ls"
msgstr ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` o guiones o estilos de línea o ls"

#: matplotlib.pyplot.pcolor:156 of
msgid "str or tuple or list thereof"
msgstr "str o tuple o lista de ellos"

#: matplotlib.pyplot.pcolor:157 of
msgid ":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or linewidths or lw"
msgstr ":meth:`ancho de línea <matplotlib.collections.Collection.set_linewidth>o ancho de línea o lw"

#: matplotlib.pyplot.pcolor:157 of
msgid "float or list of floats"
msgstr "flotante o lista de flotantes"

#: matplotlib.pyplot.pcolor:158 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"

#: matplotlib.pyplot.pcolor:158 of
msgid "`.Normalize` or None"
msgstr "`.normalize` o Ninguno"

#: matplotlib.pyplot.pcolor:159 of
msgid ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"
msgstr ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"

#: matplotlib.pyplot.pcolor:159 matplotlib.pyplot.pcolor:169 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.pyplot.pcolor:160 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"

#: matplotlib.pyplot.pcolor:160 of
msgid "(N, 2) or (2,) array-like"
msgstr "((N, 2) o (2,) array-like"

#: matplotlib.pyplot.pcolor:161 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.pyplot.pcolor:161 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.pyplot.pcolor:162 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`rutas <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.pyplot.pcolor:162 matplotlib.pyplot.pcolor:172 of
msgid "list of array-like"
msgstr "lista de matriz"

#: matplotlib.pyplot.pcolor:163 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.pyplot.pcolor:163 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.pyplot.pcolor:164 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"

#: matplotlib.pyplot.pcolor:164 matplotlib.pyplot.pcolor:175 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.pyplot.pcolor:165 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.pyplot.pcolor:166 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ":meth:`tamaños <matplotlib.collections._CollectionWithSizes.set_sizes>`"

#: matplotlib.pyplot.pcolor:166 of
msgid "ndarray or None"
msgstr "ndarray o ninguno"

#: matplotlib.pyplot.pcolor:167 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.pyplot.pcolor:167 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.pyplot.pcolor:168 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.pyplot.pcolor:168 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.pyplot.pcolor:169 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.pyplot.pcolor:170 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.pyplot.pcolor:171 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ":meth:`urls <matplotlib.collections.Collection.set_urls>`"

#: matplotlib.pyplot.pcolor:171 of
msgid "list of str or None"
msgstr "lista de str o ninguno"

#: matplotlib.pyplot.pcolor:172 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.pyplot.pcolor:173 of
msgid ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"

#: matplotlib.pyplot.pcolor:173 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.pyplot.pcolor:174 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.pyplot.pcolor:175 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.pyplot.pcolor:184 of
msgid ":obj:`pcolormesh`"
msgstr ":obj:`pcolormesh`"

#: matplotlib.pyplot.pcolor:185 of
msgid "for an explanation of the differences between pcolor and pcolormesh."
msgstr "para una explicación de las diferencias entre pcolor y pcolormesh."

#: matplotlib.pyplot.pcolor:186 of
msgid ":obj:`imshow`"
msgstr ":obj:`imshow`"

#: matplotlib.pyplot.pcolor:187 of
msgid "If *X* and *Y* are each equidistant, `~.Axes.imshow` can be a faster alternative."
msgstr "Si *X* y *Y* son cada equidistantes, `~.Axes.imshow` puede ser una alternativa más rápida."

#: matplotlib.pyplot.pcolor:191 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.pyplot.pcolor:192 of
msgid "**Masked arrays**"
msgstr "**Matrices enmascaradas**"

#: matplotlib.pyplot.pcolor:194 of
msgid "*X*, *Y* and *C* may be masked arrays. If either ``C[i, j]``, or one of the vertices surrounding ``C[i, j]`` (*X* or *Y* at ``[i, j], [i+1, j], [i, j+1], [i+1, j+1]``) is masked, nothing is plotted."
msgstr "*X*, *Y* y *C* pueden ser matrices enmascaradas. Si ``C[i, j]``, o uno de los vértices que rodean ``C[i, j]`` (*X* o *Y* en ``[i, j], [i+1, j], [i, j+1], [i+1, j+1]``) está enmascarado, nada está trazado."

#: matplotlib.pyplot.pcolor:201 of
msgid "**Grid orientation**"
msgstr "**Orientación de cuadrícula**"

#: matplotlib.pyplot.pcolor:203 of
msgid "The grid orientation follows the standard matrix convention: An array *C* with shape (nrows, ncolumns) is plotted with the column number as *X* and the row number as *Y*."
msgstr "La orientación de la cuadrícula sigue la convención estándar de la matriza: una matriz *C* con forma (nrows, ncolumns) se traza con el número de columna como *X* y el número de fila como *Y*."

