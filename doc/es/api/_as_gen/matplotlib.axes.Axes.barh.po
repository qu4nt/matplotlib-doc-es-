msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:49\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.barh.po\n"
"X-Crowdin-File-ID: 362\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.rst:2
msgid "matplotlib.axes.Axes.barh"
msgstr "matplotlib.axes.Axes.barh"

#: matplotlib.axes._axes.Axes.barh:2 of
msgid "Make a horizontal bar plot."
msgstr "Crea una parcela de barras horizontal."

#: matplotlib.axes._axes.Axes.barh:4 of
msgid "The bars are positioned at *y* with the given *align*\\ment. Their dimensions are given by *width* and *height*. The horizontal baseline is *left* (default 0)."
msgstr "Las barras están posicionadas en *y* con el *alineado* dado, sus dimensiones son dadas por *ancho* y *altura*. La línea de base horizontal es *izquierda* (por defecto 0)."

#: matplotlib.axes._axes.Axes.barh:8 of
msgid "Many parameters can take either a single value applying to all bars or a sequence of values, one for each bar."
msgstr "Muchos parámetros pueden tomar un solo valor aplicado a todas las barras o una secuencia de valores, uno para cada barra."

#: matplotlib.axes._axes.Axes.barh of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.axes._axes.Axes.barh:15 of
msgid "**y**"
msgstr "**y**"

#: of
msgid "float or array-like"
msgstr "flotante o matriz"

#: matplotlib.axes._axes.Axes.barh:14 of
msgid "The y coordinates of the bars. See also *align* for the alignment of the bars to the coordinates."
msgstr "Las coordenadas y de las barras. Vea también *alinear* para la alineación de las barras a las coordenadas."

#: matplotlib.axes._axes.Axes.barh:18 of
msgid "**width**"
msgstr "**width**"

#: matplotlib.axes._axes.Axes.barh:18 of
msgid "The width(s) of the bars."
msgstr "El ancho(s) de las barras."

#: matplotlib.axes._axes.Axes.barh:21 of
msgid "**height**"
msgstr "**height**"

#: of
msgid "float or array-like, default: 0.8"
msgstr "float or array-like, default: 0.8"

#: matplotlib.axes._axes.Axes.barh:21 of
msgid "The heights of the bars."
msgstr "Las alturas de las barras."

#: matplotlib.axes._axes.Axes.barh:24 of
msgid "**left**"
msgstr "**left**"

#: of
msgid "float or array-like, default: 0"
msgstr "float or array-like, default: 0"

#: matplotlib.axes._axes.Axes.barh:24 of
msgid "The x coordinates of the left sides of the bars."
msgstr "Las coordenadas x de los lados izquierdos de las barras."

#: matplotlib.axes._axes.Axes.barh:34 of
msgid "**align**"
msgstr "**align**"

#: of
msgid "{'center', 'edge'}, default: 'center'"
msgstr "{'center', 'edge'}, por defecto: 'centro'"

#: matplotlib.axes._axes.Axes.barh:27 of
msgid "Alignment of the base to the *y* coordinates*:"
msgstr "Alineación de la base a las coordenadas *y*:"

#: matplotlib.axes._axes.Axes.barh:29 of
msgid "'center': Center the bars on the *y* positions."
msgstr "'centro': Centra los bares en las posiciones *y*."

#: matplotlib.axes._axes.Axes.barh:30 of
msgid "'edge': Align the bottom edges of the bars with the *y* positions."
msgstr "'borde': Alinear los bordes inferiores de las barras con las posiciones *y*."

#: matplotlib.axes._axes.Axes.barh:33 of
msgid "To align the bars on the top edge pass a negative *height* and ``align='edge'``."
msgstr "Para alinear las barras en el borde superior pasar una *altura* negativa y ``align='edge'``."

#: matplotlib.axes._axes.Axes.barh of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.axes._axes.Axes.barh:41 of
msgid "`.BarContainer`"
msgstr "`.BarContainer`"

#: matplotlib.axes._axes.Axes.barh:39 of
msgid "Container with all the bars and optionally errorbars."
msgstr "Contenedor con todas las barras y opcionalmente barras de error."

#: matplotlib.axes._axes.Axes.barh of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.axes._axes.Axes.barh:46 of
msgid "**color**"
msgstr "**color**"

#: of
msgid "color or list of color, optional"
msgstr "color o lista de colores, opcional"

#: matplotlib.axes._axes.Axes.barh:46 of
msgid "The colors of the bar faces."
msgstr "Los colores de la barra caras."

#: matplotlib.axes._axes.Axes.barh:49 of
msgid "**edgecolor**"
msgstr "**edgecolor**"

#: matplotlib.axes._axes.Axes.barh:49 of
msgid "The colors of the bar edges."
msgstr "Los colores de los bordes de la barra."

#: matplotlib.axes._axes.Axes.barh:52 of
msgid "**linewidth**"
msgstr "**linewidth**"

#: of
msgid "float or array-like, optional"
msgstr "flotante o tipo matriz, opcional"

#: matplotlib.axes._axes.Axes.barh:52 of
msgid "Width of the bar edge(s). If 0, don't draw edges."
msgstr "Ancho de los bordes de la barra. Si 0, no dibujas bordes."

#: matplotlib.axes._axes.Axes.barh:56 of
msgid "**tick_label**"
msgstr "**etiqueta**"

#: of
msgid "str or list of str, optional"
msgstr "str o lista de str, opcional"

#: matplotlib.axes._axes.Axes.barh:55 of
msgid "The tick labels of the bars. Default: None (Use default numeric labels.)"
msgstr "Etiquetas de las barras. Por defecto: Ninguno (Usar etiquetas numéricas por defecto)"

#: matplotlib.axes._axes.Axes.barh:70 of
msgid "**xerr, yerr**"
msgstr "**xerr, yerr**"

#: of
msgid "float or array-like of shape(N,) or shape(2, N), optional"
msgstr "flotante o tipo array de forma shape(N,) o forma (2, N), opcional"

#: matplotlib.axes._axes.Axes.barh:59 of
msgid "If not ``None``, add horizontal / vertical errorbars to the bar tips. The values are +/- sizes relative to the data:"
msgstr "Si no es ``Ninguno``, agregue barras de error horizontales / verticales a los consejos de barras. Los valores son +/- tamaños relativos a los datos:"

#: matplotlib.axes._axes.Axes.barh:62 of
msgid "scalar: symmetric +/- values for all bars"
msgstr "escalar: valores simétricos +/- para todas las barras"

#: matplotlib.axes._axes.Axes.barh:63 of
msgid "shape(N,): symmetric +/- values for each bar"
msgstr "shape(N,): valores simétricos +/- para cada barra"

#: matplotlib.axes._axes.Axes.barh:64 of
msgid "shape(2, N): Separate - and + values for each bar. First row contains the lower errors, the second row contains the upper errors."
msgstr "shape(2, N): Separar - y + valores para cada barra. La primera fila contiene los errores inferiores, la segunda fila contiene los errores superiores."

#: matplotlib.axes._axes.Axes.barh:67 of
msgid "*None*: No errorbar. (default)"
msgstr "*Ninguno*: Sin barra de error. (por defecto)"

#: matplotlib.axes._axes.Axes.barh:69 of
msgid "See :doc:`/gallery/statistics/errorbar_features` for an example on the usage of ``xerr`` and ``yerr``."
msgstr "Vea :doc:`/gallery/estadísticas/errorbar_features` para un ejemplo sobre el uso de ``xerr`` y ``yerr``."

#: matplotlib.axes._axes.Axes.barh:73 of
msgid "**ecolor**"
msgstr "**ecolor**"

#: of
msgid "color or list of color, default: 'black'"
msgstr "color o lista de colores, por defecto: 'negro'"

#: matplotlib.axes._axes.Axes.barh:73 of
msgid "The line color of the errorbars."
msgstr "El color de línea de las barras de error."

#: matplotlib.axes._axes.Axes.barh:76 of
msgid "**capsize** : float, default: :rc:`errorbar.capsize`"
msgstr "**capsize** : float, por defecto: :rc:`errorbar.capsize`"

#: of
msgid "float, default:"
msgstr "flotante, por defecto:"

#: matplotlib.axes._axes.Axes.barh:76 of
msgid "The length of the error bar caps in points."
msgstr "La longitud de los límites de la barra de error en puntos."

#: matplotlib.axes._axes.Axes.barh:81 of
msgid "**error_kw**"
msgstr "**error_kw**"

#: of
msgid "dict, optional"
msgstr "dict, optional"

#: matplotlib.axes._axes.Axes.barh:79 of
msgid "Dictionary of kwargs to be passed to the `~.Axes.errorbar` method. Values of *ecolor* or *capsize* defined here take precedence over the independent kwargs."
msgstr "Diccionario de kwargs que se pasará al método `~.Axes.errorbar`. Los valores de *ecolor* o *capsize* definidos aquí tienen prioridad sobre los kwargs independientes."

#: matplotlib.axes._axes.Axes.barh:84 of
msgid "**log**"
msgstr "**registro**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.axes._axes.Axes.barh:84 of
msgid "If ``True``, set the x-axis to be log scale."
msgstr "Si es ``True``, establezca el eje x como escala de registro."

#: matplotlib.axes._axes.Axes.barh:132 of
msgid "**\\*\\*kwargs** : `.Rectangle` properties"
msgstr "**\\*\\*kwargs** : propiedades `.Rectangle`"

#: matplotlib.axes._axes.Axes.barh:131 of
msgid "Rectangle properties"
msgstr "Propiedades rectangulares"

#: matplotlib.axes._axes.Axes.barh:91 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.axes._axes.Axes.barh:91 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.axes._axes.Axes.barh:93 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.axes._axes.Axes.barh:93 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.axes._axes.Axes.barh:94 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.axes._axes.Axes.barh:94 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.axes._axes.Axes.barh:95 of
msgid ":meth:`angle <matplotlib.patches.Rectangle.set_angle>`"
msgstr ":meth:`ángulo <matplotlib.patches.Rectangle.set_angle>`"

#: matplotlib.axes._axes.Axes.barh:95 matplotlib.axes._axes.Axes.barh:110
#: matplotlib.axes._axes.Axes.barh:124 matplotlib.axes._axes.Axes.barh:125
#: matplotlib.axes._axes.Axes.barh:127 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.axes._axes.Axes.barh:96 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.axes._axes.Axes.barh:96 matplotlib.axes._axes.Axes.barh:101
#: matplotlib.axes._axes.Axes.barh:107 matplotlib.axes._axes.Axes.barh:111
#: matplotlib.axes._axes.Axes.barh:118 matplotlib.axes._axes.Axes.barh:123 of
msgid "bool"
msgstr "bool"

#: matplotlib.axes._axes.Axes.barh:97 of
msgid ":meth:`antialiased <matplotlib.patches.Patch.set_antialiased>` or aa"
msgstr ":meth:`antialias <matplotlib.patches.Patch.set_antialiased>` o aa"

#: matplotlib.axes._axes.Axes.barh:97 matplotlib.axes._axes.Axes.barh:120 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.axes._axes.Axes.barh:98 of
msgid ":meth:`bounds <matplotlib.patches.Rectangle.set_bounds>`"
msgstr ":meth:`Límites <matplotlib.patches.Rectangle.set_bounds>`"

#: matplotlib.axes._axes.Axes.barh:98 of
msgid "(left, bottom, width, height)"
msgstr "(izquierda, inferior, anchura, altura)"

#: matplotlib.axes._axes.Axes.barh:99 of
msgid ":meth:`capstyle <matplotlib.patches.Patch.set_capstyle>`"
msgstr ":meth:`capstyle <matplotlib.patches.Patch.set_capstyle>`"

#: matplotlib.axes._axes.Axes.barh:99 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.axes._axes.Axes.barh:100 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.axes._axes.Axes.barh:100 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.axes._axes.Axes.barh:101 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.axes._axes.Axes.barh:102 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.axes._axes.Axes.barh:102 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.axes._axes.Axes.barh:103 of
msgid ":meth:`color <matplotlib.patches.Patch.set_color>`"
msgstr ":meth:`color <matplotlib.patches.Patch.set_color>`"

#: matplotlib.axes._axes.Axes.barh:103 of
msgid "color"
msgstr "color"

#: matplotlib.axes._axes.Axes.barh:104 of
msgid ":meth:`edgecolor <matplotlib.patches.Patch.set_edgecolor>` or ec"
msgstr ":meth:`edgecolor <matplotlib.patches.Patch.set_edgecolor>` o ec"

#: matplotlib.axes._axes.Axes.barh:104 matplotlib.axes._axes.Axes.barh:105 of
msgid "color or None"
msgstr "color o ninguno"

#: matplotlib.axes._axes.Axes.barh:105 of
msgid ":meth:`facecolor <matplotlib.patches.Patch.set_facecolor>` or fc"
msgstr ":meth:`facecolor <matplotlib.patches.Patch.set_facecolor>` o fc"

#: matplotlib.axes._axes.Axes.barh:106 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.axes._axes.Axes.barh:106 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.axes._axes.Axes.barh:107 of
msgid ":meth:`fill <matplotlib.patches.Patch.set_fill>`"
msgstr ":meth:`rellenar <matplotlib.patches.Patch.set_fill>`"

#: matplotlib.axes._axes.Axes.barh:108 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.axes._axes.Axes.barh:108 matplotlib.axes._axes.Axes.barh:122 of
msgid "str"
msgstr "str"

#: matplotlib.axes._axes.Axes.barh:109 of
msgid ":meth:`hatch <matplotlib.patches.Patch.set_hatch>`"
msgstr ":meth:`colgante <matplotlib.patches.Patch.set_hatch>`"

#: matplotlib.axes._axes.Axes.barh:109 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"

#: matplotlib.axes._axes.Axes.barh:110 of
msgid ":meth:`height <matplotlib.patches.Rectangle.set_height>`"
msgstr ":meth:`height <matplotlib.patches.Rectangle.set_height>`"

#: matplotlib.axes._axes.Axes.barh:111 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.axes._axes.Axes.barh:112 of
msgid ":meth:`joinstyle <matplotlib.patches.Patch.set_joinstyle>`"
msgstr ":meth:`joinstyle <matplotlib.patches.Patch.set_joinstyle>`"

#: matplotlib.axes._axes.Axes.barh:112 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.axes._axes.Axes.barh:113 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.axes._axes.Axes.barh:113 of
msgid "object"
msgstr "object"

#: matplotlib.axes._axes.Axes.barh:114 of
msgid ":meth:`linestyle <matplotlib.patches.Patch.set_linestyle>` or ls"
msgstr ":meth:`linestyle <matplotlib.patches.Patch.set_linestyle>` o ls"

#: matplotlib.axes._axes.Axes.barh:114 of
msgid "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"
msgstr "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"

#: matplotlib.axes._axes.Axes.barh:115 of
msgid ":meth:`linewidth <matplotlib.patches.Patch.set_linewidth>` or lw"
msgstr ":meth:`linewidth <matplotlib.patches.Patch.set_linewidth>` or lw"

#: matplotlib.axes._axes.Axes.barh:115 of
msgid "float or None"
msgstr "float o None"

#: matplotlib.axes._axes.Axes.barh:116 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.axes._axes.Axes.barh:116 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.axes._axes.Axes.barh:117 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.axes._axes.Axes.barh:117 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.axes._axes.Axes.barh:118 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.axes._axes.Axes.barh:119 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.axes._axes.Axes.barh:119 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.axes._axes.Axes.barh:120 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.axes._axes.Axes.barh:121 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.axes._axes.Axes.barh:121 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.axes._axes.Axes.barh:122 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.axes._axes.Axes.barh:123 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.axes._axes.Axes.barh:124 of
msgid ":meth:`width <matplotlib.patches.Rectangle.set_width>`"
msgstr ":meth:`width <matplotlib.patches.Rectangle.set_width>`"

#: matplotlib.axes._axes.Axes.barh:125 of
msgid ":meth:`x <matplotlib.patches.Rectangle.set_x>`"
msgstr ":meth:`x <matplotlib.patches.Rectangle.set_x>`"

#: matplotlib.axes._axes.Axes.barh:126 of
msgid ":meth:`xy <matplotlib.patches.Rectangle.set_xy>`"
msgstr ":meth:`xy <matplotlib.patches.Rectangle.set_xy>`"

#: matplotlib.axes._axes.Axes.barh:126 of
msgid "(float, float)"
msgstr "(float, float)"

#: matplotlib.axes._axes.Axes.barh:127 of
msgid ":meth:`y <matplotlib.patches.Rectangle.set_y>`"
msgstr ":meth:`y <matplotlib.patches.Rectangle.set_y>`"

#: matplotlib.axes._axes.Axes.barh:128 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.axes._axes.Axes.barh:128 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.axes._axes.Axes.barh:137 of
msgid ":obj:`bar`"
msgstr ":obj:'barra'"

#: matplotlib.axes._axes.Axes.barh:138 of
msgid "Plot a vertical bar plot."
msgstr "Trazar una parcela de barras vertical."

#: matplotlib.axes._axes.Axes.barh:142 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.axes._axes.Axes.barh:143 of
msgid "Stacked bars can be achieved by passing individual *left* values per bar. See :doc:`/gallery/lines_bars_and_markers/horizontal_barchart_distribution` ."
msgstr "Las barras apiladas se pueden lograr pasando valores individuales *izquierdas* por barra. Vea :doc:`/gallery/lines_bars_and_markers/horizontal_barchart_distribution` ."

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.barh.examples:2
msgid "Examples using ``matplotlib.axes.Axes.barh``"
msgstr "Ejemplos usando ``matplotlib.axes.Axes.barh``"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:10
msgid "Bar Label Demo"
msgstr "Demo de la etiqueta de la barra"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:18
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_bar_label_demo.py`"
msgstr ":ref:`sphx_glr_gallery_lines_bars_and_markers_bar_label_demo.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:29
msgid "Horizontal bar chart"
msgstr "Gráfico de barras horizontales"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:29
#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:37
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_barh.py`"
msgstr ":ref:`sphx_glr_gallery_lines_bars_and_markers_barh.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:48
msgid "Producing multiple histograms side by side"
msgstr "Producir múltiples histogramas uno al lado del otro"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:48
#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:56
msgid ":ref:`sphx_glr_gallery_statistics_multiple_histograms_side_by_side.py`"
msgstr ":ref:`sphx_glr_gallery_statistics_multiple_histograms_side_by_side.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:67
msgid "The Lifecycle of a Plot"
msgstr "El ciclo de vida de un gráfico"

#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:67
#: ../../api/_as_gen/matplotlib.axes.Axes.barh.examples:75
msgid ":ref:`sphx_glr_tutorials_introductory_lifecycle.py`"
msgstr ":ref:`sphx_glr_tutorials_introductory_lifecycle.py`"

