msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:00\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.axes.po\n"
"X-Crowdin-File-ID: 1060\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.axes.rst:2
msgid "matplotlib.pyplot.axes"
msgstr "matplotlib.pyplot.axes"

#: matplotlib.pyplot.axes:2 of
msgid "Add an axes to the current figure and make it the current axes."
msgstr "Agrega un eje a la figura actual y lo convierte en los ejes actuales."

#: matplotlib.pyplot.axes:4 of
msgid "Call signatures::"
msgstr "Firma de llamadas::"

#: matplotlib.pyplot.axes of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.pyplot.axes:19 of
msgid "**arg**"
msgstr "**arg**"

#: of
msgid "None or 4-tuple"
msgstr "Ninguna o 4 tupla"

#: matplotlib.pyplot.axes:13 of
msgid "The exact behavior of this function depends on the type:"
msgstr "El comportamiento exacto de esta función depende del tipo:"

#: matplotlib.pyplot.axes:15 of
msgid "*None*: A new full window axes is added using ``subplot(**kwargs)``."
msgstr "*Ninguno*: Se añade un nuevo eje de ventana completa usando ``subplot(**kwargs)``."

#: matplotlib.pyplot.axes:17 of
msgid "4-tuple of floats *rect* = ``[left, bottom, width, height]``. A new axes is added with dimensions *rect* in normalized (0, 1) units using `~.Figure.add_axes` on the current figure."
msgstr "4-tuple de flotantes *rect* = ``[izquierda, abajo, anchura, altura]``. Se agrega un nuevo ejes con dimensiones *rect* en unidades normalizadas (0, 1) usando `~.Figure.add_axes` en la figura actual."

#: matplotlib.pyplot.axes:24 of
msgid "**projection**"
msgstr "**proyección**"

#: of
msgid "{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optional"
msgstr "{None, 'aitoff', 'martillo', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, opcional"

#: matplotlib.pyplot.axes:22 of
msgid "The projection type of the `~.axes.Axes`. *str* is the name of a custom projection, see `~matplotlib.projections`. The default None results in a 'rectilinear' projection."
msgstr "El tipo de proyección del `~.axes.Axes`. *str* es el nombre de una proyección personalizada, vea `~matplotlib.projections`. El valor predeterminado Ninguno da como resultado una proyección 'rectilinear'."

#: matplotlib.pyplot.axes:27 of
msgid "**polar**"
msgstr "**polar**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.pyplot.axes:27 of
msgid "If True, equivalent to projection='polar'."
msgstr "Si es verdadero, equivalente a la proyección='polar'."

#: matplotlib.pyplot.axes:32 of
msgid "**sharex, sharey** : `~.axes.Axes`, optional"
msgstr "**sharex, compartir** : `~.axes.Axes`, opcional"

#: matplotlib.pyplot.axes:31 of
msgid "Axes, optional"
msgstr "Ejes, opcional"

#: matplotlib.pyplot.axes:30 of
msgid "Share the x or y `~matplotlib.axis` with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared axes."
msgstr "Comparte el x o y `~matplotlib.axis` con sharex y/o sharey. El eje tendrá los mismos límites, ticks y escala que el eje de los ejes compartidos."

#: matplotlib.pyplot.axes:35 of
msgid "**label**"
msgstr "**etiqueta**"

#: matplotlib.pyplot.axes:80 matplotlib.pyplot.axes:93
#: matplotlib.pyplot.axes:95 matplotlib.pyplot.axes:98
#: matplotlib.pyplot.axes:105 of
msgid "str"
msgstr "str"

#: matplotlib.pyplot.axes:35 of
msgid "A label for the returned axes."
msgstr "Una etiqueta para los ejes devueltos."

#: matplotlib.pyplot.axes of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.pyplot.axes:44 of
msgid "`~.axes.Axes`, or a subclass of `~.axes.Axes`"
msgstr "`~.axes.Axes`, o una subclase de `~.axes.Axes`"

#: matplotlib.pyplot.axes:40 of
msgid "The returned axes class depends on the projection used. It is `~.axes.Axes` if rectilinear projection is used and `.projections.polar.PolarAxes` if polar projection is used."
msgstr "La clase de ejes devueltos depende de la proyección utilizada. Es `~.axes.Axes` si se utiliza proyección rectilineal y `.projections.polar.PolarAxes` si se utiliza proyección polar."

#: matplotlib.pyplot.axes of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.pyplot.axes:115 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.pyplot.axes:49 of
msgid "This method also takes the keyword arguments for the returned axes class. The keyword arguments for the rectilinear axes class `~.axes.Axes` can be found in the following table but there might also be other keyword arguments if another projection is used, see the actual axes class."
msgstr "Este método también toma los argumentos de palabra clave para la clase de ejes devueltos. Los argumentos de palabra clave para la clase de ejes rectilinear `~.axes. xes` se puede encontrar en la siguiente tabla, pero también puede haber otros argumentos de palabra clave si se utiliza otra proyección ver la clase real de ejes."

#: matplotlib.pyplot.axes:60 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.pyplot.axes:60 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.pyplot.axes:62 of
msgid ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"
msgstr ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"

#: matplotlib.pyplot.axes:62 of
msgid "{'box', 'datalim'}"
msgstr "{'box', 'datalim'}"

#: matplotlib.pyplot.axes:63 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.pyplot.axes:63 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.pyplot.axes:64 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.pyplot.axes:64 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.pyplot.axes:65 of
msgid ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"
msgstr ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"

#: matplotlib.pyplot.axes:65 of
msgid "(float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"
msgstr "(float, float) o {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"

#: matplotlib.pyplot.axes:66 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.pyplot.axes:66 matplotlib.pyplot.axes:68
#: matplotlib.pyplot.axes:69 matplotlib.pyplot.axes:70
#: matplotlib.pyplot.axes:75 matplotlib.pyplot.axes:79
#: matplotlib.pyplot.axes:81 matplotlib.pyplot.axes:83
#: matplotlib.pyplot.axes:90 matplotlib.pyplot.axes:96 of
msgid "bool"
msgstr "bool"

#: matplotlib.pyplot.axes:67 of
msgid ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"
msgstr ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"

#: matplotlib.pyplot.axes:67 of
msgid "{'auto', 'equal'} or float"
msgstr "{'auto', 'equal'} or float"

#: matplotlib.pyplot.axes:68 of
msgid ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"
msgstr ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"

#: matplotlib.pyplot.axes:69 of
msgid ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"
msgstr ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"

#: matplotlib.pyplot.axes:70 of
msgid ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"
msgstr ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"

#: matplotlib.pyplot.axes:71 of
msgid ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"
msgstr ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"

#: matplotlib.pyplot.axes:71 of
msgid "Callable[[Axes, Renderer], Bbox]"
msgstr "Callable[[Axes, Renderer], Bbox]"

#: matplotlib.pyplot.axes:72 of
msgid ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"
msgstr ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"

#: matplotlib.pyplot.axes:72 of
msgid "bool or 'line'"
msgstr "bool or 'line'"

#: matplotlib.pyplot.axes:73 of
msgid ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"
msgstr ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"

#: matplotlib.pyplot.axes:73 matplotlib.pyplot.axes:89 of
msgid "float or None"
msgstr "float o None"

#: matplotlib.pyplot.axes:74 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.pyplot.axes:74 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.pyplot.axes:75 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.pyplot.axes:76 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.pyplot.axes:76 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.pyplot.axes:77 of
msgid ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` or fc"
msgstr ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` o fc"

#: matplotlib.pyplot.axes:77 of
msgid "color"
msgstr "color"

#: matplotlib.pyplot.axes:78 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.pyplot.axes:78 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.pyplot.axes:79 of
msgid ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"
msgstr ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"

#: matplotlib.pyplot.axes:80 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.pyplot.axes:81 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.pyplot.axes:82 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.pyplot.axes:82 of
msgid "object"
msgstr "object"

#: matplotlib.pyplot.axes:83 of
msgid ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"
msgstr ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"

#: matplotlib.pyplot.axes:84 of
msgid ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"
msgstr ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"

#: matplotlib.pyplot.axes:84 matplotlib.pyplot.axes:88
#: matplotlib.pyplot.axes:97 matplotlib.pyplot.axes:102
#: matplotlib.pyplot.axes:103 matplotlib.pyplot.axes:104
#: matplotlib.pyplot.axes:109 matplotlib.pyplot.axes:110 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.pyplot.axes:85 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.pyplot.axes:85 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.pyplot.axes:86 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.pyplot.axes:86 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.pyplot.axes:87 of
msgid ":meth:`position <matplotlib.axes.Axes.set_position>`"
msgstr ":meth:`position <matplotlib.axes.Axes.set_position>`"

#: matplotlib.pyplot.axes:87 of
msgid "[left, bottom, width, height] or `~matplotlib.transforms.Bbox`"
msgstr "[left, bottom, width, height] o `~matplotlib.transforms.Bbox`"

#: matplotlib.pyplot.axes:88 of
msgid ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"
msgstr ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"

#: matplotlib.pyplot.axes:89 of
msgid ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"
msgstr ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"

#: matplotlib.pyplot.axes:90 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.pyplot.axes:91 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.pyplot.axes:91 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.pyplot.axes:92 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.pyplot.axes:92 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.pyplot.axes:93 of
msgid ":meth:`title <matplotlib.axes.Axes.set_title>`"
msgstr ":meth:`title <matplotlib.axes.Axes.set_title>`"

#: matplotlib.pyplot.axes:94 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.pyplot.axes:94 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.pyplot.axes:95 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.pyplot.axes:96 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.pyplot.axes:97 of
msgid ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"
msgstr ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"

#: matplotlib.pyplot.axes:98 of
msgid ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"
msgstr ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"

#: matplotlib.pyplot.axes:99 of
msgid ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"
msgstr ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"

#: matplotlib.pyplot.axes:99 matplotlib.pyplot.axes:106 of
msgid "(bottom: float, top: float)"
msgstr "(bottom: float, top: float)"

#: matplotlib.pyplot.axes:100 of
msgid ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"
msgstr ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"

#: matplotlib.pyplot.axes:100 matplotlib.pyplot.axes:107 of
msgid "float greater than -0.5"
msgstr "float mayor que -0,5"

#: matplotlib.pyplot.axes:101 of
msgid ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"
msgstr ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"

#: matplotlib.pyplot.axes:101 matplotlib.pyplot.axes:108 of
msgid "{\"linear\", \"log\", \"symlog\", \"logit\", ...} or `.ScaleBase`"
msgstr "{\"linear\", \"log\", \"symlog\", \"logit\", ...} o `.ScaleBase`"

#: matplotlib.pyplot.axes:102 of
msgid ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"
msgstr ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"

#: matplotlib.pyplot.axes:103 of
msgid ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"
msgstr ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"

#: matplotlib.pyplot.axes:104 of
msgid ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"
msgstr ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"

#: matplotlib.pyplot.axes:105 of
msgid ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"
msgstr ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"

#: matplotlib.pyplot.axes:106 of
msgid ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"
msgstr ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"

#: matplotlib.pyplot.axes:107 of
msgid ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"
msgstr ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"

#: matplotlib.pyplot.axes:108 of
msgid ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"
msgstr ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"

#: matplotlib.pyplot.axes:109 of
msgid ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"
msgstr ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"

#: matplotlib.pyplot.axes:110 of
msgid ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"
msgstr ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"

#: matplotlib.pyplot.axes:111 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.pyplot.axes:111 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.pyplot.axes:120 of
msgid ":obj:`.Figure.add_axes`"
msgstr ":obj:`.Figure.añadir ejes`"

#: matplotlib.pyplot.axes:122 of
msgid ":obj:`.pyplot.subplot`"
msgstr ":obj:`.pyplot.subplot`"

#: matplotlib.pyplot.axes:124 of
msgid ":obj:`.Figure.add_subplot`"
msgstr ":obj:`.Figure.add_subplot`"

#: matplotlib.pyplot.axes:126 of
msgid ":obj:`.Figure.subplots`"
msgstr ":obj:`.Figure.subplots`"

#: matplotlib.pyplot.axes:128 of
msgid ":obj:`.pyplot.subplots`"
msgstr ":obj:`.pyplot.subplots`"

#: matplotlib.pyplot.axes:132 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.pyplot.axes:133 of
msgid "If the figure already has a axes with key (*args*, *kwargs*) then it will simply make that axes current and return it.  This behavior is deprecated. Meanwhile, if you do not want this behavior (i.e., you want to force the creation of a new axes), you must use a unique set of args and kwargs.  The axes *label* attribute has been exposed for this purpose: if you want two axes that are otherwise identical to be added to the figure, make sure you give them unique labels."
msgstr "Si la figura ya tiene un eje con clave (*args*, *kwargs*) entonces simplemente hará que esos ejes sean actuales y lo devolverá. Este comportamiento está obsoleto. Mientras tanto, si no desea este comportamiento (i.e. quieres forzar la creación de nuevos ejes), debes usar un conjunto único de argumentos y kwargs. El atributo *etiqueta* de los ejes ha sido expuesto para este propósito: si quieres que se añadan dos ejes idénticos a la figura, asegúrese de darles etiquetas únicas."

#: matplotlib.pyplot.axes:144 of
msgid "Examples"
msgstr "Ejemplos"

#: ../../../../../../../../api/_as_gen/matplotlib.pyplot.axes.examples:2
msgid "Examples using ``matplotlib.pyplot.axes``"
msgstr "Ejemplos usando ``matplotlib.pyplot.axes``"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:10
msgid "Make Room For Ylabel Using Axesgrid"
msgstr "Haz espacio para Ylabel usando Axesgrid"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:10
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:18
msgid ":ref:`sphx_glr_gallery_axes_grid1_make_room_for_ylabel_using_axesgrid.py`"
msgstr ":ref:`sphx_glr_gallery_axes_grid1_make_room_for_ylabel_using_axesgrid.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:29
msgid "Lasso Demo"
msgstr "Demostración de Lasso"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:29
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:37
msgid ":ref:`sphx_glr_gallery_event_handling_lasso_demo.py`"
msgstr ":ref:`sphx_glr_gallery_event_handling_lasso_demo.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:48
msgid "Buttons"
msgstr "Botones"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:48
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:56
msgid ":ref:`sphx_glr_gallery_widgets_buttons.py`"
msgstr ":ref:`sphx_glr_gallery_widgets_buttons.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:67
msgid "Check Buttons"
msgstr "Botones de control"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:67
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:75
msgid ":ref:`sphx_glr_gallery_widgets_check_buttons.py`"
msgstr ":ref:`sphx_glr_gallery_widgets_check_buttons.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:86
msgid "Radio Buttons"
msgstr "Botones de radio"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:86
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:94
msgid ":ref:`sphx_glr_gallery_widgets_radio_buttons.py`"
msgstr ":ref:`sphx_glr_gallery_widgets_radio_buttons.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:105
msgid "Thresholding an Image with RangeSlider"
msgstr "Umbralizar una imagen con RangeSlider"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:105
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:113
msgid ":ref:`sphx_glr_gallery_widgets_range_slider.py`"
msgstr ":ref:`sphx_glr_gallery_widgets_range_slider.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:124
msgid "Slider"
msgstr "Carrusel"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:124
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:132
msgid ":ref:`sphx_glr_gallery_widgets_slider_demo.py`"
msgstr ":ref:`sphx_glr_gallery_widgets_slider_demo.py`"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:143
msgid "Snapping Sliders to Discrete Values"
msgstr "Ajustar los carruseles a valores discretos"

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:143
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:151
msgid ":ref:`sphx_glr_gallery_widgets_slider_snap_demo.py`"
msgstr ":ref:`sphx_glr_gallery_widgets_slider_snap_demo.py`"

