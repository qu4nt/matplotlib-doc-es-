msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:44\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.animation.Animation.po\n"
"X-Crowdin-File-ID: 140\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.animation.Animation.rst:2
msgid "matplotlib.animation.Animation"
msgstr "matplotlib.animation.Animación"

#: matplotlib.animation.Animation:2 of
msgid "A base class for Animations."
msgstr "Una clase base para las animaciones."

#: matplotlib.animation.Animation:4 of
msgid "This class is not usable as is, and should be subclassed to provide needed behavior."
msgstr "Esta clase no es utilizable tal como es, y debe ser subclasificada para proporcionar el comportamiento necesario."

#: matplotlib.animation.Animation:9 of
msgid "You must store the created Animation in a variable that lives as long as the animation should run. Otherwise, the Animation object will be garbage-collected and the animation stops."
msgstr "Debes almacenar la Animación creada en una variable que vive siempre y cuando la animación deba ejecutarse. De lo contrario, el objeto de Animación será recolectado de basura y la animación se detiene."

#: matplotlib.animation.Animation matplotlib.animation.Animation.save
#: matplotlib.animation.Animation.to_html5_video
#: matplotlib.animation.Animation.to_jshtml of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.animation.Animation:16 of
msgid "**fig** : `~matplotlib.figure.Figure`"
msgstr "**fig** : `~matplotlib.figure.Figure`"

#: matplotlib.animation.Animation:15 of
msgid "Figure"
msgstr "Figura"

#: matplotlib.animation.Animation:16 of
msgid "The figure object used to get needed events, such as draw or resize."
msgstr "El objeto figura utilizado para obtener eventos necesarios, como dibujar o redimensionar."

#: matplotlib.animation.Animation:23 of
msgid "**event_source**"
msgstr "**evento_origen**"

#: of
msgid "object, optional"
msgstr "objeto, opcional"

#: matplotlib.animation.Animation:19 of
msgid "A class that can run a callback when desired events are generated, as well as be stopped and started."
msgstr "Una clase que puede ejecutar un callback cuando se generan eventos deseados, así como ser detenida e iniciada."

#: matplotlib.animation.Animation:22 of
msgid "Examples include timers (see `TimedAnimation`) and file system notifications."
msgstr "Los ejemplos incluyen temporizadores (ver `TimedAnimation`) y notificaciones del sistema de archivos."

#: matplotlib.animation.Animation:33 of
msgid "**blit**"
msgstr "**blit**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.animation.Animation:26 of
msgid "Whether blitting is used to optimize drawing."
msgstr "Si el chorro se utiliza para optimizar el dibujo."

#: matplotlib.animation.Animation:38 of
msgid ":obj:`FuncAnimation`, :obj:`ArtistAnimation`"
msgstr ":obj:`FuncAnimation`, :obj:`ArtistAnimation`"

#: ../../api/_as_gen/matplotlib.animation.Animation.rst:13
msgid "Methods"
msgstr "Métodos"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`__init__ <matplotlib.animation.Animation.__init__>`\\ \\(fig\\[\\, event\\_source\\, blit\\]\\)"
msgstr ":py:obj:`__init__ <matplotlib.animation.Animation.__init__>`\\ \\(fig\\[\\, event\\_source\\, blit\\]\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`new_frame_seq <matplotlib.animation.Animation.new_frame_seq>`\\ \\(\\)"
msgstr ":py:obj:`new_frame_seq <matplotlib.animation.Animation.new_frame_seq>`\\ \\(\\)"

#: matplotlib.animation.Animation.new_frame_seq:2
#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid "Return a new sequence of frame information."
msgstr "Devuelve una nueva secuencia de información de fotogramas."

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`new_saved_frame_seq <matplotlib.animation.Animation.new_saved_frame_seq>`\\ \\(\\)"
msgstr ":py:obj:`new_saved_frame_seq <matplotlib.animation.Animation.new_saved_frame_seq>`\\ \\(\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.new_saved_frame_seq:2 of
msgid "Return a new sequence of saved/cached frame information."
msgstr "Devolver una nueva secuencia de información del fotograma guardado/caché."

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`pause <matplotlib.animation.Animation.pause>`\\ \\(\\)"
msgstr ":py:obj:`pause <matplotlib.animation.Animation.pause>`\\ \\(\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.pause:2 of
msgid "Pause the animation."
msgstr "Pausar la animación."

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`resume <matplotlib.animation.Animation.resume>`\\ \\(\\)"
msgstr ":py:obj:`resume <matplotlib.animation.Animation.resume>`\\ \\(\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.resume:2 of
msgid "Resume the animation."
msgstr "Reanudar la animación."

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`save <matplotlib.animation.Animation.save>`\\ \\(filename\\[\\, writer\\, fps\\, dpi\\, codec\\, ...\\]\\)"
msgstr ":py:obj:`save <matplotlib.animation.Animation.save>`\\ \\(filename\\[\\, writer\\, fps\\, dpi\\, codec\\, ...\\]\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.save:2 of
msgid "Save the animation as a movie file by drawing every frame."
msgstr "Guarda la animación como un archivo de película dibujando cada fotograma."

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`to_html5_video <matplotlib.animation.Animation.to_html5_video>`\\ \\(\\[embed\\_limit\\]\\)"
msgstr ":py:obj:`to_html5_video <matplotlib.animation.Animation.to_html5_video>`\\ \\(\\[embed\\_limit\\]\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.to_html5_video:2 of
msgid "Convert the animation to an HTML5 ``<video>`` tag."
msgstr "Convierte la animación a una etiqueta HTML5 ``<video>`."

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`to_jshtml <matplotlib.animation.Animation.to_jshtml>`\\ \\(\\[fps\\, embed\\_frames\\, default\\_mode\\]\\)"
msgstr ":py:obj:`to_jshtml <matplotlib.animation.Animation.to_jshtml>`\\ \\(\\[fps\\, embed\\_frames\\, default\\_mode\\]\\)"

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.to_jshtml:2 of
msgid "Generate HTML representation of the animation."
msgstr "Generar representación HTML de la animación."

#: matplotlib.animation.Animation.save:8 of
msgid "**filename**"
msgstr "**nombre de archivo**"

#: matplotlib.animation.Animation.to_html5_video:35 of
msgid "str"
msgstr "str"

#: matplotlib.animation.Animation.save:8 of
msgid "The output filename, e.g., :file:`mymovie.mp4`."
msgstr "El nombre del archivo de salida, p. ej., :file:`mi-mp4`."

#: matplotlib.animation.Animation.save:12 of
msgid "**writer** : `MovieWriter` or str, default: :rc:`animation.writer`"
msgstr "**writer** : `MoWriter` o str, por defecto: :rc:`animation.writer`"

#: matplotlib.animation.Animation.save:11 of
msgid "MovieWriter or str, default: rcParams[\"animation.writer\"] (default: 'ffmpeg')"
msgstr "Escritor o str, por defecto: rcParams[\"animation.writer\"] (por defecto: 'ffmpeg')"

#: matplotlib.animation.Animation.save:11 of
msgid "A `MovieWriter` instance to use or a key that identifies a class to use, such as 'ffmpeg'."
msgstr "Una instancia de `Mo)[video] Writer` a usar o una clave que identifique una clase a usar, como 'ffmpeg'."

#: matplotlib.animation.Animation.save:16
#: matplotlib.animation.Animation.to_jshtml:9 of
msgid "**fps**"
msgstr "**fps**"

#: of
msgid "int, optional"
msgstr "int, opcional"

#: matplotlib.animation.Animation.save:15 of
msgid "Movie frame rate (per second).  If not set, the frame rate from the animation's frame interval."
msgstr "Ratio de fotogramas de película (por segundo). Si no se establece, la velocidad de fotogramas del intervalo de fotogramas de la animación."

#: matplotlib.animation.Animation.save:20 of
msgid "**dpi** : float, default: :rc:`savefig.dpi`"
msgstr "**dpi** : float, por defecto: :rc:`savefig.dpi`"

#: of
msgid "float, default:"
msgstr "flotante, por defecto:"

#: matplotlib.animation.Animation.save:19 of
msgid "Controls the dots per inch for the movie frames.  Together with the figure's size in inches, this controls the size of the movie."
msgstr "Controla los puntos por pulgada para los marcos de película. Junto con el tamaño de la figura en pulgadas, controla el tamaño de la película."

#: matplotlib.animation.Animation.save:24 of
msgid "**codec** : str, default: :rc:`animation.codec`."
msgstr "**codec** : str, por defecto: :rc:`animation.codec`."

#: of
msgid "str, default:"
msgstr "str, por defecto:"

#: matplotlib.animation.Animation.save:23 of
msgid "The video codec to use.  Not all codecs are supported by a given `MovieWriter`."
msgstr "El códec de vídeo a utilizar. No todos los códecs son soportados por un determinado `Mo)[video] Writer`."

#: matplotlib.animation.Animation.save:29 of
msgid "**bitrate** : int, default: :rc:`animation.bitrate`"
msgstr "**bitrate** : int, por defecto: :rc:`animation.bitrate`"

#: of
msgid "int, default:"
msgstr "int, por defecto:"

#: matplotlib.animation.Animation.save:27 of
msgid "The bitrate of the movie, in kilobits per second.  Higher values means higher quality movies, but increase the file size.  A value of -1 lets the underlying movie encoder select the bitrate."
msgstr "La tasa de bits de la película, en kilobits por segundo. Valores más altos significa películas de mayor calidad, pero aumentan el tamaño del archivo. Un valor de -1 permite al codificador de películas subyacente seleccionar la tasa de bits."

#: matplotlib.animation.Animation.save:34 of
msgid "**extra_args**"
msgstr "**extra_args**"

#: of
msgid "list of str or None, optional"
msgstr "lista de str o ninguno, opcional"

#: matplotlib.animation.Animation.save:32 of
msgid "Extra command-line arguments passed to the underlying movie encoder.  The default, None, means to use :rc:`animation.[name-of-encoder]_args` for the builtin writers."
msgstr "Argumentos extra de línea de comandos pasados al codificador de película subyacente. El valor predeterminado, Ninguno, significa usar :rc:`animation.[name-of-encoder]_args` para los escritores incorporados."

#: matplotlib.animation.Animation.save:39 of
msgid "**metadata**"
msgstr "**metadatos**"

#: of
msgid "dict[str, str], default: {}"
msgstr "dict[str, str], predeterminado: {}"

#: matplotlib.animation.Animation.save:37 of
msgid "Dictionary of keys and values for metadata to include in the output file. Some keys that may be of use include: title, artist, genre, subject, copyright, srcform, comment."
msgstr "Diccionario de claves y valores para que los metadatos se incluyan en el archivo de salida. Algunas claves que pueden ser de uso incluyen: título, artista, género, tema, copyright, srcform, comentario."

#: matplotlib.animation.Animation.save:46 of
msgid "**extra_anim**"
msgstr "**extra_anim**"

#: of
msgid "list, default: []"
msgstr "lista, por defecto: []"

#: matplotlib.animation.Animation.save:42 of
msgid "Additional `Animation` objects that should be included in the saved movie file. These need to be from the same `matplotlib.figure.Figure` instance. Also, animation frames will just be simply combined, so there should be a 1:1 correspondence between the frames from the different animations."
msgstr "Objetos adicionales de `Animation` que deben ser incluidos en el archivo de película guardado. Estos necesitan ser de la misma instancia de `matplotlib.figure.Figure`. Además, los fotogramas de animación serán simplemente combinados, por lo que debe haber una correspondencia 1:1 entre los fotogramas de las diferentes animaciones."

#: matplotlib.animation.Animation.save:50 of
msgid "**savefig_kwargs**"
msgstr "**savefig_kwargs**"

#: of
msgid "dict, default: {}"
msgstr "dict, default: {}"

#: matplotlib.animation.Animation.save:49 of
msgid "Keyword arguments passed to each `~.Figure.savefig` call used to save the individual frames."
msgstr "Argumentos de palabra clave pasados a cada llamada `~.Figure.savefig` usada para guardar los fotogramas individuales."

#: matplotlib.animation.Animation.save:73 of
msgid "**progress_callback**"
msgstr "**progreso_callback**"

#: of
msgid "function, optional"
msgstr "función, opcional"

#: matplotlib.animation.Animation.save:53 of
msgid "A callback function that will be called for every frame to notify the saving progress. It must have the signature ::"
msgstr "Una función de callback que será llamada para cada fotograma para notificar el progreso guardado. Debe tener la firma ::"

#: matplotlib.animation.Animation.save:58 of
msgid "where *current_frame* is the current frame number and *total_frames* is the total number of frames to be saved. *total_frames* is set to None, if the total number of frames can not be determined. Return values may exist but are ignored."
msgstr "donde *current_frame* es el número de fotograma actual y *total_frames* es el número total de fotogramas a guardar. *total_frames* está establecido en Ninguno, si el número total de fotogramas no se puede determinar. Los valores de retorno pueden existir pero son ignorados."

#: matplotlib.animation.Animation.save:63 of
msgid "Example code to write the progress to stdout::"
msgstr "Código de ejemplo para escribir el progreso a stdout::"

#: matplotlib.animation.Animation.save:76 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.animation.Animation.save:77 of
msgid "*fps*, *codec*, *bitrate*, *extra_args* and *metadata* are used to construct a `.MovieWriter` instance and can only be passed if *writer* is a string.  If they are passed as non-*None* and *writer* is a `.MovieWriter`, a `RuntimeError` will be raised."
msgstr "*fps*, *codec*, *bitrate*, *extra_args* y *metadata* son usados para construir una instancia de `.Mo)[video] Writer` y sólo pueden ser pasados si *writer* es una cadena. Si son pasados como no-* * y *escritor* es un `.Mo)[video] Writer`, un `RuntimeError` será levantado."

#: matplotlib.animation.Animation.to_html5_video:4 of
msgid "This saves the animation as an h264 video, encoded in base64 directly into the HTML5 video tag. This respects :rc:`animation.writer` and :rc:`animation.bitrate`. This also makes use of the ``interval`` to control the speed, and uses the ``repeat`` parameter to decide whether to loop."
msgstr "Esto guarda la animación como un vídeo h264, codificado en base64 directamente en la etiqueta de vídeo HTML5. Esto respeta :rc:`animation.writer` y :rc:`animación. itrate`. Esto también hace uso del ``interval`` para controlar la velocidad, y utiliza el parámetro ``repetir`` para decidir si hacer bucle."

#: matplotlib.animation.Animation.to_html5_video:15 of
msgid "**embed_limit**"
msgstr "**embed_limit**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.animation.Animation.to_html5_video:13 of
msgid "Limit, in MB, of the returned animation. No animation is created if the limit is exceeded. Defaults to :rc:`animation.embed_limit` = 20.0."
msgstr "Límite, en MB, de la animación devuelta. No se crea ninguna animación si el límite es excedido. Por defecto es :rc:`animation.embed_limit` = 20.0."

#: matplotlib.animation.Animation.to_html5_video of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.animation.Animation.to_html5_video:20 of
msgid "An HTML5 video tag with the animation embedded as base64 encoded h264 video. If the *embed_limit* is exceeded, this returns the string \"Video too large to embed.\""
msgstr "Una etiqueta de vídeo HTML5 con la animación incrustada como vídeo h264 codificado en base64. Si el *embed_limit* es excedido, esto devuelve la cadena \"Video demasiado grande para incrustar.\""

#: matplotlib.animation.Animation.to_jshtml:8 of
msgid "Movie frame rate (per second). If not set, the frame rate from the animation's frame interval."
msgstr "Ratio de fotogramas de película (por segundo). Si no se establece, la velocidad de fotogramas del intervalo de fotogramas de la animación."

#: matplotlib.animation.Animation.to_jshtml:12 of
msgid "**embed_frames**"
msgstr "**embed_frames**"

#: of
msgid "bool, optional"
msgstr "bool, optional"

#: matplotlib.animation.Animation.to_jshtml:30 of
msgid "**default_mode**"
msgstr "**modo predeterminado**"

#: of
msgid "str, optional"
msgstr "str, opcional"

#: matplotlib.animation.Animation.to_jshtml:15 of
msgid "What to do when the animation ends. Must be one of ``{'loop', 'once', 'reflect'}``. Defaults to ``'loop'`` if ``self.repeat`` is True, otherwise ``'once'``."
msgstr "Qué hacer cuando la animación termina. Debe ser uno de ``{'loop', 'once', 'reflect'}``. Por defecto es ``'loop'`` si ``self.repetir`` es verdadero, de lo contrario ``'una vez'``."

