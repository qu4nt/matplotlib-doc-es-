msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:49\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.fill_between.po\n"
"X-Crowdin-File-ID: 410\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.rst:2
msgid "matplotlib.axes.Axes.fill\\_between"
msgstr "matplotlib.axes.Ejes.rellenar\\_entre"

#: matplotlib.axes._axes.Axes.fill_between:2 of
msgid "Fill the area between two horizontal curves."
msgstr "Rellena el área entre dos curvas horizontales."

#: matplotlib.axes._axes.Axes.fill_between:4 of
msgid "The curves are defined by the points (*x*, *y1*) and (*x*, *y2*).  This creates one or multiple polygons describing the filled area."
msgstr "Las curvas se definen por los puntos (*x*, *y1*) y (*x*, *y2*)."

#: matplotlib.axes._axes.Axes.fill_between:8 of
msgid "You may exclude some horizontal sections from filling using *where*."
msgstr "Puede excluir algunas secciones horizontales del relleno usando *donde*."

#: matplotlib.axes._axes.Axes.fill_between:10 of
msgid "By default, the edges connect the given points directly.  Use *step* if the filling should be a step function, i.e. constant in between *x*."
msgstr "Por defecto, los bordes conectan directamente los puntos dados. Utilice *paso* si el relleno debe ser una función de paso, es decir, constante entre *x*."

#: matplotlib.axes._axes.Axes.fill_between of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.axes._axes.Axes.fill_between:17 of
msgid "**x**"
msgstr "**x**"

#: of
msgid "array (length N)"
msgstr "array (longitud N)"

#: matplotlib.axes._axes.Axes.fill_between:17 of
msgid "The x coordinates of the nodes defining the curves."
msgstr "Las coordenadas x de los nodos que definen las curvas."

#: matplotlib.axes._axes.Axes.fill_between:20 of
msgid "**y1**"
msgstr "**y1**"

#: of
msgid "array (length N) or scalar"
msgstr "array (longitud N) o escalar"

#: matplotlib.axes._axes.Axes.fill_between:20 of
msgid "The y coordinates of the nodes defining the first curve."
msgstr "Las coordenadas y de los nodos que definen la primera curva."

#: matplotlib.axes._axes.Axes.fill_between:23 of
msgid "**y2**"
msgstr "**y2**"

#: of
msgid "array (length N) or scalar, default: 0"
msgstr "array (longitud N) o escalar, por defecto: 0"

#: matplotlib.axes._axes.Axes.fill_between:23 of
msgid "The y coordinates of the nodes defining the second curve."
msgstr "Las coordenadas y de los nodos que definen la segunda curva."

#: matplotlib.axes._axes.Axes.fill_between:32 of
msgid "**where**"
msgstr "**dónde**"

#: of
msgid "array of bool (length N), optional"
msgstr "array de la pluma (longitud N), opcional"

#: matplotlib.axes._axes.Axes.fill_between:26 of
msgid "Define *where* to exclude some horizontal regions from being filled. The filled regions are defined by the coordinates ``x[where]``. More precisely, fill between ``x[i]`` and ``x[i+1]`` if ``where[i] and where[i+1]``.  Note that this definition implies that an isolated *True* value between two *False* values in *where* will not result in filling.  Both sides of the *True* position remain unfilled due to the adjacent *False* values."
msgstr "Define *dónde* para excluir algunas regiones horizontales de ser llenadas. Las regiones llenadas son definidas por las coordenadas ``x[where]``. Más precisamente, llene entre ``x[i]`` y ``x[i+1]`` si ``donde[i] y donde[i+1]``. Tenga en cuenta que esta definición implica que un valor *True* aislado entre dos valores *False* en *donde* no dará como resultado el relleno. Ambos lados de la posición *True* permanecen sin llenar debido a los valores *False* adyacentes."

#: matplotlib.axes._axes.Axes.fill_between:46 of
msgid "**interpolate**"
msgstr "**interpolar**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.axes._axes.Axes.fill_between:35 of
msgid "This option is only relevant if *where* is used and the two curves are crossing each other."
msgstr "Esta opción sólo es relevante si se utiliza *dónde* y las dos curvas se cruzan entre sí."

#: matplotlib.axes._axes.Axes.fill_between:38 of
msgid "Semantically, *where* is often used for *y1* > *y2* or similar.  By default, the nodes of the polygon defining the filled region will only be placed at the positions in the *x* array. Such a polygon cannot describe the above semantics close to the intersection.  The x-sections containing the intersection are simply clipped."
msgstr "Semánticamente, *donde* se usa a menudo para *y1* > *y2* o similar. Por defecto, los nodos del polígono que definen la región rellenada sólo se colocarán en las posiciones de la matriz *x*. Este tipo de polígono no puede describir los semánticos anteriores cercanos a la intersección. Las secciones x que contienen la intersección son simplemente recortadas."

#: matplotlib.axes._axes.Axes.fill_between:45 of
msgid "Setting *interpolate* to *True* will calculate the actual intersection point and extend the filled region up to this point."
msgstr "Establecer *interpolar* en *Verdadero* calculará el punto de intersección real y extenderá la región rellena hasta este punto."

#: matplotlib.axes._axes.Axes.fill_between:59 of
msgid "**step**"
msgstr "**paso**"

#: of
msgid "{'pre', 'post', 'mid'}, optional"
msgstr "{'pre', 'post', 'mid'}, opcional"

#: matplotlib.axes._axes.Axes.fill_between:49 of
msgid "Define *step* if the filling should be a step function, i.e. constant in between *x*.  The value determines where the step will occur:"
msgstr "Define *paso* si el relleno debe ser una función de paso, es decir, constante entre *x*. El valor determina dónde ocurrirá el paso:"

#: matplotlib.axes._axes.Axes.fill_between:53 of
msgid "'pre': The y value is continued constantly to the left from every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the value ``y[i]``."
msgstr "'pre': El valor y se continúa constantemente a la izquierda desde cada posición *x*, i. . el intervalo ``(x[i-1], x[i]]`` tiene el valor ``y[i]``."

#: matplotlib.axes._axes.Axes.fill_between:56 of
msgid "'post': The y value is continued constantly to the right from every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the value ``y[i]``."
msgstr "'post': El valor y se continúa constantemente a la derecha desde cada posición *x*, i. . el intervalo ``[x[i], x[i+1])`` tiene el valor ``y[i]``."

#: matplotlib.axes._axes.Axes.fill_between:59 of
msgid "'mid': Steps occur half-way between the *x* positions."
msgstr "'mid': Los pasos ocurren a mitad de camino entre las posiciones *x*."

#: matplotlib.axes._axes.Axes.fill_between of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.axes._axes.Axes.fill_between:66 of
msgid "`.PolyCollection`"
msgstr "`.PolyCollection`"

#: matplotlib.axes._axes.Axes.fill_between:64 of
msgid "A `.PolyCollection` containing the plotted polygons."
msgstr "Un `.PolyCollection` que contiene los polígonos trazados."

#: matplotlib.axes._axes.Axes.fill_between of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.axes._axes.Axes.fill_between:74 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.axes._axes.Axes.fill_between:71 of
msgid "If given, the following parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception):"
msgstr "Si se dan, los siguientes parámetros también aceptan una cadena ``s``, que se interpreta como ``data[s]`` (a menos que se produzca una excepción):"

#: matplotlib.axes._axes.Axes.fill_between:74 of
msgid "*x*, *y1*, *y2*, *where*"
msgstr "*x*, *y1*, *y2*, *dónde*"

#: matplotlib.axes._axes.Axes.fill_between:129 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.axes._axes.Axes.fill_between:77 of
msgid "All other keyword arguments are passed on to `.PolyCollection`. They control the `.Polygon` properties:"
msgstr "Todos los otros argumentos de palabra clave se pasan a `.PolyCollection`. Ellos controlan las propiedades `.Polygon`:"

#: matplotlib.axes._axes.Axes.fill_between:84 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.axes._axes.Axes.fill_between:84 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.axes._axes.Axes.fill_between:86 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.axes._axes.Axes.fill_between:86 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.axes._axes.Axes.fill_between:87 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"

#: matplotlib.axes._axes.Axes.fill_between:87 of
msgid "array-like or scalar or None"
msgstr "como matriz o escalar o ninguno"

#: matplotlib.axes._axes.Axes.fill_between:88 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.axes._axes.Axes.fill_between:88
#: matplotlib.axes._axes.Axes.fill_between:94
#: matplotlib.axes._axes.Axes.fill_between:103
#: matplotlib.axes._axes.Axes.fill_between:115
#: matplotlib.axes._axes.Axes.fill_between:124 of
msgid "bool"
msgstr "bool"

#: matplotlib.axes._axes.Axes.fill_between:89 of
msgid ":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` or aa or antialiaseds"
msgstr ":meth:`antialias <matplotlib.collections.Collection.set_antialiased>` o aa o antialiaseds"

#: matplotlib.axes._axes.Axes.fill_between:89 of
msgid "bool or list of bools"
msgstr "libro o lista de bools"

#: matplotlib.axes._axes.Axes.fill_between:90 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"

#: matplotlib.axes._axes.Axes.fill_between:90 of
msgid "array-like or None"
msgstr "tipo array o ninguno"

#: matplotlib.axes._axes.Axes.fill_between:91 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"

#: matplotlib.axes._axes.Axes.fill_between:91 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.axes._axes.Axes.fill_between:92 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"

#: matplotlib.axes._axes.Axes.fill_between:92 of
msgid "(vmin: float, vmax: float)"
msgstr "(vmin: flotante, vmax: flotante)"

#: matplotlib.axes._axes.Axes.fill_between:93 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.axes._axes.Axes.fill_between:93 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.axes._axes.Axes.fill_between:94 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.axes._axes.Axes.fill_between:95 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.axes._axes.Axes.fill_between:95 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.axes._axes.Axes.fill_between:96 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"

#: matplotlib.axes._axes.Axes.fill_between:96 of
msgid "`.Colormap` or str or None"
msgstr "`.Colormap` o str o ninguno"

#: matplotlib.axes._axes.Axes.fill_between:97 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ":meth:`color <matplotlib.collections.Collection.set_color>`"

#: matplotlib.axes._axes.Axes.fill_between:97 of
msgid "color or list of rgba tuples"
msgstr "color o lista de tubos rgba"

#: matplotlib.axes._axes.Axes.fill_between:98 of
msgid ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec or edgecolors"
msgstr ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` o ec o aristas colores"

#: matplotlib.axes._axes.Axes.fill_between:98 of
msgid "color or list of colors or 'face'"
msgstr "color o lista de colores o 'cara'"

#: matplotlib.axes._axes.Axes.fill_between:99 of
msgid ":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or facecolors or fc"
msgstr ":meth:`carecolor <matplotlib.collections.Collection.set_facecolor>` o colores de caras o fc"

#: matplotlib.axes._axes.Axes.fill_between:99 of
msgid "color or list of colors"
msgstr "color o lista de colores"

#: matplotlib.axes._axes.Axes.fill_between:100 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.axes._axes.Axes.fill_between:100 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.axes._axes.Axes.fill_between:101 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.axes._axes.Axes.fill_between:101
#: matplotlib.axes._axes.Axes.fill_between:120 of
msgid "str"
msgstr "str"

#: matplotlib.axes._axes.Axes.fill_between:102 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ":meth:`colgante <matplotlib.collections.Collection.set_hatch>`"

#: matplotlib.axes._axes.Axes.fill_between:102 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"

#: matplotlib.axes._axes.Axes.fill_between:103 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.axes._axes.Axes.fill_between:104 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"

#: matplotlib.axes._axes.Axes.fill_between:104 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.axes._axes.Axes.fill_between:105 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.axes._axes.Axes.fill_between:105 of
msgid "object"
msgstr "object"

#: matplotlib.axes._axes.Axes.fill_between:106 of
msgid ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or dashes or linestyles or ls"
msgstr ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` o guiones o estilos de línea o ls"

#: matplotlib.axes._axes.Axes.fill_between:106 of
msgid "str or tuple or list thereof"
msgstr "str o tuple o lista de ellos"

#: matplotlib.axes._axes.Axes.fill_between:107 of
msgid ":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or linewidths or lw"
msgstr ":meth:`ancho de línea <matplotlib.collections.Collection.set_linewidth>o ancho de línea o lw"

#: matplotlib.axes._axes.Axes.fill_between:107 of
msgid "float or list of floats"
msgstr "flotante o lista de flotantes"

#: matplotlib.axes._axes.Axes.fill_between:108 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"

#: matplotlib.axes._axes.Axes.fill_between:108 of
msgid "`.Normalize` or None"
msgstr "`.normalize` o Ninguno"

#: matplotlib.axes._axes.Axes.fill_between:109 of
msgid ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"
msgstr ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"

#: matplotlib.axes._axes.Axes.fill_between:109
#: matplotlib.axes._axes.Axes.fill_between:119 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.axes._axes.Axes.fill_between:110 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"

#: matplotlib.axes._axes.Axes.fill_between:110 of
msgid "(N, 2) or (2,) array-like"
msgstr "((N, 2) o (2,) array-like"

#: matplotlib.axes._axes.Axes.fill_between:111 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.axes._axes.Axes.fill_between:111 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.axes._axes.Axes.fill_between:112 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`rutas <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.axes._axes.Axes.fill_between:112
#: matplotlib.axes._axes.Axes.fill_between:122 of
msgid "list of array-like"
msgstr "lista de matriz"

#: matplotlib.axes._axes.Axes.fill_between:113 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.axes._axes.Axes.fill_between:113 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.axes._axes.Axes.fill_between:114 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"

#: matplotlib.axes._axes.Axes.fill_between:114
#: matplotlib.axes._axes.Axes.fill_between:125 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.axes._axes.Axes.fill_between:115 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.axes._axes.Axes.fill_between:116 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ":meth:`tamaños <matplotlib.collections._CollectionWithSizes.set_sizes>`"

#: matplotlib.axes._axes.Axes.fill_between:116 of
msgid "ndarray or None"
msgstr "ndarray o ninguno"

#: matplotlib.axes._axes.Axes.fill_between:117 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.axes._axes.Axes.fill_between:117 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.axes._axes.Axes.fill_between:118 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.axes._axes.Axes.fill_between:118 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.axes._axes.Axes.fill_between:119 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.axes._axes.Axes.fill_between:120 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.axes._axes.Axes.fill_between:121 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ":meth:`urls <matplotlib.collections.Collection.set_urls>`"

#: matplotlib.axes._axes.Axes.fill_between:121 of
msgid "list of str or None"
msgstr "lista de str o ninguno"

#: matplotlib.axes._axes.Axes.fill_between:122 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.axes._axes.Axes.fill_between:123 of
msgid ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"

#: matplotlib.axes._axes.Axes.fill_between:123 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.axes._axes.Axes.fill_between:124 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.axes._axes.Axes.fill_between:125 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.axes._axes.Axes.fill_between:134 of
msgid ":obj:`fill_between`"
msgstr ":obj:`recolectar`"

#: matplotlib.axes._axes.Axes.fill_between:135 of
msgid "Fill between two sets of y-values."
msgstr "Rellena entre dos conjuntos de valores y-."

#: matplotlib.axes._axes.Axes.fill_between:136 of
msgid ":obj:`fill_betweenx`"
msgstr ":obj:`fill_betweenx`"

#: matplotlib.axes._axes.Axes.fill_between:137 of
msgid "Fill between two sets of x-values."
msgstr "Rellena entre dos conjuntos de valores X."

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:2
msgid "Examples using ``matplotlib.axes.Axes.fill_between``"
msgstr "Ejemplos usando ``matplotlib.axes.Axes.fill_between``"

#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:10
msgid "Fill Between and Alpha"
msgstr "Rellenar entre y alfa"

#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:18
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_fill_between_alpha.py`"
msgstr ":ref:`sphx_glr_gallery_lines_bars_and_markers_fill_between_alpha.py`"

