msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/widgets_api.po\n"
"X-Crowdin-File-ID: 1992\n"
"Language: es_ES\n"

#: ../../api/widgets_api.rst:3
msgid "``matplotlib.widgets``"
msgstr "``matplotlib.widgets``"

#: matplotlib.widgets:2 of
msgid "GUI neutral widgets"
msgstr "Widgets GUI neutral"

#: matplotlib.widgets:4 of
msgid "Widgets that are designed to work for any of the GUI backends. All of these widgets require you to predefine a `matplotlib.axes.Axes` instance and pass that as the first parameter.  Matplotlib doesn't try to be too smart with respect to layout -- you will have to figure out how wide and tall you want your Axes to be to accommodate your widget."
msgstr "Widgets diseñados para trabajar en cualquiera de los soportes GUI. Todos estos widgets requieren que predefinas una instancia de `matplotlib.axes.Axes` y que pases como el primer parámetro. Matplotlib no intenta ser demasiado inteligente con respecto al diseño -- tendrás que averiguar cuán ancho y alto quieres que sean tus ejes para acomodar tu widget."

#: matplotlib.widgets.AxesWidget:1 matplotlib.widgets.MultiCursor:1
#: matplotlib.widgets.SubplotTool:1 of
msgid "Bases: :py:class:`matplotlib.widgets.Widget`"
msgstr "Bases: :py:class:`matplotlib.widgets.Widget`"

#: matplotlib.widgets.AxesWidget:2 of
msgid "Widget connected to a single `~matplotlib.axes.Axes`."
msgstr "Widget conectado a un solo `~matplotlib.axes.Axes`."

#: matplotlib.widgets.AxesWidget:4 of
msgid "To guarantee that the widget remains responsive and not garbage-collected, a reference to the object should be maintained by the user."
msgstr "Para garantizar que el widget sigue respondiendo y no recolectado de basura, el usuario debe mantener una referencia al objeto."

#: matplotlib.widgets.AxesWidget:7 of
msgid "This is necessary because the callback registry maintains only weak-refs to the functions, which are member functions of the widget.  If there are no references to the widget object it may be garbage collected which will disconnect the callbacks."
msgstr "Esto es necesario porque el registro de devolución de llamada sólo mantiene referencias débiles a las funciones, que son funciones miembro del widget. Si no hay referencias al objeto widget puede ser basura recolectada que desconectará las devoluciones de llamada."

#: matplotlib.widgets.AxesWidget matplotlib.widgets.Button
#: matplotlib.widgets.CheckButtons matplotlib.widgets.RadioButtons
#: matplotlib.widgets.RangeSlider matplotlib.widgets.Slider
#: matplotlib.widgets.TextBox of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.widgets.AxesWidget:27 matplotlib.widgets.Button:44
#: matplotlib.widgets.CheckButtons:24 matplotlib.widgets.CheckButtons:47
#: matplotlib.widgets.EllipseSelector:13 matplotlib.widgets.Lasso:13
#: matplotlib.widgets.LassoSelector:25 matplotlib.widgets.PolygonSelector:22
#: matplotlib.widgets.RadioButtons:24 matplotlib.widgets.RadioButtons:49
#: matplotlib.widgets.RectangleSelector:13 matplotlib.widgets.TextBox:26
#: matplotlib.widgets.TextBox:48 of
msgid "**ax** : `~matplotlib.axes.Axes`"
msgstr "**ax** : `~matplotlib.axes.Axes`"

#: matplotlib.widgets.AxesWidget:26 matplotlib.widgets.Button:43
#: matplotlib.widgets.CheckButtons:23 matplotlib.widgets.CheckButtons:46
#: matplotlib.widgets.EllipseSelector:12 matplotlib.widgets.Lasso:12
#: matplotlib.widgets.LassoSelector:24 matplotlib.widgets.PolygonSelector:21
#: matplotlib.widgets.RadioButtons:23 matplotlib.widgets.RadioButtons:48
#: matplotlib.widgets.RectangleSelector:12 matplotlib.widgets.TextBox:25
#: matplotlib.widgets.TextBox:47 of
msgid "Axes"
msgstr "Ejes"

#: matplotlib.widgets.AxesWidget:27 matplotlib.widgets.CheckButtons:24
#: matplotlib.widgets.CheckButtons:47 matplotlib.widgets.EllipseSelector:13
#: matplotlib.widgets.Lasso:13 matplotlib.widgets.LassoSelector:25
#: matplotlib.widgets.PolygonSelector:22 matplotlib.widgets.RadioButtons:24
#: matplotlib.widgets.RectangleSelector:13 matplotlib.widgets.TextBox:26 of
msgid "The parent axes for the widget."
msgstr "Los ejes superiores para el widget."

#: matplotlib.widgets.AxesWidget:30 of
msgid "**canvas** : `~matplotlib.backend_bases.FigureCanvasBase`"
msgstr "**canvas** : `~matplotlib.backend_bases.FigureCanvasBase`"

#: matplotlib.widgets.AxesWidget:29 of
msgid "FigureCanvasBase"
msgstr "Base de lienzo de figura"

#: matplotlib.widgets.AxesWidget:30 of
msgid "The parent figure canvas for the widget."
msgstr "El lienzo de la figura padre para el widget."

#: matplotlib.widgets.AxesWidget:34 of
msgid ":obj:`active <active>`"
msgstr ":obj:`activo <active>`"

#: of
msgid "bool"
msgstr "bool"

#: matplotlib.widgets.AxesWidget:33 matplotlib.widgets.Widget.active:2 of
msgid "Is the widget active?"
msgstr "¿Está activo el widget?"

#: matplotlib.widgets.AxesWidget.connect_event:2 of
msgid "Connect a callback function with an event."
msgstr "Conecta una función de callback con un evento."

#: matplotlib.widgets.AxesWidget.connect_event:4 of
msgid "This should be used in lieu of ``figure.canvas.mpl_connect`` since this function stores callback ids for later clean up."
msgstr "Esto debería ser usado en lugar de ``figure.canvas.mpl_connect`` ya que esta función almacena ids de devolución de llamada para su posterior limpieza."

#: matplotlib.widgets.AxesWidget.disconnect_events:2 of
msgid "Disconnect all events created by this widget."
msgstr "Desconectar todos los eventos creados por este widget."

#: matplotlib.widgets.Button:1 matplotlib.widgets.CheckButtons:1
#: matplotlib.widgets.Cursor:1 matplotlib.widgets.Lasso:1
#: matplotlib.widgets.RadioButtons:1 matplotlib.widgets.SliderBase:1
#: matplotlib.widgets.TextBox:1 of
msgid "Bases: :py:class:`matplotlib.widgets.AxesWidget`"
msgstr "Bases: :py:class:`matplotlib.widgets.AxesWidget`"

#: matplotlib.widgets.Button:2 of
msgid "A GUI neutral button."
msgstr "Un botón neutral de GUI."

#: matplotlib.widgets.Button:4 of
msgid "For the button to remain responsive you must keep a reference to it. Call `.on_clicked` to connect to the button."
msgstr "Para que el botón siga respondiendo, debe guardar una referencia a ella. Llame a `.on_clicked` para conectarse al botón."

#: matplotlib.widgets.Button:22 matplotlib.widgets.RangeSlider:37
#: matplotlib.widgets.Slider:36 of
msgid "**ax**"
msgstr "**ej**"

#: matplotlib.widgets.Button:22 of
msgid "The `matplotlib.axes.Axes` the button renders into."
msgstr "El `matplotlib.axes.Axes` en el que se renderiza el botón."

#: matplotlib.widgets.Button:25 matplotlib.widgets.Button:47
#: matplotlib.widgets.RangeSlider:40 matplotlib.widgets.Slider:39
#: matplotlib.widgets.TextBox:51 of
msgid "**label**"
msgstr "**etiqueta**"

#: matplotlib.widgets.Button:25 of
msgid "A `matplotlib.text.Text` instance."
msgstr "Una instancia `matplotlib.text.Text`."

#: matplotlib.widgets.Button:28 matplotlib.widgets.Button:54
#: matplotlib.widgets.TextBox:32 matplotlib.widgets.TextBox:57 of
msgid "**color**"
msgstr "**color**"

#: matplotlib.widgets.Button:28 of
msgid "The color of the button when not hovering."
msgstr "El color del botón cuando no está flotando."

#: matplotlib.widgets.Button:32 matplotlib.widgets.Button:70
#: matplotlib.widgets.TextBox:36 matplotlib.widgets.TextBox:60 of
msgid "**hovercolor**"
msgstr "**hovercolor**"

#: matplotlib.widgets.Button:31 of
msgid "The color of the button when hovering."
msgstr "El color del botón al pasar el ratón."

#: matplotlib.widgets.Button matplotlib.widgets.CheckButtons
#: matplotlib.widgets.CheckButtons.set_active matplotlib.widgets.Cursor
#: matplotlib.widgets.EllipseSelector matplotlib.widgets.Lasso
#: matplotlib.widgets.LassoSelector matplotlib.widgets.MultiCursor
#: matplotlib.widgets.PolygonSelector matplotlib.widgets.RadioButtons
#: matplotlib.widgets.RangeSlider matplotlib.widgets.RangeSlider.on_changed
#: matplotlib.widgets.RangeSlider.set_max
#: matplotlib.widgets.RangeSlider.set_min
#: matplotlib.widgets.RangeSlider.set_val matplotlib.widgets.RectangleSelector
#: matplotlib.widgets.Slider matplotlib.widgets.Slider.on_changed
#: matplotlib.widgets.Slider.set_val matplotlib.widgets.SliderBase.disconnect
#: matplotlib.widgets.SpanSelector matplotlib.widgets.SubplotTool
#: matplotlib.widgets.TextBox matplotlib.widgets.ToolHandles
#: matplotlib.widgets.ToolLineHandles
#: matplotlib.widgets.ToolLineHandles.closest
#: matplotlib.widgets.ToolLineHandles.set_data of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.widgets.Button:44 matplotlib.widgets.TextBox:48 of
msgid "The `~.axes.Axes` instance the button will be placed into."
msgstr "La instancia `~.axes.Axes` en la que se colocará el botón."

#: of
msgid "str"
msgstr "str"

#: matplotlib.widgets.Button:47 of
msgid "The button text."
msgstr "El texto del botón."

#: matplotlib.widgets.Button:51 of
msgid "**image**"
msgstr "**imagen**"

#: of
msgid "array-like or PIL Image"
msgstr "imagen de matriz o PIL"

#: matplotlib.widgets.Button:50 of
msgid "The image to place in the button, if not *None*.  The parameter is directly forwarded to `~matplotlib.axes.Axes.imshow`."
msgstr "La imagen a colocar en el botón, si no *Ninguno*. El parámetro es reenviado directamente a `~matplotlib.axes.Axes.imshow`."

#: matplotlib.widgets.RangeSlider:81 matplotlib.widgets.RangeSlider:82
#: matplotlib.widgets.Slider:92 matplotlib.widgets.Slider:93 of
msgid "color"
msgstr "color"

#: matplotlib.widgets.Button:54 of
msgid "The color of the button when not activated."
msgstr "El color del botón cuando no se activa."

#: matplotlib.widgets.Button:57 of
msgid "The color of the button when the mouse is over it."
msgstr "El color del botón cuando el ratón está sobre él."

#: matplotlib.widgets.Button.disconnect:2 of
msgid "Remove the callback function with connection id *cid*."
msgstr "Remueve la función callback con el id de conexión *cid*."

#: matplotlib.widgets.Button.on_clicked:2
#: matplotlib.widgets.CheckButtons.on_clicked:2
#: matplotlib.widgets.RadioButtons.on_clicked:2 of
msgid "Connect the callback function *func* to button click events."
msgstr "Conecte la función de callback *función* para hacer clic en eventos."

#: matplotlib.widgets.Button.on_clicked:4
#: matplotlib.widgets.CheckButtons.on_clicked:4
#: matplotlib.widgets.RadioButtons.on_clicked:4 of
msgid "Returns a connection id, which can be used to disconnect the callback."
msgstr "Devuelve un id de conexión, que puede ser usado para desconectar el callback."

#: matplotlib.widgets.CheckButtons:2 of
msgid "A GUI neutral set of check buttons."
msgstr "Un GUI neutral conjunto de botones de control."

#: matplotlib.widgets.CheckButtons:4 of
msgid "For the check buttons to remain responsive you must keep a reference to this object."
msgstr "Para que los botones de verificación permanezcan receptivos debe guardar una referencia a este objeto."

#: matplotlib.widgets.CheckButtons:7 of
msgid "Connect to the CheckButtons with the `.on_clicked` method."
msgstr "Conecta a los CheckButtons con el método `.on_clicked`."

#: matplotlib.widgets.CheckButtons:27 matplotlib.widgets.RadioButtons:30 of
msgid "**labels** : list of `.Text`"
msgstr "**etiquetas** : lista de `.Text`"

#: of
msgid "list of"
msgstr "lista de"

#: matplotlib.widgets.CheckButtons:30 of
msgid "**rectangles** : list of `.Rectangle`"
msgstr "**rectángulos** : lista de `.Rectangle`"

#: matplotlib.widgets.CheckButtons:35 of
msgid "**lines** : list of (`.Line2D`, `.Line2D`) pairs"
msgstr "**líneas** : lista de pares (`.Line2D`, `.Line2D`)"

#: of
msgid "list of ("
msgstr "lista de ("

#: matplotlib.widgets.CheckButtons:33 of
msgid "List of lines for the x's in the check boxes.  These lines exist for each box, but have ``set_visible(False)`` when its box is not checked."
msgstr "Lista de líneas para las X en las casillas de verificación. Estas líneas existen para cada casilla, pero tienen ``set_visible(False)`` cuando su casilla no está marcada."

#: matplotlib.widgets.CheckButtons:41 of
msgid "Add check buttons to `matplotlib.axes.Axes` instance *ax*."
msgstr "Añade botones de verificación a la instancia *ax* de `matplotlib.axes.Axes*."

#: matplotlib.widgets.CheckButtons:50 matplotlib.widgets.RadioButtons:52 of
msgid "**labels**"
msgstr "**labels**"

#: of
msgid "list of str"
msgstr "lista de str"

#: matplotlib.widgets.CheckButtons:50 of
msgid "The labels of the check buttons."
msgstr "Las etiquetas de los botones de control."

#: matplotlib.widgets.CheckButtons:67 of
msgid "**actives**"
msgstr "**actives**"

#: of
msgid "list of bool, optional"
msgstr "lista de bool, opcional"

#: matplotlib.widgets.CheckButtons:53 of
msgid "The initial check states of the buttons. The list must have the same length as *labels*. If not given, all buttons are unchecked."
msgstr "Los estados de verificación iniciales de los botones. La lista debe tener la misma longitud que *etiquetas*. Si no se proporciona, todos los botones no están marcados."

#: matplotlib.widgets.CheckButtons.disconnect:2
#: matplotlib.widgets.RadioButtons.disconnect:2
#: matplotlib.widgets.SliderBase.disconnect:2
#: matplotlib.widgets.TextBox.disconnect:2 of
msgid "Remove the observer with connection id *cid*."
msgstr "Remueve el observador con el id de conexión *cid*."

#: matplotlib.widgets.CheckButtons.get_status:2 of
msgid "Return a tuple of the status (True/False) of all of the check buttons."
msgstr "Devuelve una tupla del estado (Verdadero/Falso) de todos los botones de verificación."

#: matplotlib.widgets.CheckButtons.set_active:2 of
msgid "Toggle (activate or deactivate) a check button by index."
msgstr "Alterna (activar o desactivar) un botón de verificación por índice."

#: matplotlib.widgets.CheckButtons.set_active:4
#: matplotlib.widgets.RadioButtons.set_active:4 of
msgid "Callbacks will be triggered if :attr:`eventson` is True."
msgstr "Las devoluciones de llamada se activarán si :attr:`eventson` es verdadero."

#: matplotlib.widgets.CheckButtons.set_active:13 of
msgid "**index**"
msgstr "**índice**"

#: matplotlib.widgets.RangeSlider:83
#: matplotlib.widgets.RangeSlider.on_changed:26 matplotlib.widgets.Slider:94
#: matplotlib.widgets.Slider.on_changed:26 of
msgid "int"
msgstr "int"

#: matplotlib.widgets.CheckButtons.set_active:9 of
msgid "Index of the check button to toggle."
msgstr "Índice del botón de verificación para alternar."

#: matplotlib.widgets.CheckButtons.set_active of
msgid "Raises"
msgstr "Plantea"

#: matplotlib.widgets.CheckButtons.set_active:26 of
msgid "ValueError"
msgstr "ValueError"

#: matplotlib.widgets.CheckButtons.set_active:18 of
msgid "If *index* is invalid."
msgstr "Si el *índice* no es válido."

#: matplotlib.widgets.Cursor:2 of
msgid "A crosshair cursor that spans the axes and moves with mouse cursor."
msgstr "Un cursor cruzado que abarca los ejes y se mueve con el cursor del ratón."

#: matplotlib.widgets.Cursor:4 matplotlib.widgets.EllipseSelector:4
#: matplotlib.widgets.MultiCursor:5 matplotlib.widgets.RectangleSelector:4 of
msgid "For the cursor to remain responsive you must keep a reference to it."
msgstr "Para que el cursor permanezca receptivo debe mantener una referencia a él."

#: matplotlib.widgets.Cursor:9 matplotlib.widgets.SpanSelector:17
#: matplotlib.widgets.ToolHandles:8 matplotlib.widgets.ToolLineHandles:8 of
msgid "**ax** : `matplotlib.axes.Axes`"
msgstr "**ax** : `matplotlib.axes.Axes`"

#: matplotlib.widgets.Cursor:8 matplotlib.widgets.SpanSelector:16
#: matplotlib.widgets.ToolHandles:7 matplotlib.widgets.ToolLineHandles:7 of
msgid "matplotlib.axes.Axes"
msgstr "matplotlib.axes.Axes"

#: matplotlib.widgets.Cursor:9 matplotlib.widgets.MultiCursor:13 of
msgid "The `~.axes.Axes` to attach the cursor to."
msgstr "El `~.axes.Axes` al que conectar el cursor."

#: matplotlib.widgets.Cursor:12 matplotlib.widgets.MultiCursor:19 of
msgid "**horizOn**"
msgstr "**horizonte**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.widgets.Cursor:12 matplotlib.widgets.MultiCursor:19 of
msgid "Whether to draw the horizontal line."
msgstr "Dibujar o no la línea horizontal."

#: matplotlib.widgets.Cursor:15 of
msgid "**vertOn**"
msgstr "**vertOn**"

#: matplotlib.widgets.Cursor:15 matplotlib.widgets.MultiCursor:22 of
msgid "Whether to draw the vertical line."
msgstr "Dibujar o no la línea vertical."

#: matplotlib.widgets.Cursor:21 matplotlib.widgets.EllipseSelector:35
#: matplotlib.widgets.Lasso:20 matplotlib.widgets.LassoSelector:33
#: matplotlib.widgets.MultiCursor:16 matplotlib.widgets.PolygonSelector:31
#: matplotlib.widgets.RectangleSelector:35 matplotlib.widgets.SpanSelector:35
#: matplotlib.widgets.ToolHandles:34 matplotlib.widgets.ToolLineHandles:34 of
msgid "**useblit**"
msgstr "**useblit**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.widgets.Cursor:18 matplotlib.widgets.MultiCursor:16 of
msgid "Use blitting for faster drawing if supported by the backend."
msgstr "Utilice flitting para dibujar más rápido si está soportado por el backend."

#: matplotlib.widgets.Cursor matplotlib.widgets.MultiCursor of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.widgets.Cursor:33 matplotlib.widgets.MultiCursor:37 of
msgid "**\\*\\*lineprops**"
msgstr "**\\*\\*\\*líneas**"

#: matplotlib.widgets.Cursor:26 matplotlib.widgets.MultiCursor:30 of
msgid "`.Line2D` properties that control the appearance of the lines. See also `~.Axes.axhline`."
msgstr "Propiedades `.Line2D` que controlan la apariencia de las líneas. Vea también `~.Axes.axhline`."

#: matplotlib.widgets.Cursor:36 matplotlib.widgets.EllipseSelector:97
#: matplotlib.widgets.MultiCursor:40 matplotlib.widgets.PolygonSelector:67
#: matplotlib.widgets.RectangleSelector:97 matplotlib.widgets.SpanSelector:85
#: of
msgid "Examples"
msgstr "Ejemplos"

#: matplotlib.widgets.Cursor:37 of
msgid "See :doc:`/gallery/widgets/cursor`."
msgstr "Ver :doc:`/gallery/widgets/cursor`."

#: matplotlib.widgets.Cursor.clear:2 of
msgid "Internal event handler to clear the cursor."
msgstr "Controlador interno de eventos para limpiar el cursor."

#: matplotlib.widgets.Cursor.onmove:2 of
msgid "Internal event handler to draw the cursor when the mouse moves."
msgstr "Controlador interno de eventos para dibujar el cursor cuando el ratón se mueve."

#: matplotlib.widgets.EllipseSelector:1 of
msgid "Bases: :py:class:`matplotlib.widgets.RectangleSelector`"
msgstr "Bases: :py:class:`matplotlib.widgets.RectangleSelector`"

#: matplotlib.widgets.EllipseSelector:2 of
msgid "Select an elliptical region of an axes."
msgstr "Selecciona una región elíptica de los ejes."

#: matplotlib.widgets.EllipseSelector:6 matplotlib.widgets.RectangleSelector:6
#: matplotlib.widgets.SpanSelector:10 of
msgid "Press and release events triggered at the same coordinates outside the selection will clear the selector, except when ``ignore_event_outside=True``."
msgstr "Los eventos de prensa y de liberación activados en las mismas coordenadas fuera de la selección borrarán el selector, excepto cuando ``ignore_event_outside=True``."

#: matplotlib.widgets.EllipseSelector:23 matplotlib.widgets.LassoSelector:29
#: matplotlib.widgets.PolygonSelector:27
#: matplotlib.widgets.RectangleSelector:23 matplotlib.widgets.SpanSelector:24
#: of
msgid "**onselect**"
msgstr "**onselect**"

#: of
msgid "function"
msgstr "función"

#: matplotlib.widgets.EllipseSelector:16
#: matplotlib.widgets.RectangleSelector:16 matplotlib.widgets.SpanSelector:20
#: of
msgid "A callback function that is called after a release event and the selection is created, changed or removed. It must have the signature::"
msgstr "Una función de callback que se llama después de un evento de lanzamiento y la selección es creada, cambiada o eliminada. Debe tener la firma::"

#: matplotlib.widgets.EllipseSelector:22
#: matplotlib.widgets.RectangleSelector:22 of
msgid "where *eclick* and *erelease* are the mouse click and release `.MouseEvent`\\s that start and complete the selection."
msgstr "donde *eclick* y *erelease* son el clic del ratón y suelta `.MouseEvent`\\s que comienzan y completan la selección."

#: matplotlib.widgets.EllipseSelector:27
#: matplotlib.widgets.RectangleSelector:27 of
msgid "**minspanx**"
msgstr "**minspanx**"

#: of
msgid "float, default: 0"
msgstr "float, default: 0"

#: matplotlib.widgets.EllipseSelector:26
#: matplotlib.widgets.RectangleSelector:26 of
msgid "Selections with an x-span less than or equal to *minspanx* are removed (when already existing) or cancelled."
msgstr "Las selecciones con un intervalo x menor o igual a *minspanx* son removidas (cuando ya existentes) o canceladas."

#: matplotlib.widgets.EllipseSelector:31
#: matplotlib.widgets.RectangleSelector:31 of
msgid "**minspany**"
msgstr "**minspany**"

#: matplotlib.widgets.EllipseSelector:30
#: matplotlib.widgets.RectangleSelector:30 of
msgid "Selections with an y-span less than or equal to *minspanx* are removed (when already existing) or cancelled."
msgstr "Las selecciones con un y-span menor o igual a *minspanx* se eliminan (cuando ya existe) o se cancelan."

#: matplotlib.widgets.EllipseSelector:34 matplotlib.widgets.Lasso:19
#: matplotlib.widgets.LassoSelector:32 matplotlib.widgets.PolygonSelector:30
#: matplotlib.widgets.RectangleSelector:34 matplotlib.widgets.ToolHandles:20
#: matplotlib.widgets.ToolLineHandles:20 of
msgid "Whether to use blitting for faster drawing (if supported by the backend)."
msgstr "Si se utiliza el parpadeo para un dibujo más rápido (si está soportado por el backend)."

#: matplotlib.widgets.EllipseSelector:42 matplotlib.widgets.LassoSelector:37
#: matplotlib.widgets.PolygonSelector:38
#: matplotlib.widgets.RectangleSelector:42 matplotlib.widgets.SpanSelector:41
#: of
msgid "**props**"
msgstr "**props**"

#: of
msgid "dict, optional"
msgstr "dict, optional"

#: matplotlib.widgets.EllipseSelector:38 of
msgid "Properties with which the ellipse is drawn. See `matplotlib.patches.Patch` for valid properties. Default:"
msgstr "Propiedades con las que se dibuja el ellipse. Vea `matplotlib.patches.Patch` para propiedades válidas. Por defecto:"

#: matplotlib.widgets.EllipseSelector:42
#: matplotlib.widgets.RectangleSelector:42 of
msgid "``dict(facecolor='red', edgecolor='black', alpha=0.2, fill=True)``"
msgstr "``dict(facecolor='rojo', edgecolor='black', alpha=0.2, fill=True)``"

#: matplotlib.widgets.EllipseSelector:46
#: matplotlib.widgets.RectangleSelector:46 of
msgid "**spancoords**"
msgstr "**spancoords**"

#: of
msgid "{\"data\", \"pixels\"}, default: \"data\""
msgstr "{\"data\", \"pixels\"}, por defecto: \"datos\""

#: matplotlib.widgets.EllipseSelector:45
#: matplotlib.widgets.RectangleSelector:45 of
msgid "Whether to interpret *minspanx* and *minspany* in data or in pixel coordinates."
msgstr "Si interpretar *minspanx* y *minspany* en datos o en coordenadas de píxeles."

#: matplotlib.widgets.EllipseSelector:49
#: matplotlib.widgets.RectangleSelector:49 of
msgid "**button** : `.MouseButton`, list of `.MouseButton`, default: all buttons"
msgstr "**botón** : `.MouseButton`, lista de `.MouseButton`, por defecto: todos los botones"

#: matplotlib.widgets.EllipseSelector:48
#: matplotlib.widgets.RectangleSelector:48 of
msgid "MouseButton, list of MouseButton, default: all buttons"
msgstr "MouseButton, lista de MouseButton, por defecto: todos los botones"

#: matplotlib.widgets.EllipseSelector:49
#: matplotlib.widgets.RectangleSelector:49 of
msgid "Button(s) that trigger rectangle selection."
msgstr "Botón(es) que activan la selección del rectángulo."

#: matplotlib.widgets.EllipseSelector:53 matplotlib.widgets.PolygonSelector:57
#: matplotlib.widgets.RectangleSelector:53 matplotlib.widgets.SpanSelector:64
#: of
msgid "**grab_range**"
msgstr "**grab_range**"

#: of
msgid "float, default: 10"
msgstr "float, por defecto: 10"

#: matplotlib.widgets.EllipseSelector:52
#: matplotlib.widgets.RectangleSelector:52 matplotlib.widgets.SpanSelector:63
#: of
msgid "Distance in pixels within which the interactive tool handles can be activated."
msgstr "Distancia en píxeles dentro de los cuales se puede activar la herramienta interactiva."

#: matplotlib.widgets.EllipseSelector:60 matplotlib.widgets.PolygonSelector:45
#: matplotlib.widgets.RectangleSelector:60 matplotlib.widgets.SpanSelector:60
#: of
msgid "**handle_props**"
msgstr "**handle_props**"

#: matplotlib.widgets.EllipseSelector:56
#: matplotlib.widgets.RectangleSelector:56 of
msgid "Properties with which the interactive handles (marker artists) are drawn. See the marker arguments in `matplotlib.lines.Line2D` for valid properties.  Default values are defined in ``mpl.rcParams`` except for the default value of ``markeredgecolor`` which will be the same as the ``edgecolor`` property in *props*."
msgstr "Propiedades con las que se dibujan los handles interactivos (artistas marcadores). Vea los argumentos del marcador en `matplotlib.lines.Line2D` para obtener propiedades válidas. Los valores por defecto se definen en ``mpl.rcParams`` excepto por el valor predeterminado de ``markeredgecolor`` que será el mismo que la propiedad ``edgecolor`` en *props*."

#: matplotlib.widgets.EllipseSelector:64
#: matplotlib.widgets.RectangleSelector:64 matplotlib.widgets.SpanSelector:52
#: of
msgid "**interactive**"
msgstr "**interactivo**"

#: matplotlib.widgets.EllipseSelector:63
#: matplotlib.widgets.RectangleSelector:63 matplotlib.widgets.SpanSelector:51
#: of
msgid "Whether to draw a set of handles that allow interaction with the widget after it is drawn."
msgstr "Si dibujar un conjunto de asas que permitan la interacción con el widget después de que se dibuje."

#: matplotlib.widgets.EllipseSelector:76
#: matplotlib.widgets.RectangleSelector:76 of
msgid "**state_modifier_keys**"
msgstr "**state_modifier_keys**"

#: matplotlib.widgets.EllipseSelector:67
#: matplotlib.widgets.RectangleSelector:67 of
msgid "Keyboard modifiers which affect the widget's behavior.  Values amend the defaults."
msgstr "Modificadores de teclado que afectan el comportamiento del widget. Los valores modifican los valores predeterminados."

#: matplotlib.widgets.EllipseSelector:70
#: matplotlib.widgets.RectangleSelector:70 of
msgid "\"move\": Move the existing shape, default: no modifier."
msgstr "\"move\": Mueva la forma existente, por defecto: no hay modificador."

#: matplotlib.widgets.EllipseSelector:71
#: matplotlib.widgets.RectangleSelector:71 of
msgid "\"clear\": Clear the current shape, default: \"escape\"."
msgstr "\"clear\": Borrar la forma actual, por defecto: \"escape\"."

#: matplotlib.widgets.EllipseSelector:72
#: matplotlib.widgets.RectangleSelector:72 of
msgid "\"square\": Make the shape square, default: \"shift\"."
msgstr "\"cuadrado\": Hacer el cuadrado de la forma, por defecto: \"shift\"."

#: matplotlib.widgets.EllipseSelector:73
#: matplotlib.widgets.RectangleSelector:73 of
msgid "\"center\": Make the initial point the center of the shape, default: \"ctrl\"."
msgstr "\"center\": Hacer el punto inicial el centro de la forma, por defecto: \"ctrl\"."

#: matplotlib.widgets.EllipseSelector:76
#: matplotlib.widgets.RectangleSelector:76 of
msgid "\"square\" and \"center\" can be combined."
msgstr "\"cuadrado\" y \"centro\" se pueden combinar."

#: matplotlib.widgets.EllipseSelector:80
#: matplotlib.widgets.RectangleSelector:80 matplotlib.widgets.SpanSelector:68
#: of
msgid "**drag_from_anywhere**"
msgstr "**drag_de_cualquier lugar**"

#: matplotlib.widgets.EllipseSelector:79
#: matplotlib.widgets.RectangleSelector:79 matplotlib.widgets.SpanSelector:67
#: of
msgid "If `True`, the widget can be moved by clicking anywhere within its bounds."
msgstr "Si es `Verdadero`, el widget se puede mover haciendo clic en cualquier lugar dentro de sus límites."

#: matplotlib.widgets.EllipseSelector:94
#: matplotlib.widgets.RectangleSelector:94 matplotlib.widgets.SpanSelector:82
#: of
msgid "**ignore_event_outside**"
msgstr "**ignorar_evento**"

#: matplotlib.widgets.EllipseSelector:83
#: matplotlib.widgets.RectangleSelector:83 matplotlib.widgets.SpanSelector:71
#: of
msgid "If `True`, the event triggered outside the span selector will be ignored."
msgstr "Si es `True`, el evento activado fuera del selector de span será ignorado."

#: matplotlib.widgets.EllipseSelector:98 of
msgid ":doc:`/gallery/widgets/rectangle_selector`"
msgstr ":doc:`/gallery/widgets/rectangle_selector`"

#: matplotlib.widgets.Lasso:2 matplotlib.widgets.LassoSelector:2 of
msgid "Selection curve of an arbitrary shape."
msgstr "Curva de selección de una forma arbitraria."

#: matplotlib.widgets.Lasso:4 of
msgid "The selected path can be used in conjunction with `~matplotlib.path.Path.contains_point` to select data points from an image."
msgstr "La ruta seleccionada puede utilizarse junto con `~matplotlib.path.Path.contains_point` para seleccionar los puntos de datos de una imagen."

#: matplotlib.widgets.Lasso:7 of
msgid "Unlike `LassoSelector`, this must be initialized with a starting point *xy*, and the `Lasso` events are destroyed upon release."
msgstr "A diferencia de `LassoSelector`, esto debe inicializarse con un punto de partida *xy*, y los eventos `Lasso` son destruidos al lanzarse."

#: matplotlib.widgets.Lasso:16 of
msgid "**xy**"
msgstr "**xy**"

#: of
msgid "(float, float)"
msgstr "(float, float)"

#: matplotlib.widgets.Lasso:16 of
msgid "Coordinates of the start of the lasso."
msgstr "Coordenadas del inicio del lasso."

#: matplotlib.widgets.Lasso:37 of
msgid "**callback**"
msgstr "**callback**"

#: of
msgid "callable"
msgstr "llamable"

#: matplotlib.widgets.Lasso:23 of
msgid "Whenever the lasso is released, the *callback* function is called and passed the vertices of the selected path."
msgstr "Cuando el lasso es liberado, la función *callback* es llamada y pasada los vértices de la ruta seleccionada."

#: matplotlib.widgets.LassoSelector:1 matplotlib.widgets.PolygonSelector:1
#: matplotlib.widgets.RectangleSelector:1 matplotlib.widgets.SpanSelector:1 of
msgid "Bases: :py:class:`matplotlib.widgets._SelectorWidget`"
msgstr "Bases: :py:class:`matplotlib.widgets._SelectorWidget`"

#: matplotlib.widgets.LassoSelector:4 matplotlib.widgets.PolygonSelector:17 of
msgid "For the selector to remain responsive you must keep a reference to it."
msgstr "Para que el selector siga respondiendo debe mantener una referencia a él."

#: matplotlib.widgets.LassoSelector:6 of
msgid "The selected path can be used in conjunction with `~.Path.contains_point` to select data points from an image."
msgstr "La ruta seleccionada puede utilizarse junto con `~.Path.contains_point` para seleccionar los puntos de datos de una imagen."

#: matplotlib.widgets.LassoSelector:9 of
msgid "In contrast to `Lasso`, `LassoSelector` is written with an interface similar to `RectangleSelector` and `SpanSelector`, and will continue to interact with the axes until disconnected."
msgstr "A diferencia de `Lasso`, `LassoSelector` se escribe con una interfaz similar a `RectangleSelector` y `SpanSelector`, y continuará interactuando con los ejes hasta que se desconecte."

#: matplotlib.widgets.LassoSelector:13 of
msgid "Example usage::"
msgstr "Ejemplo de uso::"

#: matplotlib.widgets.LassoSelector:28 of
msgid "Whenever the lasso is released, the *onselect* function is called and passed the vertices of the selected path."
msgstr "Cuando el lasso es liberado, la función *onselect* es llamada y pasada los vértices de la ruta seleccionada."

#: matplotlib.widgets.LassoSelector:36 of
msgid "Properties with which the line is drawn, see `matplotlib.lines.Line2D` for valid properties. Default values are defined in ``mpl.rcParams``."
msgstr "Propiedades con las que se dibuja la línea, vea `matplotlib.lines.Line2D` para propiedades válidas. Los valores por defecto se definen en ``mpl.rcParams``."

#: matplotlib.widgets.LassoSelector:54 of
msgid "**button** : `.MouseButton` or list of `.MouseButton`, optional"
msgstr "**botón** : `.MouseButton` o lista de `.MouseButton`, opcional"

#: matplotlib.widgets.LassoSelector:53 of
msgid "MouseButton or list of MouseButton, optional"
msgstr "MouseButton o lista de MouseButton, opcional"

#: matplotlib.widgets.LassoSelector:40 of
msgid "The mouse buttons used for rectangle selection.  Default is ``None``, which corresponds to all buttons."
msgstr "Los botones del ratón utilizados para la selección del rectángulo. Por defecto es ``Ninguno``, que corresponde a todos los botones."

#: matplotlib.widgets.LassoSelector.onpress:2
#: matplotlib.widgets.LassoSelector.onrelease:2 of
msgid "[*Deprecated*]"
msgstr "[*Deprecated*]"

#: matplotlib.widgets.LassoSelector.onpress:15
#: matplotlib.widgets.LassoSelector.onrelease:15
#: matplotlib.widgets.PolygonSelector:60 matplotlib.widgets.RangeSlider:99
#: matplotlib.widgets.Slider:110 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.widgets.LassoSelector.onpress:16
#: matplotlib.widgets.LassoSelector.onrelease:16 of
msgid "\\"
msgstr "\\"

#: matplotlib.widgets.LockDraw:1 matplotlib.widgets.ToolHandles:1
#: matplotlib.widgets.ToolLineHandles:1 matplotlib.widgets.Widget:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.widgets.LockDraw:2 of
msgid "Some widgets, like the cursor, draw onto the canvas, and this is not desirable under all circumstances, like when the toolbar is in zoom-to-rect mode and drawing a rectangle.  To avoid this, a widget can acquire a canvas' lock with ``canvas.widgetlock(widget)`` before drawing on the canvas; this will prevent other widgets from doing so at the same time (if they also try to acquire the lock first)."
msgstr "Algunos widgets, como el cursor, dibujan en el lienzo, y esto no es deseable en todas las circunstancias. como cuando la barra de herramientas está en modo zoom-to-rect y dibuja un rectángulo. Para evitar esto, un widget puede adquirir un candado de lienzo con ``lienzo. idgetlock(widget)`` antes de dibujar en el lienzo; esto evitará que otros widgets lo hagan al mismo tiempo (si también tratan de adquirir el bloqueo primero)."

#: matplotlib.widgets.LockDraw.available:2 of
msgid "Return whether drawing is available to *o*."
msgstr "Devuelve si el dibujo está disponible a *o*."

#: matplotlib.widgets.LockDraw.isowner:2 of
msgid "Return whether *o* owns this lock."
msgstr "Devuelve si *o* es propietario de este bloqueo."

#: matplotlib.widgets.LockDraw.locked:2 of
msgid "Return whether the lock is currently held by an owner."
msgstr "Devuelve si el bloqueo está actualmente en manos de un propietario."

#: matplotlib.widgets.LockDraw.release:2 of
msgid "Release the lock from *o*."
msgstr "Libera el bloqueo de *o*."

#: matplotlib.widgets.MultiCursor:2 of
msgid "Provide a vertical (default) and/or horizontal line cursor shared between multiple axes."
msgstr "Proporciona un cursor vertical (por defecto) y/o línea horizontal compartida entre múltiples ejes."

#: matplotlib.widgets.MultiCursor:10 of
msgid "**canvas** : `matplotlib.backend_bases.FigureCanvasBase`"
msgstr "**canvas** : `matplotlib.backend_bases.FigureCanvasBase`"

#: matplotlib.widgets.MultiCursor:9 of
msgid "matplotlib.backend_bases.FigureCanvasBase"
msgstr "matplotlib.backend_bases.FigureCanvasBase"

#: matplotlib.widgets.MultiCursor:10 of
msgid "The FigureCanvas that contains all the axes."
msgstr "El FigureCanvas que contiene todos los ejes."

#: matplotlib.widgets.MultiCursor:13 of
msgid "**axes** : list of `matplotlib.axes.Axes`"
msgstr "**ejes** : lista de `matplotlib.axes.Axes`"

#: matplotlib.widgets.MultiCursor:25 of
msgid "**vertOn: bool, default: True**"
msgstr "**vertOn: bool, por defecto: True**"

#: matplotlib.widgets.MultiCursor:41 of
msgid "See :doc:`/gallery/widgets/multicursor`."
msgstr "Ver :doc:`/gallery/widgets/multicursor`."

#: matplotlib.widgets.MultiCursor.clear:2 of
msgid "Clear the cursor."
msgstr "Limpia el cursor."

#: matplotlib.widgets.MultiCursor.connect:2 of
msgid "Connect events."
msgstr "Conectar eventos."

#: matplotlib.widgets.MultiCursor.disconnect:2 of
msgid "Disconnect events."
msgstr "Desconectar eventos."

#: matplotlib.widgets.PolygonSelector:2 of
msgid "Select a polygon region of an axes."
msgstr "Selecciona una región de polígono de un eje."

#: matplotlib.widgets.PolygonSelector:4 of
msgid "Place vertices with each mouse click, and make the selection by completing the polygon (clicking on the first vertex). Once drawn individual vertices can be moved by clicking and dragging with the left mouse button, or removed by clicking the right mouse button."
msgstr "Coloca los vértices con cada clic del ratón y realiza la selección completando el polígono (haciendo clic en el primer vértice). Una vez dibujados los vértices individuales pueden moverse haciendo clic y arrastrando con el botón izquierdo del ratón, o eliminándose haciendo clic en el botón derecho del ratón."

#: matplotlib.widgets.PolygonSelector:9 of
msgid "In addition, the following modifier keys can be used:"
msgstr "Además, se pueden utilizar las siguientes teclas modificadoras:"

#: matplotlib.widgets.PolygonSelector:11 of
msgid "Hold *ctrl* and click and drag a vertex to reposition it before the polygon has been completed."
msgstr "Mantenga pulsado *ctrl* y haga clic y arrastre un vértice para reposicionarlo antes de que el polígono haya sido completado."

#: matplotlib.widgets.PolygonSelector:13 of
msgid "Hold the *shift* key and click and drag anywhere in the axes to move all vertices."
msgstr "Mantenga presionada la tecla *Mayar* y haga clic y arrastre a cualquier lugar en los ejes para mover todos los vértices."

#: matplotlib.widgets.PolygonSelector:15 of
msgid "Press the *esc* key to start a new polygon."
msgstr "Pulse la tecla *esc* para iniciar un nuevo polígono."

#: matplotlib.widgets.PolygonSelector:25 of
msgid "When a polygon is completed or modified after completion, the *onselect* function is called and passed a list of the vertices as ``(xdata, ydata)`` tuples."
msgstr "Cuando un polígono se completa o modifica después de completarse, se llama a la función *onselect* y se le pasa una lista de los vértices como tubos ``(xdata, ydata)``."

#: matplotlib.widgets.PolygonSelector:34 of
msgid "Properties with which the line is drawn, see `matplotlib.lines.Line2D` for valid properties. Default:"
msgstr "Propiedades con las que se dibuja la línea, vea `matplotlib.lines.Line2D` para propiedades válidas. Por defecto:"

#: matplotlib.widgets.PolygonSelector:38 of
msgid "``dict(color='k', linestyle='-', linewidth=2, alpha=0.5)``"
msgstr "``dict(color='k', linestyle='-', linewidth=2, alpha=0.5)``"

#: matplotlib.widgets.PolygonSelector:41 of
msgid "Artist properties for the markers drawn at the vertices of the polygon. See the marker arguments in `matplotlib.lines.Line2D` for valid properties.  Default values are defined in ``mpl.rcParams`` except for the default value of ``markeredgecolor`` which will be the same as the ``color`` property in *props*."
msgstr "Propiedades del artista para los marcadores dibujados en los vértices del polígono. Vea los argumentos del marcador en `matplotlib.lines.Line2D` para obtener propiedades válidas. Los valores por defecto se definen en ``mpl.rcParams`` excepto por el valor predeterminado de ``markeredgecolor`` que será el mismo que la propiedad ``color`` en *props*."

#: matplotlib.widgets.PolygonSelector:48 of
msgid "A vertex is selected (to complete the polygon or to move a vertex) if the mouse click is within *grab_range* pixels of the vertex."
msgstr "Se selecciona un vértice (para completar el polígono o mover un vértice) si el ratón hace clic está dentro de píxeles de *grab_rango* del vértice."

#: matplotlib.widgets.PolygonSelector:61 of
msgid "If only one point remains after removing points, the selector reverts to an incomplete state and you can start drawing a new polygon from the existing point."
msgstr "Si sólo queda un punto después de eliminar puntos, el selector se revierte a un estado incompleto y puedes empezar a dibujar un nuevo polígono desde el punto existente."

#: matplotlib.widgets.PolygonSelector:68 of
msgid ":doc:`/gallery/widgets/polygon_selector_demo`"
msgstr ":doc:`/gallery/widgets/polygon_selector_demo`"

#: matplotlib.widgets.PolygonSelector.onmove:2 of
msgid "Cursor move event handler and validator."
msgstr "Cursor mueve el controlador de eventos y validador."

#: matplotlib.widgets.PolygonSelector.verts:2 of
msgid "The polygon vertices, as a list of ``(x, y)`` pairs."
msgstr "Los vértices poligonales, como una lista de pares ``(x, y)``."

#: matplotlib.widgets.RadioButtons:2 of
msgid "A GUI neutral radio button."
msgstr "Un botón de radio GUI neutral."

#: matplotlib.widgets.RadioButtons:4 of
msgid "For the buttons to remain responsive you must keep a reference to this object."
msgstr "Para que los botones permanezcan receptivos debe guardar una referencia a este objeto."

#: matplotlib.widgets.RadioButtons:7 of
msgid "Connect to the RadioButtons with the `.on_clicked` method."
msgstr "Conéctate al RadioButtons con el método `.on_clicked`."

#: matplotlib.widgets.RadioButtons:27 matplotlib.widgets.RadioButtons:71 of
msgid "**activecolor**"
msgstr "**activecolor**"

#: matplotlib.widgets.RadioButtons:27 matplotlib.widgets.RadioButtons:58 of
msgid "The color of the selected button."
msgstr "El color del botón seleccionado."

#: matplotlib.widgets.RadioButtons:30 matplotlib.widgets.RadioButtons:52 of
msgid "The button labels."
msgstr "Las etiquetas del botón."

#: matplotlib.widgets.RadioButtons:33 of
msgid "**circles** : list of `~.patches.Circle`"
msgstr "**circulos** : lista de `~.patches.Circle`"

#: matplotlib.widgets.RadioButtons:33 of
msgid "The buttons."
msgstr "Los botones."

#: matplotlib.widgets.RadioButtons:37 of
msgid "**value_selected**"
msgstr "**valor_seleccionado**"

#: matplotlib.widgets.RadioButtons:36 of
msgid "The label text of the currently selected button."
msgstr "El texto de la etiqueta del botón seleccionado actualmente."

#: matplotlib.widgets.RadioButtons:43 of
msgid "Add radio buttons to an `~.axes.Axes`."
msgstr "Añade botones de radio a un `~.axes.Axes`."

#: matplotlib.widgets.RadioButtons:49 of
msgid "The axes to add the buttons to."
msgstr "Los ejes a los que añadir los botones."

#: matplotlib.widgets.RadioButtons:55 of
msgid "**active**"
msgstr "**activo**"

#: matplotlib.widgets.RadioButtons:55 of
msgid "The index of the initially selected button."
msgstr "El índice del botón seleccionado inicialmente."

#: matplotlib.widgets.RadioButtons.set_active:2 of
msgid "Select button with number *index*."
msgstr "Seleccione el botón con el número *índice*."

#: matplotlib.widgets.RangeSlider:1 matplotlib.widgets.Slider:1 of
msgid "Bases: :py:class:`matplotlib.widgets.SliderBase`"
msgstr "Bases: :py:class:`matplotlib.widgets.SliderBase`"

#: matplotlib.widgets.RangeSlider:2 of
msgid "A slider representing a range of floating point values. Defines the min and max of the range via the *val* attribute as a tuple of (min, max)."
msgstr "Un deslizador que representa un rango de valores de punto flotante. Define el mínimo y máximo del rango mediante el atributo *val* como una tupla de (min, max)."

#: matplotlib.widgets.RangeSlider:5 of
msgid "Create a slider that defines a range contained within [*valmin*, *valmax*] in axes *ax*. For the slider to remain responsive you must maintain a reference to it. Call :meth:`on_changed` to connect to the slider event."
msgstr "Crea un deslizador que defina un rango contenido dentro de [*valmin*, *valmax*] en los ejes *ax*. Para que el deslizador siga respondiendo debes mantener una referencia a él. Llama a :meth:`on_changed` para conectarte al evento deslizador."

#: matplotlib.widgets.RangeSlider:25 matplotlib.widgets.RangeSlider.set_val:21
#: matplotlib.widgets.Slider:24 matplotlib.widgets.Slider.set_val:21 of
msgid "**val**"
msgstr "**val**"

#: of
msgid "tuple of float"
msgstr "tupla de flotante"

#: matplotlib.widgets.RangeSlider:24 matplotlib.widgets.Slider:23 of
msgid "Slider value."
msgstr "Valor deslizante."

#: matplotlib.widgets.RangeSlider:37 matplotlib.widgets.Slider:36 of
msgid "The Axes to put the slider in."
msgstr "Los ejes para colocar el deslizador."

#: matplotlib.widgets.RangeSlider:40 matplotlib.widgets.Slider:39 of
msgid "Slider label."
msgstr "Slider etiqueta."

#: matplotlib.widgets.RangeSlider:43 matplotlib.widgets.Slider:42 of
msgid "**valmin**"
msgstr "**valmin**"

#: of
msgid "float"
msgstr "float"

#: matplotlib.widgets.RangeSlider:43 matplotlib.widgets.Slider:42 of
msgid "The minimum value of the slider."
msgstr "El valor mínimo del deslizador."

#: matplotlib.widgets.RangeSlider:46 matplotlib.widgets.Slider:45 of
msgid "**valmax**"
msgstr "**valmax**"

#: matplotlib.widgets.RangeSlider:46 matplotlib.widgets.Slider:45 of
msgid "The maximum value of the slider."
msgstr "El valor máximo del deslizador."

#: matplotlib.widgets.RangeSlider:50 matplotlib.widgets.Slider:48 of
msgid "**valinit**"
msgstr "**valinit**"

#: of
msgid "tuple of float or None, default: None"
msgstr "tuple de flotante o ninguno, por defecto: Ninguno"

#: matplotlib.widgets.RangeSlider:49 of
msgid "The initial positions of the slider. If None the initial positions will be at the 25th and 75th percentiles of the range."
msgstr "Las posiciones iniciales del deslizador. Si ninguna de las posiciones iniciales estará en los percentiles 25 y 75 del rango."

#: matplotlib.widgets.RangeSlider:54 matplotlib.widgets.Slider:52 of
msgid "**valfmt**"
msgstr "**valfmt**"

#: of
msgid "str, default: None"
msgstr "str, por defecto: ninguno"

#: matplotlib.widgets.RangeSlider:53 of
#, python-format
msgid "%-format string used to format the slider values.  If None, a `.ScalarFormatter` is used instead."
msgstr "%-fcadena ormat utilizada para formatear los valores del deslizador. Si no, se utiliza un `.ScalarFormatter` en su lugar."

#: matplotlib.widgets.RangeSlider:57 matplotlib.widgets.Slider:55 of
msgid "**closedmin**"
msgstr "**closedmin**"

#: matplotlib.widgets.RangeSlider:57 matplotlib.widgets.Slider:55 of
msgid "Whether the slider interval is closed on the bottom."
msgstr "Si el intervalo deslizante está cerrado en la parte inferior."

#: matplotlib.widgets.RangeSlider:60 matplotlib.widgets.Slider:58 of
msgid "**closedmax**"
msgstr "**closedmax**"

#: matplotlib.widgets.RangeSlider:60 matplotlib.widgets.Slider:58 of
msgid "Whether the slider interval is closed on the top."
msgstr "Si el intervalo deslizante está cerrado en la parte superior."

#: matplotlib.widgets.RangeSlider:63 matplotlib.widgets.Slider:69 of
msgid "**dragging**"
msgstr "**arrastrando**"

#: matplotlib.widgets.RangeSlider:63 matplotlib.widgets.Slider:69 of
msgid "If True the slider can be dragged by the mouse."
msgstr "Si es Verdadero el deslizador puede ser arrastrado por el ratón."

#: matplotlib.widgets.RangeSlider:66 matplotlib.widgets.Slider:73 of
msgid "**valstep**"
msgstr "**valstep**"

#: of
msgid "float, default: None"
msgstr "float, default: None"

#: matplotlib.widgets.RangeSlider:66 of
msgid "If given, the slider will snap to multiples of *valstep*."
msgstr "Si se proporciona, el deslizador se deslizará a múltiplos de *valstep*."

#: matplotlib.widgets.RangeSlider:69 matplotlib.widgets.Slider:76 of
msgid "**orientation**"
msgstr "**orientación**"

#: of
msgid "{'horizontal', 'vertical'}, default: 'horizontal'"
msgstr "{'horizontal', 'vertical'}, por defecto: 'horizontal'"

#: matplotlib.widgets.RangeSlider:69 matplotlib.widgets.Slider:76 of
msgid "The orientation of the slider."
msgstr "La orientación del deslizador."

#: matplotlib.widgets.RangeSlider:73 matplotlib.widgets.Slider:84 of
msgid "**track_color**"
msgstr "**pista_color**"

#: of
msgid "color, default: 'lightgrey'"
msgstr "color, por defecto: 'gris claro'"

#: matplotlib.widgets.RangeSlider:72 matplotlib.widgets.Slider:83 of
msgid "The color of the background track. The track is accessible for further styling via the *track* attribute."
msgstr "El color de la pista de fondo. La pista es accesible para un mayor estilo a través del atributo *track*."

#: matplotlib.widgets.RangeSlider:96 matplotlib.widgets.Slider:107 of
msgid "**handle_style**"
msgstr "**handle_style**"

#: of
msgid "dict"
msgstr "dict"

#: matplotlib.widgets.RangeSlider:76 of
msgid "Properties of the slider handles. Default values are"
msgstr "Propiedades del manejador deslizante. Los valores por defecto son"

#: matplotlib.widgets.RangeSlider:79 matplotlib.widgets.Slider:90 of
msgid "Key"
msgstr "Clave"

#: matplotlib.widgets.RangeSlider:79 matplotlib.widgets.Slider:90 of
msgid "Value"
msgstr "Valor"

#: matplotlib.widgets.RangeSlider:79 matplotlib.widgets.Slider:90 of
msgid "Default"
msgstr "Por defecto"

#: matplotlib.widgets.RangeSlider:79 matplotlib.widgets.Slider:90 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.widgets.RangeSlider:81 matplotlib.widgets.Slider:92 of
msgid "facecolor"
msgstr "color cara"

#: matplotlib.widgets.RangeSlider:81 matplotlib.widgets.Slider:92 of
msgid "'white'"
msgstr "'blanco'"

#: matplotlib.widgets.RangeSlider:81 of
msgid "The facecolor of the slider handles."
msgstr "El color de cara del deslizador."

#: matplotlib.widgets.RangeSlider:82 matplotlib.widgets.Slider:93 of
msgid "edgecolor"
msgstr "color bordes"

#: matplotlib.widgets.RangeSlider:82 matplotlib.widgets.Slider:93 of
msgid "'.75'"
msgstr "'.75'"

#: matplotlib.widgets.RangeSlider:82 of
msgid "The edgecolor of the slider handles."
msgstr "El color del borde del deslizador."

#: matplotlib.widgets.RangeSlider:83 matplotlib.widgets.Slider:94 of
msgid "size"
msgstr "tamaño"

#: matplotlib.widgets.RangeSlider:83 matplotlib.widgets.Slider:94 of
msgid "10"
msgstr "10"

#: matplotlib.widgets.RangeSlider:83 of
msgid "The size of the slider handles in points."
msgstr "El tamaño del deslizador maneja en puntos."

#: matplotlib.widgets.RangeSlider:86 matplotlib.widgets.Slider:97 of
msgid "Other values will be transformed as marker{foo} and passed to the `~.Line2D` constructor. e.g. ``handle_style = {'style'='x'}`` will result in ``markerstyle = 'x'``."
msgstr "Otros valores se transformarán como marcador{foo} y se pasarán al constructor `~.Line2D`. ej. ``handle_style = {'style'='x'}`` resultará en ``markerstyle = 'x'``."

#: matplotlib.widgets.RangeSlider:100 matplotlib.widgets.Slider:111 of
msgid "Additional kwargs are passed on to ``self.poly`` which is the `~matplotlib.patches.Polygon` that draws the slider knob.  See the `.Polygon` documentation for valid property names (``facecolor``, ``edgecolor``, ``alpha``, etc.)."
msgstr "Los kwargs adicionales se pasan a ``self.poly`` que es el `~matplotlib.patches.Polygon` que dibuja el knob deslizador. Vea la documentación `.Polygon` para nombres de propiedades válidos (``facecolor``, ``edgecolor``, ``alpha``, etc.)."

#: matplotlib.widgets.RangeSlider.on_changed:2
#: matplotlib.widgets.Slider.on_changed:2 of
msgid "Connect *func* as callback function to changes of the slider value."
msgstr "Conecte *función* como función de callback a los cambios del valor del deslizador."

#: matplotlib.widgets.RangeSlider.on_changed:9
#: matplotlib.widgets.Slider.on_changed:9 of
msgid "**func**"
msgstr "**func**"

#: matplotlib.widgets.RangeSlider.on_changed:8 of
msgid "Function to call when slider is changed. The function must accept a numpy array with shape (2,) as its argument."
msgstr "Función para llamar cuando se cambia el deslizador. La función debe aceptar una matriz numpy con la forma (2,) como su argumento."

#: matplotlib.widgets.RangeSlider.on_changed
#: matplotlib.widgets.Slider.on_changed
#: matplotlib.widgets.ToolLineHandles.closest of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.widgets.RangeSlider.on_changed:14
#: matplotlib.widgets.Slider.on_changed:14 of
msgid "Connection id (which can be used to disconnect *func*)."
msgstr "Id de conexión (que puede ser usado para desconectar *func*)."

#: matplotlib.widgets.RangeSlider.set_max:2 of
msgid "Set the lower value of the slider to *max*."
msgstr "Establezca el valor más bajo del deslizador a *max*."

#: matplotlib.widgets.RangeSlider.set_max:21 of
msgid "**max**"
msgstr "**máx**"

#: matplotlib.widgets.RangeSlider.set_min:2 of
msgid "Set the lower value of the slider to *min*."
msgstr "Establezca el valor más bajo del deslizador a *min*."

#: matplotlib.widgets.RangeSlider.set_min:21 of
msgid "**min**"
msgstr "**min**"

#: matplotlib.widgets.RangeSlider.set_val:2 matplotlib.widgets.Slider.set_val:2
#: of
msgid "Set slider value to *val*."
msgstr "Establece el valor del deslizador a *val*."

#: of
msgid "tuple or array-like of float"
msgstr "tuple o tipo matriz de flotante"

#: matplotlib.widgets.RectangleSelector:2 of
msgid "Select a rectangular region of an axes."
msgstr "Selecciona una región rectangular de los ejes."

#: matplotlib.widgets.RectangleSelector:38 of
msgid "Properties with which the rectangle is drawn. See `matplotlib.patches.Patch` for valid properties. Default:"
msgstr "Propiedades con las que se dibuja el rectángulo. Ver `matplotlib.patches.Patch` para propiedades válidas. Por defecto:"

#: matplotlib.widgets.RectangleSelector:110 of
msgid "See also: :doc:`/gallery/widgets/rectangle_selector`"
msgstr "Ver también: :doc:`/gallery/widgets/rectangle_selector`"

#: matplotlib.widgets.RectangleSelector.center:2 of
msgid "Center of rectangle."
msgstr "Centro de rectángulo."

#: matplotlib.widgets.RectangleSelector.corners:2 of
msgid "Corners of rectangle from lower left, moving clockwise."
msgstr "Esquinas del rectángulo desde la parte inferior izquierda, moviendo hacia las agujas del reloj."

#: matplotlib.widgets.RectangleSelector.edge_centers:2 of
msgid "Midpoint of rectangle edges from left, moving anti-clockwise."
msgstr "Medio punto de los bordes del rectángulo de la izquierda, moviéndose en sentido anti-reloj."

#: matplotlib.widgets.RectangleSelector.extents:2 of
msgid "Return (xmin, xmax, ymin, ymax)."
msgstr "Retorna (xmin, xmax, ymin, ymax)."

#: matplotlib.widgets.RectangleSelector.geometry:2 of
msgid "Return an array of shape (2, 5) containing the x (``RectangleSelector.geometry[1, :]``) and y (``RectangleSelector.geometry[0, :]``) coordinates of the four corners of the rectangle starting and ending in the top left corner."
msgstr "Devuelve una matriz de forma (2, 5) que contiene la x (``RectangleSelector.geometry[1, :]``) y y (``RectangleSelector. coordenadas eometry[0, :]``) de las cuatro esquinas del rectángulo que comienzan y terminan en la esquina superior izquierda."

#: matplotlib.widgets.Slider:2 of
msgid "A slider representing a floating point range."
msgstr "Un deslizador que representa un rango de punto flotante."

#: matplotlib.widgets.Slider:4 of
msgid "Create a slider from *valmin* to *valmax* in axes *ax*. For the slider to remain responsive you must maintain a reference to it. Call :meth:`on_changed` to connect to the slider event."
msgstr "Crea un deslizador de *valmin* a *valmax* en los ejes *ax*. Para que el deslizador permanezca receptivo, debes mantener una referencia a él. Llama a :meth:`on_changed` para conectar al evento deslizador."

#: of
msgid "float, default: 0.5"
msgstr "float, default: 0.5"

#: matplotlib.widgets.Slider:48 of
msgid "The slider initial position."
msgstr "La posición inicial del deslizador."

#: matplotlib.widgets.Slider:51 of
#, python-format
msgid "%-format string used to format the slider value.  If None, a `.ScalarFormatter` is used instead."
msgstr "%-fcadena ormat utilizada para formatear el valor del deslizador. Si no, se utiliza un `.ScalarFormatter` en su lugar."

#: matplotlib.widgets.Slider:62 of
msgid "**slidermin**"
msgstr "**deslizante**"

#: of
msgid "Slider, default: None"
msgstr "Slider, predeterminado: ninguno"

#: matplotlib.widgets.Slider:61 of
msgid "Do not allow the current slider to have a value less than the value of the Slider *slidermin*."
msgstr "No permita que el deslizador actual tenga un valor menor que el del deslizador *deslizador*."

#: matplotlib.widgets.Slider:66 of
msgid "**slidermax**"
msgstr "**slidermax**"

#: matplotlib.widgets.Slider:65 of
msgid "Do not allow the current slider to have a value greater than the value of the Slider *slidermax*."
msgstr "No permita que el deslizador actual tenga un valor mayor que el valor del deslizador *slidermax*."

#: of
msgid "float or array-like, default: None"
msgstr "flotante o tipo matriz: Ninguno"

#: matplotlib.widgets.Slider:72 of
msgid "If a float, the slider will snap to multiples of *valstep*. If an array the slider will snap to the values in the array."
msgstr "Si es un float, el deslizador se deslizará a múltiples de *valstep*. Si es una matriz, el deslizador se ajustará a los valores de la matriz."

#: matplotlib.widgets.Slider:80 of
msgid "**initcolor**"
msgstr "**initcolor**"

#: of
msgid "color, default: 'r'"
msgstr "color, predeterminado: 'r'"

#: matplotlib.widgets.Slider:79 of
msgid "The color of the line at the *valinit* position. Set to ``'none'`` for no line."
msgstr "El color de la línea en la posición *valinit*. Establecer en ``'ninguno '`` para ninguna línea."

#: matplotlib.widgets.Slider:87 of
msgid "Properties of the slider handle. Default values are"
msgstr "Propiedades del manejador deslizante. Los valores por defecto son"

#: matplotlib.widgets.Slider:92 of
msgid "The facecolor of the slider handle."
msgstr "El color de cara de la asa deslizante."

#: matplotlib.widgets.Slider:93 of
msgid "The edgecolor of the slider handle."
msgstr "El color del borde de la asa deslizante."

#: matplotlib.widgets.Slider:94 of
msgid "The size of the slider handle in points."
msgstr "Tamaño del control deslizante en puntos."

#: matplotlib.widgets.Slider.on_changed:8 of
msgid "Function to call when slider is changed. The function must accept a single float as its arguments."
msgstr "Función para llamar cuando se cambia el deslizador. La función debe aceptar un solo flotante como sus argumentos."

#: matplotlib.widgets.SliderBase:2 of
msgid "The base class for constructing Slider widgets. Not intended for direct usage."
msgstr "La clase base para construir widgets Slider. No está destinada al uso directo."

#: matplotlib.widgets.SliderBase:5 of
msgid "For the slider to remain responsive you must maintain a reference to it."
msgstr "Para que el deslizador siga respondiendo debe mantener una referencia a él."

#: matplotlib.widgets.SliderBase.disconnect:21 of
msgid "**cid**"
msgstr "**cid**"

#: matplotlib.widgets.SliderBase.disconnect:8 of
msgid "Connection id of the observer to be removed."
msgstr "Id de conexión del observador a ser eliminado."

#: matplotlib.widgets.SliderBase.reset:2 of
msgid "Reset the slider to the initial value."
msgstr "Restablecer el deslizador al valor inicial."

#: matplotlib.widgets.SpanSelector:2 of
msgid "Visually select a min/max range on a single axis and call a function with those values."
msgstr "Seleccione visualmente un rango min/max en un solo eje y llame a una función con esos valores."

#: matplotlib.widgets.SpanSelector:5 of
msgid "To guarantee that the selector remains responsive, keep a reference to it."
msgstr "Para garantizar que el selector siga respondiendo, mantenga una referencia a él."

#: matplotlib.widgets.SpanSelector:7 of
msgid "In order to turn off the SpanSelector, set ``span_selector.active`` to False.  To turn it back on, set it to True."
msgstr "Para desactivar SpanSelector, establece ``span_selector.active`` a False. Para volver a activarlo, pon True."

#: matplotlib.widgets.SpanSelector:27 matplotlib.widgets.ToolLineHandles:14 of
msgid "**direction**"
msgstr "**dirección**"

#: of
msgid "{\"horizontal\", \"vertical\"}"
msgstr "{\"horizontal\", \"vertical\"}"

#: matplotlib.widgets.SpanSelector:27 of
msgid "The direction along which to draw the span selector."
msgstr "La dirección a lo largo de la cual dibujar el selector de la extensión."

#: matplotlib.widgets.SpanSelector:31 of
msgid "**minspan**"
msgstr "**minspan**"

#: matplotlib.widgets.SpanSelector:30 of
msgid "If selection is less than or equal to *minspan*, the selection is removed (when already existing) or cancelled."
msgstr "Si la selección es menor o igual a *minspan*, la selección se elimina (cuando ya existe) o se cancela."

#: matplotlib.widgets.SpanSelector:34 of
msgid "If True, use the backend-dependent blitting features for faster canvas updates."
msgstr "Si es verdadero, utilice las características de blitting dependientes del backend para actualizaciones más rápidas del lienzo."

#: matplotlib.widgets.SpanSelector:38 of
msgid "Dictionary of `matplotlib.patches.Patch` properties. Default:"
msgstr "Diccionario de las propiedades `matplotlib.patches.Patch`. Por defecto:"

#: matplotlib.widgets.SpanSelector:41 of
msgid "``dict(facecolor='red', alpha=0.5)``"
msgstr "``dict(facecolor='rojo', alpha=0.5)``"

#: matplotlib.widgets.SpanSelector:44 of
msgid "**onmove_callback**"
msgstr "**onmove_callback**"

#: of
msgid "func(min, max), min/max are floats, default: None"
msgstr "fun(min, max), min/max son flotantes, por defecto: Ninguno"

#: matplotlib.widgets.SpanSelector:44 of
msgid "Called on mouse move while the span is being selected."
msgstr "Llamado al movimiento del ratón mientras se selecciona el espacio."

#: matplotlib.widgets.SpanSelector:48 of
msgid "**span_stays**"
msgstr "**span_stays**"

#: matplotlib.widgets.SpanSelector:47 of
msgid "If True, the span stays visible after the mouse is released. Deprecated, use *interactive* instead."
msgstr "Si es verdadero, el lapso se mantiene visible después de que el ratón sea liberado. Desaprobado, use *interactivo* en su lugar."

#: matplotlib.widgets.SpanSelector:55 of
msgid "**button** : `.MouseButton` or list of `.MouseButton`, default: all buttons"
msgstr "**botón** : `.MouseButton` o lista de `.MouseButton`, por defecto: todos los botones"

#: matplotlib.widgets.SpanSelector:54 of
msgid "MouseButton or list of MouseButton, default: all buttons"
msgstr "MouseButton o lista de MouseButton, por defecto: todos los botones"

#: matplotlib.widgets.SpanSelector:55 of
msgid "The mouse buttons which activate the span selector."
msgstr "Los botones del ratón que activan el selector de espacio."

#: of
msgid "dict, default: None"
msgstr "dictamen, predeterminado: ninguno"

#: matplotlib.widgets.SpanSelector:58 of
msgid "Properties of the handle lines at the edges of the span. Only used when *interactive* is True. See `matplotlib.lines.Line2D` for valid properties."
msgstr "Propiedades de las líneas de handle en los bordes del espacio. Solo se utiliza cuando *interactivo* es True. Vea `matplotlib.lines.Line2D` para propiedades válidas."

#: matplotlib.widgets.SpanSelector:96 of
msgid "See also: :doc:`/gallery/widgets/span_selector`"
msgstr "Ver también: :doc:`/gallery/widgets/span_selector`"

#: matplotlib.widgets.SpanSelector.connect_default_events:2 of
msgid "Connect the major canvas events to methods."
msgstr "Conecte los principales eventos de lienzo a los métodos."

#: matplotlib.widgets.SpanSelector.direction:2 of
msgid "Direction of the span selector: 'vertical' or 'horizontal'."
msgstr "Dirección del selector espacial: 'vertical' o 'horizontal'."

#: matplotlib.widgets.SpanSelector.extents:2 of
msgid "Return extents of the span selector."
msgstr "Devuelve las extensiones del selector de la extensión."

#: matplotlib.widgets.SpanSelector.new_axes:2 of
msgid "Set SpanSelector to operate on a new Axes."
msgstr "Establezca SpanSelector para operar en un nuevo eje."

#: matplotlib.widgets.SubplotTool:2 of
msgid "A tool to adjust the subplot params of a `matplotlib.figure.Figure`."
msgstr "Una herramienta para ajustar los parámetros de subplot de un `matplotlib.figure.Figure`."

#: matplotlib.widgets.SubplotTool:29 of
msgid "**targetfig** : `.Figure`"
msgstr "**figura** : `.Figure`"

#: matplotlib.widgets.SubplotTool:28 matplotlib.widgets.SubplotTool:44 of
msgid "Figure"
msgstr "Figura"

#: matplotlib.widgets.SubplotTool:29 of
msgid "The figure instance to adjust."
msgstr "La instancia de la figura a ajustar."

#: matplotlib.widgets.SubplotTool:45 of
msgid "**toolfig** : `.Figure`"
msgstr "**toolfig** : `.Figure`"

#: matplotlib.widgets.SubplotTool:32 of
msgid "The figure instance to embed the subplot tool into."
msgstr "La instancia de la figura en la que incrustar la herramienta subplot."

#: matplotlib.widgets.TextBox:2 of
msgid "A GUI neutral text input box."
msgstr "Una casilla de entrada de texto neutral de GUI."

#: matplotlib.widgets.TextBox:4 of
msgid "For the text box to remain responsive you must keep a reference to it."
msgstr "Para que el cuadro de texto siga respondiendo, debe guardar una referencia a él."

#: matplotlib.widgets.TextBox:6 of
msgid "Call `.on_text_change` to be updated whenever the text changes."
msgstr "Llama a `.on_text_change` para ser actualizado cada vez que el texto cambia."

#: matplotlib.widgets.TextBox:8 of
msgid "Call `.on_submit` to be updated whenever the user hits enter or leaves the text entry field."
msgstr "Llame a `.on_submit` para ser actualizado cada vez que el usuario ingrese o deje el campo de entrada de texto."

#: matplotlib.widgets.TextBox:29 of
msgid "**label** : `.Text`"
msgstr "**etiqueta** : `.Text`"

#: matplotlib.widgets.TextBox:28 of
msgid "Text"
msgstr "Texto"

#: matplotlib.widgets.TextBox:32 of
msgid "The color of the text box when not hovering."
msgstr "El color del cuadro de texto cuando no está flotando."

#: matplotlib.widgets.TextBox:35 of
msgid "The color of the text box when hovering."
msgstr "El color del cuadro de texto al pasar el ratón."

#: matplotlib.widgets.TextBox:51 of
msgid "Label for this text box."
msgstr "Etiqueta para este cuadro de texto."

#: matplotlib.widgets.TextBox:54 of
msgid "**initial**"
msgstr "**inicial**"

#: matplotlib.widgets.TextBox:54 of
msgid "Initial value in the text box."
msgstr "Valor inicial en el cuadro de texto."

#: matplotlib.widgets.TextBox:57 of
msgid "The color of the box."
msgstr "El color de la caja."

#: matplotlib.widgets.TextBox:60 of
msgid "The color of the box when the mouse is over it."
msgstr "El color de la caja cuando el ratón está sobre ella."

#: matplotlib.widgets.TextBox:63 of
msgid "**label_pad**"
msgstr "**etiqueta_pad**"

#: matplotlib.widgets.TextBox:63 of
msgid "The distance between the label and the right side of the textbox."
msgstr "La distancia entre la etiqueta y el lado derecho del cuadro de texto."

#: matplotlib.widgets.TextBox:79 of
msgid "**textalignment**"
msgstr "**textalignment**"

#: of
msgid "{'left', 'center', 'right'}"
msgstr "{'left', 'center', 'right'}"

#: matplotlib.widgets.TextBox:66 of
msgid "The horizontal location of the text."
msgstr "La ubicación horizontal del texto."

#: matplotlib.widgets.TextBox.on_submit:2 of
msgid "When the user hits enter or leaves the submission box, call this *func* with event."
msgstr "Cuando el usuario ingrese o salga del cuadro de presentación, llame a esta *función* con evento."

#: matplotlib.widgets.TextBox.on_submit:5
#: matplotlib.widgets.TextBox.on_text_change:4 of
msgid "A connection id is returned which can be used to disconnect."
msgstr "Se devuelve un identificador de conexión que puede utilizarse para desconectarse."

#: matplotlib.widgets.TextBox.on_text_change:2 of
msgid "When the text changes, call this *func* with event."
msgstr "Cuando el texto cambia, llame a esta *función* con evento."

#: matplotlib.widgets.ToolHandles:2 matplotlib.widgets.ToolLineHandles:2 of
msgid "Control handles for canvas tools."
msgstr "Controles para herramientas de lienzo."

#: matplotlib.widgets.ToolHandles:8 matplotlib.widgets.ToolLineHandles:8 of
msgid "Matplotlib axes where tool handles are displayed."
msgstr "Ejes de Matplotlib donde se muestran las asas de herramientas."

#: matplotlib.widgets.ToolHandles:11
#: matplotlib.widgets.ToolLineHandles.closest:9 of
msgid "**x, y**"
msgstr "**x, y**"

#: of
msgid "1D arrays"
msgstr "Arreglos 1D"

#: matplotlib.widgets.ToolHandles:11 of
msgid "Coordinates of control handles."
msgstr "Coordenadas de manejadores de control."

#: matplotlib.widgets.ToolHandles:14 of
msgid "**marker**"
msgstr "**marker**"

#: of
msgid "str, default: 'o'"
msgstr "str, por defecto: 'o'"

#: matplotlib.widgets.ToolHandles:14 of
msgid "Shape of marker used to display handle. See `matplotlib.pyplot.plot`."
msgstr "Forma del marcador usado para mostrar el handle. Ver `matplotlib.pyplot.plot.plot`."

#: matplotlib.widgets.ToolHandles:17 of
msgid "**marker_props**"
msgstr "**marker_props**"

#: matplotlib.widgets.ToolHandles:17 of
msgid "Additional marker properties. See `matplotlib.lines.Line2D`."
msgstr "Propiedades de marcador adicionales. Consulte `matplotlib.lines.Line2D`."

#: matplotlib.widgets.ToolHandles.closest:2 of
msgid "Return index and pixel distance to closest index."
msgstr "Devuelve el índice y la distancia de píxeles al índice más cercano."

#: matplotlib.widgets.ToolHandles.set_data:2 of
msgid "Set x and y positions of handles."
msgstr "Establecer posiciones x e y de asas."

#: matplotlib.widgets.ToolLineHandles:11
#: matplotlib.widgets.ToolLineHandles.set_data:22 of
msgid "**positions**"
msgstr "**posiciones**"

#: of
msgid "1D array"
msgstr "Matriz 1D"

#: matplotlib.widgets.ToolLineHandles:11 of
msgid "Positions of handles in data coordinates."
msgstr "Posiciones de los manejadores en las coordenadas de datos."

#: matplotlib.widgets.ToolLineHandles:14 of
msgid "Direction of handles, either 'vertical' or 'horizontal'"
msgstr "Dirección de asas, verticales o horizontales"

#: matplotlib.widgets.ToolLineHandles:17 of
msgid "**line_props**"
msgstr "**accesorios**"

#: matplotlib.widgets.ToolLineHandles:17 of
msgid "Additional line properties. See `matplotlib.lines.Line2D`."
msgstr "Propiedades de línea adicionales. Consulte `matplotlib.lines.Line2D`."

#: matplotlib.widgets.ToolLineHandles.closest:2 of
msgid "Return index and pixel distance to closest handle."
msgstr "Devuelve el índice y la distancia de píxeles al asa más cercana."

#: matplotlib.widgets.ToolLineHandles.closest:8 of
msgid "x, y position from which the distance will be calculated to determinate the closest handle"
msgstr "x, y posición desde la cual la distancia se calculará para determinar el asa más cercana"

#: matplotlib.widgets.ToolLineHandles.closest:26 of
msgid "**index, distance**"
msgstr "**índice, distancia**"

#: of
msgid "index of the handle and its distance from"
msgstr "índice del asa y su distancia desde"

#: matplotlib.widgets.ToolLineHandles.closest:14 of
msgid "position x, y"
msgstr "posición x, y"

#: matplotlib.widgets.ToolLineHandles.direction:2 of
msgid "Direction of the handle: 'vertical' or 'horizontal'."
msgstr "Dirección del mano: 'vertical' o 'horizontal'."

#: matplotlib.widgets.ToolLineHandles.positions:2 of
msgid "Positions of the handle in data coordinates."
msgstr "Posiciones del manejador en coordenadas de datos."

#: matplotlib.widgets.ToolLineHandles.remove:2 of
msgid "Remove the handles artist from the figure."
msgstr "Remueve al artista asas de la figura."

#: matplotlib.widgets.ToolLineHandles.set_animated:2 of
msgid "Set the animated state of the handles artist."
msgstr "Establece el estado animado del artista de las asas."

#: matplotlib.widgets.ToolLineHandles.set_data:2 of
msgid "Set x or y positions of handles, depending if the lines are vertical of horizontal."
msgstr "Define las posiciones x o y de las asas, dependiendo de si las líneas son verticales de horizontal."

#: of
msgid "tuple of length 2"
msgstr "tupla de longitud 2"

#: matplotlib.widgets.ToolLineHandles.set_data:9 of
msgid "Set the positions of the handle in data coordinates"
msgstr "Establecer las posiciones del manejador en las coordenadas de datos"

#: matplotlib.widgets.ToolLineHandles.set_visible:2 of
msgid "Set the visibility state of the handles artist."
msgstr "Establecer el estado de visibilidad del artista de asas."

#: matplotlib.widgets.Widget:2 of
msgid "Abstract base class for GUI neutral widgets."
msgstr "Clase base abstracta para widgets GUI neutrales."

#: matplotlib.widgets.Widget.get_active:2 of
msgid "Get whether the widget is active."
msgstr "Obtener si el widget está activo."

#: matplotlib.widgets.Widget.ignore:2 of
msgid "Return whether *event* should be ignored."
msgstr "Devuelve si el *event* debe ser ignorado."

#: matplotlib.widgets.Widget.ignore:4 of
msgid "This method should be called at the beginning of any event callback."
msgstr "Este método debe ser llamado al principio de cualquier callback de evento."

#: matplotlib.widgets.Widget.set_active:2 of
msgid "Set whether the widget is active."
msgstr "Establecer si el widget está activo."

