msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:00\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.lines.Line2D.po\n"
"X-Crowdin-File-ID: 994\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.lines.Line2D.rst:2
msgid "matplotlib.lines.Line2D"
msgstr "matplotlib.lines.Line2D"

#: matplotlib.lines.Line2D:1 of
msgid "Bases: :py:class:`matplotlib.artist.Artist`"
msgstr "Bases: :py:class:`matplotlib.artist.Artist`"

#: matplotlib.lines.Line2D:2 of
msgid "A line - the line can have both a solid linestyle connecting all the vertices, and a marker at each vertex.  Additionally, the drawing of the solid line is influenced by the drawstyle, e.g., one can create \"stepped\" lines in various styles."
msgstr "Una línea - la línea puede tener tanto un estilo de línea sólido que conecta todos los vértices, como un marcador en cada vértice. Adicionalmente, el dibujo de la línea sólida está influenciado por el estilo de dibujo, por ejemplo, se pueden crear líneas \"escalonadas\" en varios estilos."

#: matplotlib.lines.Line2D:26 of
msgid "Create a `.Line2D` instance with *x* and *y* data in sequences of *xdata*, *ydata*."
msgstr "Crea una instancia `.Line2D` con datos *x* y *y* en secuencias de *xdata*, *ydata*."

#: matplotlib.lines.Line2D:29 of
msgid "Additional keyword arguments are `.Line2D` properties:"
msgstr "Argumentos adicionales de palabras clave son propiedades `.Line2D`:"

#: matplotlib.artist.Line2D.set:10 matplotlib.lines.Line2D:35 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.Line2D.set:10 matplotlib.lines.Line2D:35 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.Line2D.set:12 matplotlib.lines.Line2D:37 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.Line2D.set:12 matplotlib.lines.Line2D:37 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.Line2D.set:13 matplotlib.lines.Line2D:38 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.artist.Line2D.set:13 matplotlib.lines.Line2D:38 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.artist.Line2D.set:14 matplotlib.lines.Line2D:39 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.Line2D.set:14 matplotlib.artist.Line2D.set:15
#: matplotlib.artist.Line2D.set:17 matplotlib.artist.Line2D.set:28
#: matplotlib.artist.Line2D.set:42 matplotlib.artist.Line2D.set:49
#: matplotlib.lines.Line2D:39 matplotlib.lines.Line2D:40
#: matplotlib.lines.Line2D:42 matplotlib.lines.Line2D:53
#: matplotlib.lines.Line2D:67 matplotlib.lines.Line2D:74 of
msgid "bool"
msgstr "bool"

#: matplotlib.lines.Line2D:40 of
msgid ":meth:`antialiased <matplotlib.lines.Line2D.set_antialiased>` or aa"
msgstr ":meth:`antialias <matplotlib.lines.Line2D.set_antialiased>` o aa"

#: matplotlib.artist.Line2D.set:16 matplotlib.lines.Line2D:41 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.Line2D.set:16 matplotlib.lines.Line2D:41 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.artist.Line2D.set:17 matplotlib.lines.Line2D:42 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.Line2D.set:18 matplotlib.lines.Line2D:43 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.Line2D.set:18 matplotlib.lines.Line2D:43 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.lines.Line2D:44 of
msgid ":meth:`color <matplotlib.lines.Line2D.set_color>` or c"
msgstr ":meth:`color <matplotlib.lines.Line2D.set_color>` or c"

#: matplotlib.artist.Line2D.set:19 matplotlib.artist.Line2D.set:33
#: matplotlib.artist.Line2D.set:35 matplotlib.artist.Line2D.set:36
#: matplotlib.lines.Line2D:44 matplotlib.lines.Line2D:58
#: matplotlib.lines.Line2D:60 matplotlib.lines.Line2D:61 of
msgid "color"
msgstr "color"

#: matplotlib.artist.Line2D.set:20 matplotlib.lines.Line2D:45 of
msgid ":meth:`dash_capstyle <matplotlib.lines.Line2D.set_dash_capstyle>`"
msgstr ":meth:`dash_capstyle <matplotlib.lines.Line2D.set_dash_capstyle>`"

#: matplotlib.artist.Line2D.set:20 matplotlib.artist.Line2D.set:45
#: matplotlib.lines.Line2D:45 matplotlib.lines.Line2D:70 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.artist.Line2D.set:21 matplotlib.lines.Line2D:46 of
msgid ":meth:`dash_joinstyle <matplotlib.lines.Line2D.set_dash_joinstyle>`"
msgstr ":meth:`dash_joinstyle <matplotlib.lines.Line2D.set_dash_joinstyle>`"

#: matplotlib.artist.Line2D.set:21 matplotlib.artist.Line2D.set:46
#: matplotlib.lines.Line2D:46 matplotlib.lines.Line2D:71 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.artist.Line2D.set:22 matplotlib.lines.Line2D:47 of
msgid ":meth:`dashes <matplotlib.lines.Line2D.set_dashes>`"
msgstr ":meth:`guiones <matplotlib.lines.Line2D.set_dashes>`"

#: matplotlib.artist.Line2D.set:22 matplotlib.lines.Line2D:47 of
msgid "sequence of floats (on/off ink in points) or (None, None)"
msgstr "secuencia de flotantes (tinta encendida/apagada en puntos) o (Ninguna, Ninguna)"

#: matplotlib.artist.Line2D.set:23 matplotlib.lines.Line2D:48 of
msgid ":meth:`data <matplotlib.lines.Line2D.set_data>`"
msgstr ":meth:`data <matplotlib.lines.Line2D.set_data>`"

#: matplotlib.artist.Line2D.set:23 matplotlib.lines.Line2D:48 of
msgid "(2, N) array or two 1D arrays"
msgstr "(2, N) array o dos matrices 1D"

#: matplotlib.lines.Line2D:49 of
msgid ":meth:`drawstyle <matplotlib.lines.Line2D.set_drawstyle>` or ds"
msgstr ":meth:`estilo de dibujo <matplotlib.lines.Line2D.set_drawstyle>` o ds"

#: matplotlib.artist.Line2D.set:24 matplotlib.lines.Line2D:49 of
msgid "{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'"
msgstr "{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'"

#: matplotlib.artist.Line2D.set:25 matplotlib.lines.Line2D:50 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.Line2D.set:25 matplotlib.lines.Line2D:50 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.artist.Line2D.set:26 matplotlib.lines.Line2D:51 of
msgid ":meth:`fillstyle <matplotlib.lines.Line2D.set_fillstyle>`"
msgstr ":meth:`fillstyle <matplotlib.lines.Line2D.set_fillstyle>`"

#: matplotlib.artist.Line2D.set:26 matplotlib.lines.Line2D:51 of
msgid "{'full', 'left', 'right', 'bottom', 'top', 'none'}"
msgstr "{'full', 'left', 'right', 'bottom', 'top', 'ninguno '}"

#: matplotlib.artist.Line2D.set:27 matplotlib.lines.Line2D:52 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.Line2D.set:27 matplotlib.artist.Line2D.set:48
#: matplotlib.lines.Line2D:52 matplotlib.lines.Line2D:73 of
msgid "str"
msgstr "str"

#: matplotlib.artist.Line2D.set:28 matplotlib.lines.Line2D:53 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.Line2D.set:29 matplotlib.lines.Line2D:54 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.Line2D.set:29 matplotlib.lines.Line2D:54 of
msgid "object"
msgstr "object"

#: matplotlib.lines.Line2D:55 of
msgid ":meth:`linestyle <matplotlib.lines.Line2D.set_linestyle>` or ls"
msgstr ":meth:`linestyle <matplotlib.lines.Line2D.set_linestyle>` o ls"

#: matplotlib.artist.Line2D.set:30 matplotlib.lines.Line2D:55 of
msgid "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"
msgstr "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"

#: matplotlib.lines.Line2D:56 of
msgid ":meth:`linewidth <matplotlib.lines.Line2D.set_linewidth>` or lw"
msgstr ":meth:`linewidth <matplotlib.lines.Line2D.set_linewidth>` or lw"

#: matplotlib.artist.Line2D.set:31 matplotlib.artist.Line2D.set:34
#: matplotlib.artist.Line2D.set:37 matplotlib.artist.Line2D.set:41
#: matplotlib.artist.Line2D.set:52 matplotlib.lines.Line2D:56
#: matplotlib.lines.Line2D:59 matplotlib.lines.Line2D:62
#: matplotlib.lines.Line2D:66 matplotlib.lines.Line2D:77 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.artist.Line2D.set:32 matplotlib.lines.Line2D:57 of
msgid ":meth:`marker <matplotlib.lines.Line2D.set_marker>`"
msgstr ":meth:`marker <matplotlib.lines.Line2D.set_marker>`"

#: matplotlib.artist.Line2D.set:32 matplotlib.lines.Line2D:57 of
msgid "marker style string, `~.path.Path` or `~.markers.MarkerStyle`"
msgstr "marker style string, `~.path.Path` o `~.markers.MarkerStyle`"

#: matplotlib.lines.Line2D:58 of
msgid ":meth:`markeredgecolor <matplotlib.lines.Line2D.set_markeredgecolor>` or mec"
msgstr ":meth:`markeredgecolor <matplotlib.lines.Line2D.set_markeredgecolor>` o mec"

#: matplotlib.lines.Line2D:59 of
msgid ":meth:`markeredgewidth <matplotlib.lines.Line2D.set_markeredgewidth>` or mew"
msgstr ":meth:`markeredgewidth <matplotlib.lines.Line2D.set_markeredgewidth>` o mío"

#: matplotlib.lines.Line2D:60 of
msgid ":meth:`markerfacecolor <matplotlib.lines.Line2D.set_markerfacecolor>` or mfc"
msgstr ":meth:`markerfacecolor <matplotlib.lines.Line2D.set_markerfacecolor>` o mfc"

#: matplotlib.lines.Line2D:61 of
msgid ":meth:`markerfacecoloralt <matplotlib.lines.Line2D.set_markerfacecoloralt>` or mfcalt"
msgstr ":meth:`markerfacecoloralt <matplotlib.lines.Line2D.set_markerfacecoloralt>` o mfcalt"

#: matplotlib.lines.Line2D:62 of
msgid ":meth:`markersize <matplotlib.lines.Line2D.set_markersize>` or ms"
msgstr ":meth:`tamaño de marcador <matplotlib.lines.Line2D.set_markersize>` o ms"

#: matplotlib.artist.Line2D.set:38 matplotlib.lines.Line2D:63 of
msgid ":meth:`markevery <matplotlib.lines.Line2D.set_markevery>`"
msgstr ":meth:`markevery <matplotlib.lines.Line2D.set_markevery>`"

#: matplotlib.artist.Line2D.set:38 matplotlib.lines.Line2D:63 of
msgid "None or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]"
msgstr "Ninguno o int o (int, int) o rebanada o lista[int] o decimal o (float, float) o lista[bool]"

#: matplotlib.artist.Line2D.set:39 matplotlib.lines.Line2D:64 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.Line2D.set:39 matplotlib.lines.Line2D:64 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.Line2D.set:40 matplotlib.lines.Line2D:65 of
msgid ":meth:`picker <matplotlib.lines.Line2D.set_picker>`"
msgstr ":meth:`picker <matplotlib.lines.Line2D.set_picker>`"

#: matplotlib.artist.Line2D.set:40 matplotlib.lines.Line2D:65 of
msgid "float or callable[[Artist, Event], tuple[bool, dict]]"
msgstr "decimal o llamable[[Artista, Evento], tuple[bool, dict]]"

#: matplotlib.artist.Line2D.set:41 matplotlib.lines.Line2D:66 of
msgid ":meth:`pickradius <matplotlib.lines.Line2D.set_pickradius>`"
msgstr ":meth:`pickradius <matplotlib.lines.Line2D.set_pickradius>`"

#: matplotlib.artist.Line2D.set:42 matplotlib.lines.Line2D:67 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.Line2D.set:43 matplotlib.lines.Line2D:68 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.Line2D.set:43 matplotlib.lines.Line2D:68 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.Line2D.set:44 matplotlib.lines.Line2D:69 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.Line2D.set:44 matplotlib.lines.Line2D:69 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.Line2D.set:45 matplotlib.lines.Line2D:70 of
msgid ":meth:`solid_capstyle <matplotlib.lines.Line2D.set_solid_capstyle>`"
msgstr ":meth:`solid_capstyle <matplotlib.lines.Line2D.set_solid_capstyle>`"

#: matplotlib.artist.Line2D.set:46 matplotlib.lines.Line2D:71 of
msgid ":meth:`solid_joinstyle <matplotlib.lines.Line2D.set_solid_joinstyle>`"
msgstr ":meth:`solid_joinstyle <matplotlib.lines.Line2D.set_solid_joinstyle>`"

#: matplotlib.artist.Line2D.set:47 matplotlib.lines.Line2D:72 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.Line2D.set:47 matplotlib.lines.Line2D:72 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.artist.Line2D.set:48 matplotlib.lines.Line2D:73 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.Line2D.set:49 matplotlib.lines.Line2D:74 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.Line2D.set:50 matplotlib.lines.Line2D:75 of
msgid ":meth:`xdata <matplotlib.lines.Line2D.set_xdata>`"
msgstr ":meth:`xdata <matplotlib.lines.Line2D.set_xdata>`"

#: matplotlib.artist.Line2D.set:50 matplotlib.artist.Line2D.set:51
#: matplotlib.lines.Line2D:75 matplotlib.lines.Line2D:76 of
msgid "1D array"
msgstr "Matriz 1D"

#: matplotlib.artist.Line2D.set:51 matplotlib.lines.Line2D:76 of
msgid ":meth:`ydata <matplotlib.lines.Line2D.set_ydata>`"
msgstr ":meth:`ydata <matplotlib.lines.Line2D.set_ydata>`"

#: matplotlib.artist.Line2D.set:52 matplotlib.lines.Line2D:77 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.lines.Line2D:80 of
msgid "See :meth:`set_linestyle` for a description of the line styles, :meth:`set_marker` for a description of the markers, and :meth:`set_drawstyle` for a description of the draw styles."
msgstr "Vea :meth:`set_linestyle` para una descripción de los estilos de línea, :meth:`set_marker` para una descripción de los marcadores, y :meth:`set_drawstyle` para una descripción de los estilos de dibujo."

#: matplotlib.lines.Line2D.contains:2 of
msgid "Test whether *mouseevent* occurred on the line."
msgstr "Evalúa si *mouseevent* ocurrió en la línea."

#: matplotlib.lines.Line2D.contains:4 of
msgid "An event is deemed to have occurred \"on\" the line if it is less than ``self.pickradius`` (default: 5 points) away from it.  Use `~.Line2D.get_pickradius` or `~.Line2D.set_pickradius` to get or set the pick radius."
msgstr "Se considera que un evento ha ocurrido \"en\" la línea si está a menos de ``self.pickradius`` (por defecto: 5 puntos) de distancia. Usa `~.Line2D.get_pickradius` o `~.Line2D.set_pickradius` para obtener o establecer el radio de selección."

#: matplotlib.lines.Line2D.contains matplotlib.lines.Line2D.draw
#: matplotlib.lines.Line2D.set_antialiased matplotlib.lines.Line2D.set_color
#: matplotlib.lines.Line2D.set_dash_capstyle
#: matplotlib.lines.Line2D.set_dash_joinstyle
#: matplotlib.lines.Line2D.set_dashes matplotlib.lines.Line2D.set_data
#: matplotlib.lines.Line2D.set_drawstyle matplotlib.lines.Line2D.set_fillstyle
#: matplotlib.lines.Line2D.set_linestyle matplotlib.lines.Line2D.set_linewidth
#: matplotlib.lines.Line2D.set_marker
#: matplotlib.lines.Line2D.set_markeredgecolor
#: matplotlib.lines.Line2D.set_markeredgewidth
#: matplotlib.lines.Line2D.set_markerfacecolor
#: matplotlib.lines.Line2D.set_markerfacecoloralt
#: matplotlib.lines.Line2D.set_markersize matplotlib.lines.Line2D.set_markevery
#: matplotlib.lines.Line2D.set_picker matplotlib.lines.Line2D.set_pickradius
#: matplotlib.lines.Line2D.set_solid_capstyle
#: matplotlib.lines.Line2D.set_solid_joinstyle
#: matplotlib.lines.Line2D.set_transform matplotlib.lines.Line2D.set_xdata
#: matplotlib.lines.Line2D.set_ydata of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.lines.Line2D.contains:12 of
msgid "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"
msgstr "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"

#: matplotlib.lines.Line2D.contains:11 of
msgid "matplotlib.backend_bases.MouseEvent"
msgstr "matplotlib.backend_bases.MouseEvent"

#: matplotlib.lines.Line2D.contains of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.lines.Line2D.contains:17 of
msgid "**contains**"
msgstr "**contains**"

#: matplotlib.lines.Line2D.contains:17 of
msgid "Whether any values are within the radius."
msgstr "Si cualquier valor está dentro del radio."

#: matplotlib.lines.Line2D.contains:36 of
msgid "**details**"
msgstr "**details**"

#: of
msgid "dict"
msgstr "dict"

#: matplotlib.lines.Line2D.contains:20 of
msgid "A dictionary ``{'ind': pointlist}``, where *pointlist* is a list of points of the line that are within the pickradius around the event position."
msgstr "Un diccionario ``{'ind': pointlist}``, donde *lista de puntos* es una lista de puntos de la recta que están dentro del radio de selección alrededor de la posición del evento."

#: matplotlib.lines.Line2D.contains:24 of
msgid "TODO: sort returned indices by distance"
msgstr "TODO: ordenar los índices devueltos por distancia"

#: matplotlib.lines.Line2D.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr "Dibuja el Artist (y sus hijos) usando el renderizador dado."

#: matplotlib.lines.Line2D.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr "Esto no tiene efecto si el artist no es visible (`.Artist.get_visible` devuelve False)."

#: matplotlib.lines.Line2D.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr "**renderer** : `.RendererBase` subclase."

#: matplotlib.lines.Line2D.draw:17 of
msgid "RendererBase subclass."
msgstr "Subclase RendererBase."

#: matplotlib.lines.Line2D.draw:21 matplotlib.lines.Line2D.set_markevery:46 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.lines.Line2D.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr "Este método se sobrescribe en las subclases de Artist."

#: matplotlib.lines.Line2D.get_antialiased:2 of
msgid "Alias for `get_antialiased`."
msgstr "Alias para `get_antialiased`."

#: matplotlib.lines.Line2D.get_antialiased:2 of
msgid "Return whether antialiased rendering is used."
msgstr "Devuelve si se utiliza un renderizado antialias."

#: matplotlib.lines.Line2D.get_color:2 of
msgid "Alias for `get_color`."
msgstr "Alias para `get_color`."

#: matplotlib.lines.Line2D.get_color:2 of
msgid "Return the line color."
msgstr "Devuelve el color de la línea."

#: matplotlib.lines.Line2D.get_color:4 of
msgid "See also `~.Line2D.set_color`."
msgstr "Vea también `~.Line2D.set_color`."

#: matplotlib.lines.Line2D.get_dash_capstyle:2 of
msgid "Return the `.CapStyle` for dashed lines."
msgstr "Devuelve el `.CapStyle` para líneas discontinuas."

#: matplotlib.lines.Line2D.get_dash_capstyle:4 of
msgid "See also `~.Line2D.set_dash_capstyle`."
msgstr "Vea también `~.Line2D.set_dash_capstyle`."

#: matplotlib.lines.Line2D.get_dash_joinstyle:2 of
msgid "Return the `.JoinStyle` for dashed lines."
msgstr "Devuelve el `.JoinStyle` para líneas discontinuas."

#: matplotlib.lines.Line2D.get_dash_joinstyle:4 of
msgid "See also `~.Line2D.set_dash_joinstyle`."
msgstr "Vea también `~.Line2D.set_dash_joinstyle`."

#: matplotlib.lines.Line2D.get_data:2 of
msgid "Return the line data as an ``(xdata, ydata)`` pair."
msgstr "Devuelve los datos de línea como un par ``(xdata, ydata)``."

#: matplotlib.lines.Line2D.get_data:4 of
msgid "If *orig* is *True*, return the original data."
msgstr "Si *origen* es *True*, devuelve los datos originales."

#: matplotlib.lines.Line2D.get_drawstyle:2 of
msgid "Return the drawstyle."
msgstr "Devuelve el estilo dibujado."

#: matplotlib.lines.Line2D.get_drawstyle:4 of
msgid "See also `~.Line2D.set_drawstyle`."
msgstr "Vea también `~.Line2D.set_drawstyle`."

#: matplotlib.lines.Line2D.get_drawstyle:2 of
msgid "Alias for `get_drawstyle`."
msgstr "Alias para `get_drawstyle`."

#: matplotlib.lines.Line2D.get_fillstyle:2 of
msgid "Return the marker fill style."
msgstr "Devuelve el estilo de relleno del marcador."

#: matplotlib.lines.Line2D.get_fillstyle:4 of
msgid "See also `~.Line2D.set_fillstyle`."
msgstr "Vea también `~.Line2D.set_fillstyle`."

#: matplotlib.lines.Line2D.get_linestyle:2 of
msgid "Return the linestyle."
msgstr "Devuelve el estilo de línea."

#: matplotlib.lines.Line2D.get_linestyle:4 matplotlib.lines.Line2D.is_dashed:7
#: of
msgid "See also `~.Line2D.set_linestyle`."
msgstr "Vea también `~.Line2D.set_linestyle`."

#: matplotlib.lines.Line2D.get_linewidth:2 of
msgid "Return the linewidth in points."
msgstr "Devuelve el ancho de línea en puntos."

#: matplotlib.lines.Line2D.get_linewidth:4 of
msgid "See also `~.Line2D.set_linewidth`."
msgstr "Vea también `~.Line2D.set_linewidth`."

#: matplotlib.lines.Line2D.get_linestyle:2 of
msgid "Alias for `get_linestyle`."
msgstr "Alias para `get_linestyle`."

#: matplotlib.lines.Line2D.get_linewidth:2 of
msgid "Alias for `get_linewidth`."
msgstr "Alias para `get_linewidth`."

#: matplotlib.lines.Line2D.get_marker:2 of
msgid "Return the line marker."
msgstr "Devuelve el marcador de línea."

#: matplotlib.lines.Line2D.get_marker:4 of
msgid "See also `~.Line2D.set_marker`."
msgstr "Vea también `~.Line2D.set_marker`."

#: matplotlib.lines.Line2D.get_markeredgecolor:2 of
msgid "Return the marker edge color."
msgstr "Devuelve el color del borde del marcador."

#: matplotlib.lines.Line2D.get_markeredgecolor:4 of
msgid "See also `~.Line2D.set_markeredgecolor`."
msgstr "Vea también `~.Line2D.set_markeredgecolor`."

#: matplotlib.lines.Line2D.get_markeredgewidth:2 of
msgid "Return the marker edge width in points."
msgstr "Devuelve el ancho del borde del marcador en puntos."

#: matplotlib.lines.Line2D.get_markeredgewidth:4 of
msgid "See also `~.Line2D.set_markeredgewidth`."
msgstr "Vea también `~.Line2D.set_markeredgewidth`."

#: matplotlib.lines.Line2D.get_markerfacecolor:2 of
msgid "Return the marker face color."
msgstr "Devuelve el color de la cara del marcador."

#: matplotlib.lines.Line2D.get_markerfacecolor:4 of
msgid "See also `~.Line2D.set_markerfacecolor`."
msgstr "Vea también `~.Line2D.set_markerfacecolor`."

#: matplotlib.lines.Line2D.get_markerfacecoloralt:2 of
msgid "Return the alternate marker face color."
msgstr "Devuelve el color alternativo de la cara del marcador."

#: matplotlib.lines.Line2D.get_markerfacecoloralt:4 of
msgid "See also `~.Line2D.set_markerfacecoloralt`."
msgstr "Vea también `~.Line2D.set_markerfacecoloralt`."

#: matplotlib.lines.Line2D.get_markersize:2 of
msgid "Return the marker size in points."
msgstr "Devuelve el tamaño del marcador en puntos."

#: matplotlib.lines.Line2D.get_markersize:4 of
msgid "See also `~.Line2D.set_markersize`."
msgstr "Vea también `~.Line2D.set_markersize`."

#: matplotlib.lines.Line2D.get_markevery:2 of
msgid "Return the markevery setting for marker subsampling."
msgstr "Devuelve la configuración de cada marcador para el submuestreo de marcadores."

#: matplotlib.lines.Line2D.get_markevery:4 of
msgid "See also `~.Line2D.set_markevery`."
msgstr "Vea también `~.Line2D.set_markevery`."

#: matplotlib.lines.Line2D.get_markeredgecolor:2 of
msgid "Alias for `get_markeredgecolor`."
msgstr "Alias para `get_markeredgecolor`."

#: matplotlib.lines.Line2D.get_markeredgewidth:2 of
msgid "Alias for `get_markeredgewidth`."
msgstr "Alias para `get_markeredgewidth`."

#: matplotlib.lines.Line2D.get_markerfacecolor:2 of
msgid "Alias for `get_markerfacecolor`."
msgstr "Alias para `get_markerfacecolor`."

#: matplotlib.lines.Line2D.get_markerfacecoloralt:2 of
msgid "Alias for `get_markerfacecoloralt`."
msgstr "Alias para `get_markerfacecoloralt`."

#: matplotlib.lines.Line2D.get_markersize:2 of
msgid "Alias for `get_markersize`."
msgstr "Alias para `get_markersize`."

#: matplotlib.lines.Line2D.get_path:2 of
msgid "Return the `~matplotlib.path.Path` associated with this line."
msgstr "Devuelve el `~matplotlib.path.Path` asociado con esta línea."

#: matplotlib.lines.Line2D.get_pickradius:2
#: matplotlib.lines.Line2D.pickradius:2 of
msgid "Return the pick radius used for containment tests."
msgstr "Devuelve el radio de selección usado para las pruebas de contención."

#: matplotlib.lines.Line2D.get_pickradius:4
#: matplotlib.lines.Line2D.pickradius:4
#: matplotlib.lines.Line2D.set_pickradius:4 of
msgid "See `.contains` for more details."
msgstr "Vea `.contains` para más detalles."

#: matplotlib.lines.Line2D.get_solid_capstyle:2 of
msgid "Return the `.CapStyle` for solid lines."
msgstr "Devuelve el `.CapStyle` para líneas sólidas."

#: matplotlib.lines.Line2D.get_solid_capstyle:4 of
msgid "See also `~.Line2D.set_solid_capstyle`."
msgstr "Vea también `~.Line2D.set_solid_capstyle`."

#: matplotlib.lines.Line2D.get_solid_joinstyle:2 of
msgid "Return the `.JoinStyle` for solid lines."
msgstr "Devuelve el `.JoinStyle` para líneas sólidas."

#: matplotlib.lines.Line2D.get_solid_joinstyle:4 of
msgid "See also `~.Line2D.set_solid_joinstyle`."
msgstr "Vea también `~.Line2D.set_solid_joinstyle`."

#: matplotlib.lines.Line2D.get_window_extent:2 of
msgid "Get the artist's bounding box in display space."
msgstr "Obtenga la caja delimitadora del artist en el espacio de visualización."

#: matplotlib.lines.Line2D.get_window_extent:4 of
msgid "The bounding box' width and height are nonnegative."
msgstr "La anchura y la altura de la caja delimitadora son no negativas."

#: matplotlib.lines.Line2D.get_window_extent:6 of
msgid "Subclasses should override for inclusion in the bounding box \"tight\" calculation. Default is to return an empty bounding box at 0, 0."
msgstr "Las subclases deben anularlo para incluirlo en el cálculo de la caja delimitadora \"ajustada\". Por defecto devuelve una caja delimitadora vacía en 0, 0."

#: matplotlib.lines.Line2D.get_window_extent:10 of
msgid "Be careful when using this function, the results will not update if the artist window extent of the artist changes.  The extent can change due to any changes in the transform stack, such as changing the axes limits, the figure size, or the canvas used (as is done when saving a figure).  This can lead to unexpected behavior where interactive figures will look fine on the screen, but will save incorrectly."
msgstr "Ten cuidado cuando uses esta función, los resultados no se actualizarán si la extensión de la ventana del artist cambia.  La extensión puede cambiar debido a cualquier cambio en la pila de transformaciones, como cambiar los límites de los ejes, el tamaño de la figura o el lienzo utilizado (como se hace al guardar una figura).  Esto puede llevar a un comportamiento inesperado donde las figuras interactivas se verán bien en la pantalla, pero se guardarán incorrectamente."

#: matplotlib.lines.Line2D.get_xdata:2 of
msgid "Return the xdata."
msgstr "Devuelve el xdata."

#: matplotlib.lines.Line2D.get_xdata:4 matplotlib.lines.Line2D.get_ydata:4 of
msgid "If *orig* is *True*, return the original data, else the processed data."
msgstr "Si *origen* es *True*, devuelve los datos originales, sino los datos procesados."

#: matplotlib.lines.Line2D.get_xydata:2 of
msgid "Return the *xy* data as a Nx2 numpy array."
msgstr "Devuelve los datos *xy* como un arreglo numpy Nx2."

#: matplotlib.lines.Line2D.get_ydata:2 of
msgid "Return the ydata."
msgstr "Devuelve los ydata."

#: matplotlib.lines.Line2D.is_dashed:2 of
msgid "Return whether line has a dashed linestyle."
msgstr "Devuelve si la línea tiene un estilo de línea de guiones."

#: matplotlib.lines.Line2D.is_dashed:4 of
msgid "A custom linestyle is assumed to be dashed, we do not inspect the ``onoffseq`` directly."
msgstr "Se asume que un estilo de línea personalizado se desvanece, no inspeccionamos el ``onoffseq`` directamente."

#: matplotlib.artist.Line2D.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.Line2D.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.Line2D.set:15 of
msgid ":meth:`antialiased <matplotlib.lines.Line2D.set_antialiased>`"
msgstr ":meth:`antialias <matplotlib.lines.Line2D.set_antialiased>`"

#: matplotlib.artist.Line2D.set:19 of
msgid ":meth:`color <matplotlib.lines.Line2D.set_color>`"
msgstr ":meth:`color <matplotlib.lines.Line2D.set_color>`"

#: matplotlib.artist.Line2D.set:24 of
msgid ":meth:`drawstyle <matplotlib.lines.Line2D.set_drawstyle>`"
msgstr ":meth:`estilo de dibujo <matplotlib.lines.Line2D.set_drawstyle>`"

#: matplotlib.artist.Line2D.set:30 of
msgid ":meth:`linestyle <matplotlib.lines.Line2D.set_linestyle>`"
msgstr ":meth:`linestyle <matplotlib.lines.Line2D.set_linestyle>`"

#: matplotlib.artist.Line2D.set:31 of
msgid ":meth:`linewidth <matplotlib.lines.Line2D.set_linewidth>`"
msgstr ":meth:`linewidth <matplotlib.lines.Line2D.set_linewidth>`"

#: matplotlib.artist.Line2D.set:33 of
msgid ":meth:`markeredgecolor <matplotlib.lines.Line2D.set_markeredgecolor>`"
msgstr ":meth:`marcador <matplotlib.lines.Line2D.set_markeredgecolor>`"

#: matplotlib.artist.Line2D.set:34 of
msgid ":meth:`markeredgewidth <matplotlib.lines.Line2D.set_markeredgewidth>`"
msgstr ":meth:`markeredgewidth <matplotlib.lines.Line2D.set_markeredgewidth>`"

#: matplotlib.artist.Line2D.set:35 of
msgid ":meth:`markerfacecolor <matplotlib.lines.Line2D.set_markerfacecolor>`"
msgstr ":meth:`markerfacecolor <matplotlib.lines.Line2D.set_markerfacecolor>`"

#: matplotlib.artist.Line2D.set:36 of
msgid ":meth:`markerfacecoloralt <matplotlib.lines.Line2D.set_markerfacecoloralt>`"
msgstr ":meth:`markerfacecoloralt <matplotlib.lines.Line2D.set_markerfacecoloralt>`"

#: matplotlib.artist.Line2D.set:37 of
msgid ":meth:`markersize <matplotlib.lines.Line2D.set_markersize>`"
msgstr ":meth:`markersize <matplotlib.lines.Line2D.set_markersize>`"

#: matplotlib.lines.Line2D.set_antialiased:2 of
msgid "Alias for `set_antialiased`."
msgstr "Alias para `set_antialiased`."

#: matplotlib.lines.Line2D.set_antialiased:2 of
msgid "Set whether to use antialiased rendering."
msgstr "Establece si quieres usar el procesado antialias."

#: matplotlib.lines.Line2D.set_antialiased:21 of
msgid "**b**"
msgstr "**b**"

#: matplotlib.lines.Line2D.set_color:2 of
msgid "Alias for `set_color`."
msgstr "Alias para `set_color`."

#: matplotlib.lines.Line2D.set_color:2 of
msgid "Set the color of the line."
msgstr "Establecer el color de la línea."

#: matplotlib.lines.Line2D.set_color:21 of
msgid "**color**"
msgstr "**color**"

#: matplotlib.lines.Line2D.set_dash_capstyle:2 of
msgid "How to draw the end caps if the line is `~Line2D.is_dashed`."
msgstr "Cómo dibujar los topes finales si la línea es `~Line2D.is_dashed`."

#: matplotlib.lines.Line2D.set_dash_capstyle:21
#: matplotlib.lines.Line2D.set_solid_capstyle:21 of
msgid "**s** : `.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "**s** : `.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.lines.Line2D.set_dash_capstyle:20
#: matplotlib.lines.Line2D.set_solid_capstyle:20 of
msgid "CapStyle or {'butt', 'projecting', 'round'}"
msgstr "CapEstilo o {'butt', 'projecting', 'round'}"

#: matplotlib.lines.Line2D.set_dash_joinstyle:2 of
msgid "How to join segments of the line if it `~Line2D.is_dashed`."
msgstr "Cómo unirse a segmentos de la línea si `~Line2D.is_dashed`."

#: matplotlib.lines.Line2D.set_dash_joinstyle:21
#: matplotlib.lines.Line2D.set_solid_joinstyle:21 of
msgid "**s** : `.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "**s** : `.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.lines.Line2D.set_dash_joinstyle:20
#: matplotlib.lines.Line2D.set_solid_joinstyle:20 of
msgid "JoinStyle or {'miter', 'round', 'bevel'}"
msgstr "Estilo de registro o {'miter', 'round', 'bevel'}"

#: matplotlib.lines.Line2D.set_dashes:2 of
msgid "Set the dash sequence."
msgstr "Establecer la secuencia de guión."

#: matplotlib.lines.Line2D.set_dashes:4 of
msgid "The dash sequence is a sequence of floats of even length describing the length of dashes and spaces in points."
msgstr "La secuencia de guiones es una secuencia de flotantes de longitud uniforme que describe la longitud de guiones y espacios en puntos."

#: matplotlib.lines.Line2D.set_dashes:7 of
msgid "For example, (5, 2, 1, 2) describes a sequence of 5 point and 1 point dashes separated by 2 point spaces."
msgstr "Por ejemplo, (5, 2, 1, 2) describe una secuencia de 5 puntos y 1 puntos separados por 2 espacios."

#: matplotlib.lines.Line2D.set_dashes:27 of
msgid "**seq**"
msgstr "**seq**"

#: matplotlib.lines.Line2D.set_dashes:13 of
msgid "If *seq* is empty or ``(None, None)``, the linestyle will be set to solid."
msgstr "Si *seq* está vacío o ``(None, Ninguno)``, el estilo de línea se establecerá en sólido."

#: matplotlib.lines.Line2D.set_data:2 of
msgid "Set the x and y data."
msgstr "Establecer los datos x e y."

#: matplotlib.lines.Line2D.set_data:21 of
msgid "**\\*args**"
msgstr "**\\*args**"

#: matplotlib.lines.Line2D.set_drawstyle:2 of
msgid "Set the drawstyle of the plot."
msgstr "Establecer el estilo de dibujo de la parcela."

#: matplotlib.lines.Line2D.set_drawstyle:4 of
msgid "The drawstyle determines how the points are connected."
msgstr "El estilo de dibujo determina cómo se conectan los puntos."

#: matplotlib.lines.Line2D.set_drawstyle:36 of
msgid "**drawstyle**"
msgstr "**estilo de dibujo**"

#: matplotlib.lines.Line2D.set_drawstyle:9 of
msgid "For 'default', the points are connected with straight lines."
msgstr "Para 'default', los puntos están conectados con líneas rectas."

#: matplotlib.lines.Line2D.set_drawstyle:11 of
msgid "The steps variants connect the points with step-like lines, i.e. horizontal lines with vertical steps. They differ in the location of the step:"
msgstr "Las variantes de pasos conectan los puntos con líneas de escalones, es decir, líneas horizontales con pasos verticales. Difieren en la ubicación del paso:"

#: matplotlib.lines.Line2D.set_drawstyle:15 of
msgid "'steps-pre': The step is at the beginning of the line segment, i.e. the line will be at the y-value of point to the right."
msgstr "'steps-pre': El paso está al comienzo del segmento de línea, es decir, la línea estará en el valor y del punto a la derecha."

#: matplotlib.lines.Line2D.set_drawstyle:17 of
msgid "'steps-mid': The step is halfway between the points."
msgstr "'steps-mid': El paso está a mitad de camino entre los puntos."

#: matplotlib.lines.Line2D.set_drawstyle:18 of
msgid "'steps-post: The step is at the end of the line segment, i.e. the line will be at the y-value of the point to the left."
msgstr "'steps-post: El paso está al final del segmento de línea, es decir, la línea estará en el valor y-del punto a la izquierda."

#: matplotlib.lines.Line2D.set_drawstyle:20 of
msgid "'steps' is equal to 'steps-pre' and is maintained for backward-compatibility."
msgstr "\"pasos\" es igual a \"steps-pre\" y se mantiene para la compatibilidad hacia atrás."

#: matplotlib.lines.Line2D.set_drawstyle:23 of
msgid "For examples see :doc:`/gallery/lines_bars_and_markers/step_demo`."
msgstr "Para ejemplos vea :doc:`/gallery/lines_bars_and_markers/step_demo`."

#: matplotlib.lines.Line2D.set_drawstyle:2 of
msgid "Alias for `set_drawstyle`."
msgstr "Alias para `set_drawstyle`."

#: matplotlib.lines.Line2D.set_fillstyle:2 of
msgid "Set the marker fill style."
msgstr "Establece el estilo de relleno del marcador."

#: matplotlib.lines.Line2D.set_fillstyle:29 of
msgid "**fs**"
msgstr "**fs**"

#: matplotlib.lines.Line2D.set_fillstyle:8
#: matplotlib.lines.Line2D.set_linestyle:8 of
msgid "Possible values:"
msgstr "Valores posibles:"

#: matplotlib.lines.Line2D.set_fillstyle:10 of
msgid "'full': Fill the whole marker with the *markerfacecolor*."
msgstr "'full': Llene todo el marcador con el *markerfacecolor*."

#: matplotlib.lines.Line2D.set_fillstyle:11 of
msgid "'left', 'right', 'bottom', 'top': Fill the marker half at the given side with the *markerfacecolor*. The other half of the marker is filled with *markerfacecoloralt*."
msgstr "'izquierda', 'derecha', 'abajo', 'arriba': Llena la mitad del marcador en el lado dado con el *color marcado*. La otra mitad del marcador está llena de *color marcado*."

#: matplotlib.lines.Line2D.set_fillstyle:14 of
msgid "'none': No filling."
msgstr "'Ninguno': No hay relleno."

#: matplotlib.lines.Line2D.set_fillstyle:16 of
msgid "For examples see :ref:`marker_fill_styles`."
msgstr "Para ejemplos vea :ref:`marker_fill_styles`."

#: matplotlib.lines.Line2D.set_linestyle:2 of
msgid "Set the linestyle of the line."
msgstr "Establece el estilo de línea de la línea."

#: matplotlib.lines.Line2D.set_linestyle:43 of
msgid "**ls**"
msgstr "**ls**"

#: matplotlib.lines.Line2D.set_linestyle:10 of
msgid "A string:"
msgstr "Una cadena:"

#: matplotlib.lines.Line2D.set_linestyle:13 of
msgid "linestyle"
msgstr "estilo de línea"

#: matplotlib.lines.Line2D.set_linestyle:13 of
msgid "description"
msgstr "descripción"

#: matplotlib.lines.Line2D.set_linestyle:15 of
msgid "``'-'`` or ``'solid'``"
msgstr "``'-'`` o ``'sólid'``"

#: matplotlib.lines.Line2D.set_linestyle:15 of
msgid "solid line"
msgstr "línea sólida"

#: matplotlib.lines.Line2D.set_linestyle:16 of
msgid "``'--'`` or  ``'dashed'``"
msgstr "``'--'`` o ``'guionado'``"

#: matplotlib.lines.Line2D.set_linestyle:16 of
msgid "dashed line"
msgstr "línea de guiones"

#: matplotlib.lines.Line2D.set_linestyle:17 of
msgid "``'-.'`` or  ``'dashdot'``"
msgstr "``'-.'`` o ``'dashdot'``"

#: matplotlib.lines.Line2D.set_linestyle:17 of
msgid "dash-dotted line"
msgstr "línea punteada en guión"

#: matplotlib.lines.Line2D.set_linestyle:18 of
msgid "``':'`` or ``'dotted'``"
msgstr "``':'`` o ``'dotted'``"

#: matplotlib.lines.Line2D.set_linestyle:18 of
msgid "dotted line"
msgstr "línea de puntos"

#: matplotlib.lines.Line2D.set_linestyle:19 of
msgid "``'none'``, ``'None'``, ``' '``, or ``''``"
msgstr "``'ninguno '``, ``'Ninguno'``, ``' '``, o ``''``"

#: matplotlib.lines.Line2D.set_linestyle:19 of
msgid "draw nothing"
msgstr "no dibujar"

#: matplotlib.lines.Line2D.set_linestyle:22 of
msgid "Alternatively a dash tuple of the following form can be provided::"
msgstr "Alternativamente se puede proporcionar una tupla de guión de la siguiente forma::"

#: matplotlib.lines.Line2D.set_linestyle:27 of
msgid "where ``onoffseq`` is an even length tuple of on and off ink in points. See also :meth:`set_dashes`."
msgstr "donde ``onoffseq`` es una tupla de longitud uniforme de tinta encendida y apagada en puntos. Ver también :meth:`set_dashes`."

#: matplotlib.lines.Line2D.set_linestyle:30 of
msgid "For examples see :doc:`/gallery/lines_bars_and_markers/linestyles`."
msgstr "Para ejemplos vea :doc:`/gallery/lines_bars_and_markers/linestyles`."

#: matplotlib.lines.Line2D.set_linewidth:2 of
msgid "Set the line width in points."
msgstr "Establecer el ancho de la línea en puntos."

#: matplotlib.lines.Line2D.set_linewidth:21 of
msgid "**w**"
msgstr "**w**"

#: matplotlib.lines.Line2D.set_linewidth:8 of
msgid "Line width, in points."
msgstr "Ancho de línea, en puntos."

#: matplotlib.lines.Line2D.set_linestyle:2 of
msgid "Alias for `set_linestyle`."
msgstr "Alias para `set_linestyle`."

#: matplotlib.lines.Line2D.set_linewidth:2 of
msgid "Alias for `set_linewidth`."
msgstr "Alias para `set_linewidth`."

#: matplotlib.lines.Line2D.set_marker:2 of
msgid "Set the line marker."
msgstr "Establecer marcador de línea."

#: matplotlib.lines.Line2D.set_marker:22 of
msgid "**marker** : marker style string, `~.path.Path` or `~.markers.MarkerStyle`"
msgstr "**marcador** : cadena de estilo marcador, `~.path.Path` o `~.markers.MarkerStyle`"

#: of
msgid "marker style string,"
msgstr "cadena de estilo marcador,"

#: matplotlib.lines.Line2D.set_marker:8 of
msgid "See `~matplotlib.markers` for full description of possible arguments."
msgstr "Vea `~matplotlib.markers` para una descripción completa de los posibles argumentos."

#: matplotlib.lines.Line2D.set_markeredgecolor:2 of
msgid "Set the marker edge color."
msgstr "Establecer el color del borde del marcador."

#: matplotlib.lines.Line2D.set_markeredgecolor:21 of
msgid "**ec**"
msgstr "**ec**"

#: matplotlib.lines.Line2D.set_markeredgewidth:2 of
msgid "Set the marker edge width in points."
msgstr "Ajuste el ancho del borde del marcador en puntos."

#: matplotlib.lines.Line2D.set_markeredgewidth:21 of
msgid "**ew**"
msgstr "**ew**"

#: matplotlib.lines.Line2D.set_markeredgewidth:8 of
msgid "Marker edge width, in points."
msgstr "Ancho de borde marcador, en puntos."

#: matplotlib.lines.Line2D.set_markerfacecolor:2 of
msgid "Set the marker face color."
msgstr "Establece el color de la cara del marcador."

#: matplotlib.lines.Line2D.set_markerfacecolor:21
#: matplotlib.lines.Line2D.set_markerfacecoloralt:21 of
msgid "**fc**"
msgstr "**fc**"

#: matplotlib.lines.Line2D.set_markerfacecoloralt:2 of
msgid "Set the alternate marker face color."
msgstr "Establece el color alternativo del marcador de cara."

#: matplotlib.lines.Line2D.set_markersize:2 of
msgid "Set the marker size in points."
msgstr "Establecer el tamaño del marcador en puntos."

#: matplotlib.lines.Line2D.set_markersize:21 of
msgid "**sz**"
msgstr "**sz**"

#: matplotlib.lines.Line2D.set_markersize:8 of
msgid "Marker size, in points."
msgstr "Tamaño del marcador, en puntos."

#: matplotlib.lines.Line2D.set_markevery:2 of
msgid "Set the markevery property to subsample the plot when using markers."
msgstr "Establezca la propiedad markevery para suplir la parcela al usar marcadores."

#: matplotlib.lines.Line2D.set_markevery:4 of
msgid "e.g., if ``every=5``, every 5-th marker will be plotted."
msgstr "por ejemplo, si ``cada=5``, cada 5-décimo marcador será trazado."

#: matplotlib.lines.Line2D.set_markevery:43 of
msgid "**every**"
msgstr "**cada**"

#: matplotlib.lines.Line2D.set_markevery:9 of
msgid "Which markers to plot."
msgstr "Qué marcadores trazar."

#: matplotlib.lines.Line2D.set_markevery:11 of
msgid "``every=None``: every point will be plotted."
msgstr "``cada=n``: cada punto será trazado."

#: matplotlib.lines.Line2D.set_markevery:12 of
msgid "``every=N``: every N-th marker will be plotted starting with marker 0."
msgstr "``cada=N``: cada marcador N-th será trazado comenzando con el marcador 0."

#: matplotlib.lines.Line2D.set_markevery:14 of
msgid "``every=(start, N)``: every N-th marker, starting at index *start*, will be plotted."
msgstr "``every=(start, N)``: cada marcador N-th, comenzando en índice *start*, será trazado."

#: matplotlib.lines.Line2D.set_markevery:16 of
msgid "``every=slice(start, end, N)``: every N-th marker, starting at index *start*, up to but not including index *end*, will be plotted."
msgstr "``every=slice(start, end, N)``: cada marcador N-th, comenzando en el índice *start*, hasta que no incluya el índice *end*, se trazará."

#: matplotlib.lines.Line2D.set_markevery:19 of
msgid "``every=[i, j, m, ...]``: only markers at the given indices will be plotted."
msgstr "``cada=[i, j, m, ...]``: sólo se trazarán los marcadores en los índices dados."

#: matplotlib.lines.Line2D.set_markevery:21 of
msgid "``every=[True, False, True, ...]``: only positions that are True will be plotted. The list must have the same length as the data points."
msgstr "``cada=[Verdadero, False, Verdadero...]``: sólo las posiciones que son Verdaderas serán trazadas. La lista debe tener la misma longitud que los puntos de datos."

#: matplotlib.lines.Line2D.set_markevery:24 of
msgid "``every=0.1``, (i.e. a float): markers will be spaced at approximately equal visual distances along the line; the distance along the line between markers is determined by multiplying the display-coordinate distance of the axes bounding-box diagonal by the value of *every*."
msgstr "``cada=0.1``, (i.e. un float): los marcadores se espaciarán a distancias visuales aproximadamente iguales a lo largo de la línea; la distancia a lo largo de la línea entre los marcadores se determina multiplicando la distancia de las coordenadas de visualización de los ejes que delimitan el valor de *cada*."

#: matplotlib.lines.Line2D.set_markevery:29 of
msgid "``every=(0.5, 0.1)`` (i.e. a length-2 tuple of float): similar to ``every=0.1`` but the first marker will be offset along the line by 0.5 multiplied by the display-coordinate-diagonal-distance along the line."
msgstr "``every=(0.5, 0.1)`` (es decir, una tupla de longitud 2 de float): similar a ``every=0. `` pero el primer marcador será compensado a lo largo de la línea por 0.5 multiplicado por el display-coordinate-diagonal-distancia a lo largo de la línea."

#: matplotlib.lines.Line2D.set_markevery:34 of
msgid "For examples see :doc:`/gallery/lines_bars_and_markers/markevery_demo`."
msgstr "Para ejemplos vea :doc:`/gallery/lines_bars_and_markers/markevery_demo`."

#: matplotlib.lines.Line2D.set_markevery:47 of
msgid "Setting *markevery* will still only draw markers at actual data points. While the float argument form aims for uniform visual spacing, it has to coerce from the ideal spacing to the nearest available data point. Depending on the number and distribution of data points, the result may still not look evenly spaced."
msgstr "Establecer *marcador cada* sólo dibujará marcadores en puntos de datos reales. Mientras que el argumento flotante tiene como objetivo un espaciado visual uniforme, tiene que coaccionar desde el espaciado ideal hasta el punto de datos disponible más cercano. Dependiendo del número y de la distribución de los puntos de datos, el resultado puede no parecer uniformemente espaciado."

#: matplotlib.lines.Line2D.set_markevery:53 of
msgid "When using a start offset to specify the first marker, the offset will be from the first data point which may be different from the first the visible data point if the plot is zoomed in."
msgstr "Cuando se utiliza un desplazamiento inicial para especificar el primer marcador, el desplazamiento será desde el primer punto de datos, el cual puede ser diferente del primer punto de datos visibles si la parcela está encendida."

#: matplotlib.lines.Line2D.set_markevery:57 of
msgid "If zooming in on a plot when using float arguments then the actual data points that have markers will change because the distance between markers is always determined from the display-coordinates axes-bounding-box-diagonal regardless of the actual axes data limits."
msgstr "Si se encajan en una parcela cuando se usan argumentos flotantes, los puntos de datos reales que tienen marcadores cambiarán porque la distancia entre los marcadores siempre se determina a partir de los ejes de las coordenadas de visualización que delimitan los ejes, independientemente de los límites de datos de los ejes reales."

#: matplotlib.lines.Line2D.set_markeredgecolor:2 of
msgid "Alias for `set_markeredgecolor`."
msgstr "Alias para `set_markeredgecolor`."

#: matplotlib.lines.Line2D.set_markeredgewidth:2 of
msgid "Alias for `set_markeredgewidth`."
msgstr "Alias para `set_markeredgewidth`."

#: matplotlib.lines.Line2D.set_markerfacecolor:2 of
msgid "Alias for `set_markerfacecolor`."
msgstr "Alias para `set_markerfacecolor`."

#: matplotlib.lines.Line2D.set_markerfacecoloralt:2 of
msgid "Alias for `set_markerfacecoloralt`."
msgstr "Alias para `set_markerfacecoloralt`."

#: matplotlib.lines.Line2D.set_markersize:2 of
msgid "Alias for `set_markersize`."
msgstr "Alias para `set_markersize`."

#: matplotlib.lines.Line2D.set_picker:2 of
msgid "Set the event picker details for the line."
msgstr "Establecer los detalles del selector de eventos para la línea."

#: matplotlib.lines.Line2D.set_picker:21 of
msgid "**p**"
msgstr "**p**"

#: matplotlib.lines.Line2D.set_picker:8 of
msgid "If a float, it is used as the pick radius in points."
msgstr "Si un flotante, se utiliza como el radio de selección en puntos."

#: matplotlib.lines.Line2D.set_pickradius:2 of
msgid "Set the pick radius used for containment tests."
msgstr "Establece el radio de selección utilizado para las pruebas de contención."

#: matplotlib.lines.Line2D.set_pickradius:22 of
msgid "**d**"
msgstr "**d**"

#: matplotlib.lines.Line2D.set_pickradius:9 of
msgid "Pick radius, in points."
msgstr "Elegir el radio, en puntos."

#: matplotlib.lines.Line2D.set_solid_capstyle:2 of
msgid "How to draw the end caps if the line is solid (not `~Line2D.is_dashed`)"
msgstr "Cómo dibujar los topes finales si la línea es sólida (no `~Line2D.is_dashed`)"

#: matplotlib.lines.Line2D.set_solid_joinstyle:2 of
msgid "How to join segments if the line is solid (not `~Line2D.is_dashed`)."
msgstr "Cómo unir segmentos si la línea es sólida (no `~Line2D.is_dashed`)."

#: matplotlib.lines.Line2D.set_transform:2 of
msgid "Set the artist transform."
msgstr "Establece la transformación del artista."

#: matplotlib.lines.Line2D.set_transform:21 of
msgid "**t** : `.Transform`"
msgstr "**t** : `.Transform`"

#: matplotlib.lines.Line2D.set_transform:20 of
msgid "Transform"
msgstr "Transformar"

#: matplotlib.lines.Line2D.set_xdata:2 of
msgid "Set the data array for x."
msgstr "Establecer la matriz de datos para x."

#: matplotlib.lines.Line2D.set_xdata:21 of
msgid "**x**"
msgstr "**x**"

#: matplotlib.lines.Line2D.set_ydata:2 of
msgid "Set the data array for y."
msgstr "Establecer la matriz de datos para y."

#: matplotlib.lines.Line2D.set_ydata:21 of
msgid "**y**"
msgstr "**y**"

#: matplotlib.lines.Line2D.update_from:2 of
msgid "Copy properties from *other* to self."
msgstr "Copiar propiedades de *otro* a sí mismo."

#: ../../../../../../../../api/_as_gen/matplotlib.lines.Line2D.examples:2
msgid "Examples using ``matplotlib.lines.Line2D``"
msgstr "Ejemplos usando ``matplotlib.lines.Line2D``"

#: ../../api/_as_gen/matplotlib.lines.Line2D.examples:10
msgid "The double pendulum problem"
msgstr "El problema del doble péndulo"

#: ../../api/_as_gen/matplotlib.lines.Line2D.examples:10
#: ../../api/_as_gen/matplotlib.lines.Line2D.examples:18
msgid ":ref:`sphx_glr_gallery_animation_double_pendulum.py`"
msgstr ":ref:`sphx_glr_gallery_animation_double_pendulum.py`"

