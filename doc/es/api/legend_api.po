msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/legend_api.po\n"
"X-Crowdin-File-ID: 1796\n"
"Language: es_ES\n"

#: ../../api/legend_api.rst:3
msgid "``matplotlib.legend``"
msgstr "``matplotlib.legend``"

#: matplotlib.legend:1 of
msgid "The legend module defines the Legend class, which is responsible for drawing legends associated with axes and/or figures."
msgstr "El módulo de leyenda define la clase Leyenda, que es responsable de dibujar leyendas asociadas con ejes y/o figuras."

#: matplotlib.legend:6 of
msgid "It is unlikely that you would ever create a Legend instance manually. Most users would normally create a legend via the `~.Axes.legend` function. For more details on legends there is also a :doc:`legend guide </tutorials/intermediate/legend_guide>`."
msgstr "Es poco probable que crees una instancia de Leyenda manualmente. La mayoría de los usuarios normalmente crearían una leyenda a través del `~. función xes.legend`. Para más detalles sobre las leyendas, también hay una :doc:`guía de leyenda </tutorials/intermediate/legend_guide>`."

#: matplotlib.legend:11 of
msgid "The `Legend` class is a container of legend handles and legend texts."
msgstr "La clase `Legend` es un contenedor de asas de leyenda y textos de leyenda."

#: matplotlib.legend:13 of
msgid "The legend handler map specifies how to create legend handles from artists (lines, patches, etc.) in the axes or figures. Default legend handlers are defined in the :mod:`~matplotlib.legend_handler` module. While not all artist types are covered by the default legend handlers, custom legend handlers can be defined to support arbitrary objects."
msgstr "El mapa del manejador de leyendas especifica cómo crear asas de leyendas de artistas (líneas, parches, etc.). en los ejes o figuras. Los manejadores predeterminados de leyendas se definen en el :mod:`~matplotlib. módulo egend_handler`. Aunque no todos los tipos de artistas están cubiertos por los manejadores de leyendas predeterminados, los manejadores de leyendas personalizados pueden ser definidos para soportar objetos arbitrarios."

#: matplotlib.legend:19 of
msgid "See the :doc:`legend guide </tutorials/intermediate/legend_guide>` for more information."
msgstr "Mira la :doc:`guía de leyenda </tutorials/intermediate/legend_guide>` para más información."

#: matplotlib.legend.DraggableLegend:1 of
msgid "Bases: :py:class:`matplotlib.offsetbox.DraggableOffsetBox`"
msgstr "Bases: :py:class:`matplotlib.offsetbox.DraggableOffsetBox`"

#: matplotlib.legend.DraggableLegend:2 of
msgid "Wrapper around a `.Legend` to support mouse dragging."
msgstr "Envuelve alrededor de un `.Legend` para soportar el arrastre del ratón."

#: matplotlib.legend.DraggableLegend matplotlib.legend.Legend
#: matplotlib.legend.Legend.contains matplotlib.legend.Legend.draw
#: matplotlib.legend.Legend.get_tightbbox
#: matplotlib.legend.Legend.set_bbox_to_anchor
#: matplotlib.legend.Legend.set_draggable matplotlib.legend.Legend.set_frame_on
#: of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.legend.DraggableLegend:8 of
msgid "**legend** : `.Legend`"
msgstr "**leyenda** : `.Legend`"

#: matplotlib.legend.DraggableLegend:7 of
msgid "Legend"
msgstr "Leyenda"

#: matplotlib.legend.DraggableLegend:8 of
msgid "The `.Legend` instance to wrap."
msgstr "La instancia `.Legend` a envolver."

#: matplotlib.legend.DraggableLegend:12
#: matplotlib.legend.Legend.set_draggable:12 of
msgid "**use_blit**"
msgstr "**usar_blit**"

#: of
msgid "bool, optional"
msgstr "bool, optional"

#: matplotlib.legend.DraggableLegend:11
#: matplotlib.legend.Legend.set_draggable:11 of
msgid "Use blitting for faster image composition. For details see :ref:`func-animation`."
msgstr "Usa el flote para una composición de imagen más rápida. Para más detalles, consulta :ref:`func-animation`."

#: matplotlib.legend.DraggableLegend:29
#: matplotlib.legend.Legend.set_draggable:18 of
msgid "**update**"
msgstr "**actualización**"

#: of
msgid "{'loc', 'bbox'}, optional"
msgstr "{'loc', 'bbox'}, opcional"

#: matplotlib.legend.DraggableLegend:15 of
msgid "If \"loc\", update the *loc* parameter of the legend upon finalizing. If \"bbox\", update the *bbox_to_anchor* parameter."
msgstr "Si \"loc\", actualice el parámetro *loc* de la leyenda al finalizar. Si \"bbox\", actualice el parámetro *bbox_to_anchor*."

#: matplotlib.legend.Legend:1 of
msgid "Bases: :py:class:`matplotlib.artist.Artist`"
msgstr "Bases: :py:class:`matplotlib.artist.Artist`"

#: matplotlib.legend.Legend:2 of
msgid "Place a legend on the axes at location loc."
msgstr "Coloca una leyenda en los ejes en la localización."

#: matplotlib.legend.Legend:29 of
msgid "**parent** : `~matplotlib.axes.Axes` or `.Figure`"
msgstr "**parente** : `~matplotlib.axes.Axes` o `.Figure`"

#: matplotlib.legend.Legend:28 of
msgid "Axes or Figure"
msgstr "Ejes o Figura"

#: matplotlib.legend.Legend:29 of
msgid "The artist that contains the legend."
msgstr "El artista que contiene la leyenda."

#: matplotlib.legend.Legend:32 of
msgid "**handles** : list of `.Artist`"
msgstr "**handles** : lista de `.Artist`"

#: of
msgid "list of"
msgstr "lista de"

#: matplotlib.legend.Legend:32 of
msgid "A list of Artists (lines, patches) to be added to the legend."
msgstr "Una lista de Artistas (líneas, parches) a añadir a la leyenda."

#: matplotlib.legend.Legend:40 of
msgid "**labels**"
msgstr "**labels**"

#: of
msgid "list of str"
msgstr "lista de str"

#: matplotlib.legend.Legend:35 of
msgid "A list of labels to show next to the artists. The length of handles and labels should be the same. If they are not, they are truncated to the smaller of both lengths."
msgstr "Una lista de etiquetas para mostrar junto a los artistas, la longitud de las asas y las etiquetas debe ser la misma. Si no lo son, son truncados a las dos longitudes menores."

#: matplotlib.legend.Legend of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.legend.Legend:85 of
msgid "**loc** : str or pair of floats, default: :rc:`legend.loc` ('best' for axes, 'upper right' for figures)"
msgstr "**loc** : str o par de floats, por defecto: :rc:`legend.loc` ('mejor' para ejes, 'superior derecha' para figuras)"

#: of
msgid "str or pair of floats, default:"
msgstr "str o par de flotantes, por defecto:"

#: matplotlib.legend.Legend:45 of
msgid "The location of the legend."
msgstr "La ubicación de la leyenda."

#: matplotlib.legend.Legend:47 of
msgid "The strings ``'upper left', 'upper right', 'lower left', 'lower right'`` place the legend at the corresponding corner of the axes/figure."
msgstr "Las cadenas ``'superior izquierda', 'superior derecha', 'inferior izquierda', 'inferior derecha'`` colocan la leyenda en la esquina correspondiente de los ejes/figura."

#: matplotlib.legend.Legend:51 of
msgid "The strings ``'upper center', 'lower center', 'center left', 'center right'`` place the legend at the center of the corresponding edge of the axes/figure."
msgstr "Las cadenas ``'centro superior', 'centro inferior', 'centro izquierda', 'centro derecha'`` colocan la leyenda en el centro del borde correspondiente de los ejes/figura."

#: matplotlib.legend.Legend:56 of
msgid "The string ``'center'`` places the legend at the center of the axes/figure."
msgstr "La cadena ``'center'`` coloca la leyenda en el centro de los ejes/figura."

#: matplotlib.legend.Legend:58 of
msgid "The string ``'best'`` places the legend at the location, among the nine locations defined so far, with the minimum overlap with other drawn artists.  This option can be quite slow for plots with large amounts of data; your plotting speed may benefit from providing a specific location."
msgstr "La cadena ``'mejor'`` coloca la leyenda en la ubicación, entre los nueve lugares definidos hasta ahora, con la superposición mínima con otros artistas dibujados. Esta opción puede ser bastante lenta para parcelas con grandes cantidades de datos; su velocidad de trazado puede beneficiarse al proporcionar una ubicación específica."

#: matplotlib.legend.Legend:63 of
msgid "The location can also be a 2-tuple giving the coordinates of the lower-left corner of the legend in axes coordinates (in which case *bbox_to_anchor* will be ignored)."
msgstr "La ubicación también puede ser una doble tupla dando las coordenadas de la esquina inferior izquierda de la leyenda en las coordenadas de los ejes (en cuyo caso se ignorará *bbox_to_anchor*)."

#: matplotlib.legend.Legend:67 of
msgid "For back-compatibility, ``'center right'`` (but no other location) can also be spelled ``'right'``, and each \"string\" locations can also be given as a numeric value:"
msgstr "Para back-compatibility, ``'center right'`` (pero ninguna otra ubicación) también puede ser escrita ``'right'``, y cada ubicación \"string\" también puede ser dada como un valor numérico:"

#: matplotlib.legend.Legend:72 of
msgid "Location String"
msgstr "Cadena de ubicación"

#: matplotlib.legend.Legend:72 of
msgid "Location Code"
msgstr "Código de ubicación"

#: matplotlib.legend.Legend:74 of
msgid "'best'"
msgstr "\"Mejor\""

#: matplotlib.legend.Legend:74 of
msgid "0"
msgstr "0"

#: matplotlib.legend.Legend:75 of
msgid "'upper right'"
msgstr "\"superior derecha\""

#: matplotlib.legend.Legend:75 of
msgid "1"
msgstr "1"

#: matplotlib.legend.Legend:76 of
msgid "'upper left'"
msgstr "'superior izquierda'"

#: matplotlib.legend.Legend:76 of
msgid "2"
msgstr "2"

#: matplotlib.legend.Legend:77 of
msgid "'lower left'"
msgstr "'inferior izquierda'"

#: matplotlib.legend.Legend:77 of
msgid "3"
msgstr "3"

#: matplotlib.legend.Legend:78 of
msgid "'lower right'"
msgstr "\"bajar derecha\""

#: matplotlib.legend.Legend:78 of
msgid "4"
msgstr "4"

#: matplotlib.legend.Legend:79 of
msgid "'right'"
msgstr "\"derecha\""

#: matplotlib.legend.Legend:79 of
msgid "5"
msgstr "5"

#: matplotlib.legend.Legend:80 of
msgid "'center left'"
msgstr "'centro izquierda'"

#: matplotlib.legend.Legend:80 of
msgid "6"
msgstr "6"

#: matplotlib.legend.Legend:81 of
msgid "'center right'"
msgstr "'centro derecha'"

#: matplotlib.legend.Legend:81 of
msgid "7"
msgstr "7"

#: matplotlib.legend.Legend:82 of
msgid "'lower center'"
msgstr "'centro inferior'"

#: matplotlib.legend.Legend:82 of
msgid "8"
msgstr "8"

#: matplotlib.legend.Legend:83 of
msgid "'upper center'"
msgstr "'centro superior'"

#: matplotlib.legend.Legend:83 of
msgid "9"
msgstr "9"

#: matplotlib.legend.Legend:84 of
msgid "'center'"
msgstr "'centro'"

#: matplotlib.legend.Legend:84 of
msgid "10"
msgstr "10"

#: matplotlib.legend.Legend:108 of
msgid "**bbox_to_anchor** : `.BboxBase`, 2-tuple, or 4-tuple of floats"
msgstr "**bbox_to_anchor** : `.BboxBase`, 2-tuple, o 4-tuple de puntos flotantes (floats)"

#: matplotlib.legend.Legend:107 of
msgid "BboxBase, 2-tuple, or 4-tuple of floats"
msgstr "BboxBase, 2-tuple, o 4-tuple de puntos flotantes (floats)"

#: matplotlib.legend.Legend:88 of
msgid "Box that is used to position the legend in conjunction with *loc*. Defaults to `axes.bbox` (if called as a method to `.Axes.legend`) or `figure.bbox` (if `.Figure.legend`).  This argument allows arbitrary placement of the legend."
msgstr "Caja que se utiliza para colocar la leyenda en conjunto con *loc*. Por defecto es `axes.bbox` (si se llama como método a `. xes.legend`) o `figure.bbox` (si `.Figure.legend`). Este argumento permite la colocación arbitraria de la leyenda."

#: matplotlib.legend.Legend:93 of
msgid "Bbox coordinates are interpreted in the coordinate system given by *bbox_transform*, with the default transform Axes or Figure coordinates, depending on which ``legend`` is called."
msgstr "Las coordenadas de la caja se interpretan en el sistema de coordenadas dado por *bbox_transform*, con las coordenadas de transformación por defecto de los ejes o Figuras, dependiendo de qué ``leyend``."

#: matplotlib.legend.Legend:97 of
msgid "If a 4-tuple or `.BboxBase` is given, then it specifies the bbox ``(x, y, width, height)`` that the legend is placed in. To put the legend in the best location in the bottom right quadrant of the axes (or figure)::"
msgstr "Si se da un 4-tuple o `.BboxBase`, entonces especifica el bbox ``(x, y, anchura, altura)`` en el que se coloca la leyenda. Poner la leyenda en la mejor ubicación en el cuadrante inferior derecho de los ejes (o figura)::"

#: matplotlib.legend.Legend:104 of
msgid "A 2-tuple ``(x, y)`` places the corner of the legend specified by *loc* at x, y.  For example, to put the legend's upper right-hand corner in the center of the axes (or figure) the following keywords can be used::"
msgstr "Una 2-tupla ``(x, y)`` coloca la esquina de la leyenda especificada por *loc* en x, y. Por ejemplo, para colocar la esquina superior derecha de la leyenda en el centro de los ejes (o figura) se pueden utilizar las siguientes palabras clave::"

#: matplotlib.legend.Legend:111 of
msgid "**ncol**"
msgstr "**ncol**"

#: of
msgid "int, default: 1"
msgstr "int, por defecto: 1"

#: matplotlib.legend.Legend:111 of
msgid "The number of columns that the legend has."
msgstr "El número de columnas que tiene la leyenda."

#: matplotlib.legend.Legend:115 of
msgid "**prop** : None or `matplotlib.font_manager.FontProperties` or dict"
msgstr "**prop** : Ninguno o `matplotlib.font_manager.FontProperties` o dictado"

#: of
msgid "None or"
msgstr "None o"

#: matplotlib.legend.Legend:114 of
msgid "The font properties of the legend. If None (default), the current :data:`matplotlib.rcParams` will be used."
msgstr "Las propiedades de fuente de la leyenda. Si ninguna (por defecto), se utilizará el :data:actual `matplotlib.rcParams`."

#: matplotlib.legend.Legend:120 of
msgid "**fontsize**"
msgstr "**fontsize**"

#: of
msgid "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
msgstr "int o {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"

#: matplotlib.legend.Legend:118 of
msgid "The font size of the legend. If the value is numeric the size will be the absolute font size in points. String values are relative to the current default font size. This argument is only used if *prop* is not specified."
msgstr "El tamaño de fuente de la leyenda. Si el valor es numérico el tamaño será el tamaño absoluto de la fuente en puntos. Los valores de cadena son relativos al tamaño de fuente predeterminado actual. Este argumento sólo se utiliza si *prop* no se especifica."

#: matplotlib.legend.Legend:129 of
msgid "**labelcolor** : str or list, default: :rc:`legend.labelcolor`"
msgstr "**labelcolor** : str o lista, por defecto: :rc:`legend.labelcolor`"

#: of
msgid "str or list, default:"
msgstr "str o lista, por defecto:"

#: matplotlib.legend.Legend:123 of
msgid "The color of the text in the legend. Either a valid color string (for example, 'red'), or a list of color strings. The labelcolor can also be made to match the color of the line or marker using 'linecolor', 'markerfacecolor' (or 'mfc'), or 'markeredgecolor' (or 'mec')."
msgstr "El color del texto en la leyenda. Una cadena de color válida (por ejemplo, 'rojo'), o una lista de cadenas de colores. El color de la etiqueta también puede ser hecho para que coincida con el color de la línea o marcador usando 'color lineal', 'color marcador' (o 'mfc'), o 'color marcador' (o 'mec')."

#: matplotlib.legend.Legend:128 of
msgid "Labelcolor can be set globally using :rc:`legend.labelcolor`. If None, use :rc:`text.color`."
msgstr "El color de etiqueta puede establecerse globalmente usando :rc:`legend.labelcolor`. Si no, utilice :rc:`text.color`."

#: matplotlib.legend.Legend:133 of
msgid "**numpoints** : int, default: :rc:`legend.numpoints`"
msgstr "**numpoints** : int, por defecto: :rc:`legend.numpoints`"

#: of
msgid "int, default:"
msgstr "int, por defecto:"

#: matplotlib.legend.Legend:132 of
msgid "The number of marker points in the legend when creating a legend entry for a `.Line2D` (line)."
msgstr "El número de puntos de marcador en la leyenda al crear una entrada de leyenda para un `.Line2D` (línea)."

#: matplotlib.legend.Legend:137 of
msgid "**scatterpoints** : int, default: :rc:`legend.scatterpoints`"
msgstr "**scatterpoints** : int, por defecto: :rc:`legend.scatterpoints`"

#: matplotlib.legend.Legend:136 of
msgid "The number of marker points in the legend when creating a legend entry for a `.PathCollection` (scatter plot)."
msgstr "El número de puntos marcadores en la leyenda cuando se crea una entrada de leyenda para un `.PathCollection` (diagrama de dispersión)."

#: matplotlib.legend.Legend:143 of
msgid "**scatteryoffsets** : iterable of floats, default: ``[0.375, 0.5, 0.3125]``"
msgstr "**scatteryoffsets** : iterable de flotantes, por defecto: ``[0.375, 0.5, 0.3125]``"

#: of
msgid "iterable of floats, default:"
msgstr "iterable de flotantes, por defecto:"

#: matplotlib.legend.Legend:140 of
msgid "The vertical offset (relative to the font size) for the markers created for a scatter plot legend entry. 0.0 is at the base the legend text, and 1.0 is at the top. To draw all markers at the same height, set to ``[0.5]``."
msgstr "El desplazamiento vertical (relativo al tamaño de la fuente) para los marcadores creados para una entrada de leyenda de diapositivas scatter. está en la base del texto de la leyenda, y 1.0 está en la parte superior. Para dibujar todos los marcadores a la misma altura, ajusta a ``[0.5]``."

#: matplotlib.legend.Legend:147 of
msgid "**markerscale** : float, default: :rc:`legend.markerscale`"
msgstr "**markerscale** : float, por defecto: :rc:`legend.markerscale`"

#: of
msgid "float, default:"
msgstr "flotante, por defecto:"

#: matplotlib.legend.Legend:146 of
msgid "The relative size of legend markers compared with the originally drawn ones."
msgstr "El tamaño relativo de los marcadores de leyenda en comparación con los originalmente dibujados."

#: matplotlib.legend.Legend:151 of
msgid "**markerfirst**"
msgstr "**markerfirst**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.legend.Legend:150 of
msgid "If *True*, legend marker is placed to the left of the legend label. If *False*, legend marker is placed to the right of the legend label."
msgstr "Si *Verdadero*, el marcador de leyenda se coloca a la izquierda de la etiqueta de leyenda. Si *False*, el marcador de leyenda se coloca a la derecha de la etiqueta de la leyenda."

#: matplotlib.legend.Legend:154 of
msgid "**frameon** : bool, default: :rc:`legend.frameon`"
msgstr "**frameon** : bool, por defecto: :rc:`legend.frameon`"

#: of
msgid "bool, default:"
msgstr "bool, default:"

#: matplotlib.legend.Legend:154 of
msgid "Whether the legend should be drawn on a patch (frame)."
msgstr "Si la leyenda debe ser dibujada en un parche (fotograma)."

#: matplotlib.legend.Legend:158 of
msgid "**fancybox** : bool, default: :rc:`legend.fancybox`"
msgstr "**fancybox** : bool, default: :rc:`legend.fancybox`"

#: matplotlib.legend.Legend:157 of
msgid "Whether round edges should be enabled around the `.FancyBboxPatch` which makes up the legend's background."
msgstr "Si los bordes redondos deben estar habilitados alrededor del `.FancyBboxPatch` que forma el fondo de la leyenda."

#: matplotlib.legend.Legend:161 of
msgid "**shadow** : bool, default: :rc:`legend.shadow`"
msgstr "**shadow** : bool, default: :rc:`legend.shadow`"

#: matplotlib.legend.Legend:161 of
msgid "Whether to draw a shadow behind the legend."
msgstr "Dibujar una sombra detrás de la leyenda."

#: matplotlib.legend.Legend:166 of
msgid "**framealpha** : float, default: :rc:`legend.framealpha`"
msgstr "**framealpha** : float, por defecto: :rc:`legend.framealpha`"

#: matplotlib.legend.Legend:164 of
msgid "The alpha transparency of the legend's background. If *shadow* is activated and *framealpha* is ``None``, the default value is ignored."
msgstr "La transparencia alfa del fondo de la leyenda. Si *sombra* está activado y *framealpha* es ``Ninguno``, el valor por defecto es ignorado."

#: matplotlib.legend.Legend:170 of
msgid "**facecolor** : \"inherit\" or color, default: :rc:`legend.facecolor`"
msgstr "**facecolor** : \"hereda\" o color, por defecto: :rc:`legend.facecolor`"

#: of
msgid "\"inherit\" or color, default:"
msgstr "\"hereda\" o color, por defecto:"

#: matplotlib.legend.Legend:169 of
msgid "The legend's background color. If ``\"inherit\"``, use :rc:`axes.facecolor`."
msgstr "Color de fondo de la leyenda. Si es ``\"hereda\"``, usa :rc:`axes.facecolor`."

#: matplotlib.legend.Legend:174 of
msgid "**edgecolor** : \"inherit\" or color, default: :rc:`legend.edgecolor`"
msgstr "**edgecolor** : \"hereda\" o color, por defecto: :rc:`legend.edgecolor`"

#: matplotlib.legend.Legend:173 of
msgid "The legend's background patch edge color. If ``\"inherit\"``, use take :rc:`axes.edgecolor`."
msgstr "Color del borde del parche de fondo de la leyenda. Si es ``\"heredad\"``, usa tomar :rc:`axes.edgecolor`."

#: matplotlib.legend.Legend:179 of
msgid "**mode**"
msgstr "**mode**"

#: of
msgid "{\"expand\", None}"
msgstr "{\"expandido\" (expandido)}"

#: matplotlib.legend.Legend:177 of
msgid "If *mode* is set to ``\"expand\"`` the legend will be horizontally expanded to fill the axes area (or *bbox_to_anchor* if defines the legend's size)."
msgstr "Si *mode* está establecido en ``\"ampliar\"`` la leyenda se expandirá horizontalmente para llenar el área de los ejes (o *bbox_to_anchor* si define el tamaño de la leyenda)."

#: matplotlib.legend.Legend:184 of
msgid "**bbox_transform** : None or `matplotlib.transforms.Transform`"
msgstr "**bbox_transform** : None o `matplotlib.transforms.Transform`"

#: matplotlib.legend.Legend:182 of
msgid "The transform for the bounding box (*bbox_to_anchor*). For a value of ``None`` (default) the Axes' :data:`~matplotlib.axes.Axes.transAxes` transform will be used."
msgstr "La transformación para la caja de límites (*bbox_to_anchor*). Para un valor de ``Ninguno`` (por defecto) se usarán los ejes :data:`~matplotlib.axes.Axes.transAxes` transformación."

#: matplotlib.legend.Legend:187 of
msgid "**title**"
msgstr "**título**"

#: of
msgid "str or None"
msgstr "str o None"

#: matplotlib.legend.Legend:187 of
msgid "The legend's title. Default is no title (``None``)."
msgstr "Título de la leyenda. Por defecto no es ningún título (``Ninguno``)."

#: matplotlib.legend.Legend:192 of
msgid "**title_fontproperties** : None or `matplotlib.font_manager.FontProperties` or dict"
msgstr "**title_fontproperties** : Ninguno o `matplotlib.font_manager.FontProperties` o dictado"

#: matplotlib.legend.Legend:190 of
msgid "The font properties of the legend's title. If None (default), the *title_fontsize* argument will be used if present; if *title_fontsize* is also None, the current :rc:`legend.title_fontsize` will be used."
msgstr "Las propiedades de la fuente del título de la leyenda. Si Ninguno (predeterminado), se utilizará el argumento *title_fontsize* si está presente; si *title_fontsize* también es Ninguno, se usará el :rc:`legend.title_fontsize` actual."

#: matplotlib.legend.Legend:198 of
msgid "**title_fontsize** : int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default: :rc:`legend.title_fontsize`"
msgstr "**title_fontsize** : int o {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, por defecto: :rc:`legend.title_fontsize`"

#: of
msgid "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default:"
msgstr "int o {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, por defecto:"

#: matplotlib.legend.Legend:195 of
msgid "The font size of the legend's title. Note: This cannot be combined with *title_fontproperties*. If you want to set the fontsize alongside other font properties, use the *size* parameter in *title_fontproperties*."
msgstr "El tamaño de la fuente del título de la leyenda. Nota: Esto no puede combinarse con *title_fontproperties*. Si desea establecer el tamaño de la fuente junto con otras propiedades de la fuente, utilice el parámetro *size* en *title_fontproperties*."

#: matplotlib.legend.Legend:201 of
msgid "**borderpad** : float, default: :rc:`legend.borderpad`"
msgstr "**borderpad** : float, por defecto: :rc:`legend.borderpad`"

#: matplotlib.legend.Legend:201 of
msgid "The fractional whitespace inside the legend border, in font-size units."
msgstr "El espacio en blanco fraccional dentro del borde de la leyenda, en unidades de tamaño de fuente."

#: matplotlib.legend.Legend:204 of
msgid "**labelspacing** : float, default: :rc:`legend.labelspacing`"
msgstr "**espacio de etiquetas** : flotante, por defecto: :rc:`legend.labelspacing`"

#: matplotlib.legend.Legend:204 of
msgid "The vertical space between the legend entries, in font-size units."
msgstr "El espacio vertical entre las entradas de la leyenda, en unidades de tamaño fuente."

#: matplotlib.legend.Legend:207 of
msgid "**handlelength** : float, default: :rc:`legend.handlelength`"
msgstr "**handlelength** : float, por defecto: :rc:`legend.handlelength`"

#: matplotlib.legend.Legend:207 of
msgid "The length of the legend handles, in font-size units."
msgstr "La longitud de la leyenda se mantiene, en unidades de tamaño de fuente."

#: matplotlib.legend.Legend:210 of
msgid "**handleheight** : float, default: :rc:`legend.handleheight`"
msgstr "**handleheight** : float, por defecto: :rc:`legend.handleheight`"

#: matplotlib.legend.Legend:210 of
msgid "The height of the legend handles, in font-size units."
msgstr "La altura de la leyenda se mantiene, en unidades de tamaño fuente."

#: matplotlib.legend.Legend:213 of
msgid "**handletextpad** : float, default: :rc:`legend.handletextpad`"
msgstr "**handletextpad** : float, por defecto: :rc:`legend.handletextpad`"

#: matplotlib.legend.Legend:213 of
msgid "The pad between the legend handle and text, in font-size units."
msgstr "La almohadilla entre el manejador de la leyenda y el texto, en unidades de tamaño de fuente."

#: matplotlib.legend.Legend:216 of
msgid "**borderaxespad** : float, default: :rc:`legend.borderaxespad`"
msgstr "**borderaxespad** : float, predeterminado: :rc:`legend.borderaxespad`"

#: matplotlib.legend.Legend:216 of
msgid "The pad between the axes and legend border, in font-size units."
msgstr "La almohadilla entre los ejes y el borde de la leyenda, en unidades de tamaño fuente."

#: matplotlib.legend.Legend:219 of
msgid "**columnspacing** : float, default: :rc:`legend.columnspacing`"
msgstr "**columnspacing** : float, por defecto: :rc:`legend.columnspacing`"

#: matplotlib.legend.Legend:219 of
msgid "The spacing between columns, in font-size units."
msgstr "El espacio entre columnas, en unidades de tamaño de fuente."

#: matplotlib.legend.Legend:228 of
msgid "**handler_map**"
msgstr "**handler_map**"

#: of
msgid "dict or None"
msgstr "dict o None"

#: matplotlib.legend.Legend:222 of
msgid "The custom dictionary mapping instances or types to a legend handler. This *handler_map* updates the default handler map found at `matplotlib.legend.Legend.get_legend_handler_map`."
msgstr "The custom dictionary mapping instances or types to a legend handler. This *handler_map* updates the default handler map found at `matplotlib.legend.Legend.get_legend_handler_map`."

#: matplotlib.legend.Legend:231 matplotlib.legend.Legend.draw:21 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.legend.Legend:232 of
msgid "Users can specify any arbitrary location for the legend using the *bbox_to_anchor* keyword argument. *bbox_to_anchor* can be a `.BboxBase` (or derived there from) or a tuple of 2 or 4 floats. See `set_bbox_to_anchor` for more detail."
msgstr "Los usuarios pueden especificar cualquier ubicación arbitraria para la leyenda usando el argumento de palabra clave *bbox_to_anchor*. *bbox_to_anchor* puede ser un `. boxBase` (o derivado de allí) o una tupla de 2 o 4 flotantes. Vea `set_bbox_to_anchor` para más detalles."

#: matplotlib.legend.Legend:237 of
msgid "The legend location can be specified by setting *loc* with a tuple of 2 floats, which is interpreted as the lower-left corner of the legend in the normalized axes coordinate."
msgstr "La ubicación de la leyenda se puede especificar estableciendo *loc* con una tupla de 2 flotantes, que se interpreta como la esquina inferior izquierda de la leyenda en la coordenada de los ejes normalizados."

#: matplotlib.legend.Legend.contains:2 of
msgid "Test whether the artist contains the mouse event."
msgstr "Prueba si el artist contiene el evento del ratón."

#: matplotlib.legend.Legend.contains:8 of
msgid "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"
msgstr "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"

#: matplotlib.legend.Legend.contains:7 of
msgid "matplotlib.backend_bases.MouseEvent"
msgstr "matplotlib.backend_bases.MouseEvent"

#: matplotlib.legend.Legend.contains matplotlib.legend.Legend.get_tightbbox
#: matplotlib.legend.Legend.set_draggable of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.legend.Legend.contains:13 of
msgid "**contains**"
msgstr "**contains**"

#: matplotlib.artist.Legend.set:14 matplotlib.artist.Legend.set:17
#: matplotlib.artist.Legend.set:19 matplotlib.artist.Legend.set:21
#: matplotlib.artist.Legend.set:23 matplotlib.artist.Legend.set:27
#: matplotlib.artist.Legend.set:33 of
msgid "bool"
msgstr "bool"

#: matplotlib.legend.Legend.contains:13 of
msgid "Whether any values are within the radius."
msgstr "Si cualquier valor está dentro del radio."

#: matplotlib.legend.Legend.contains:30 of
msgid "**details**"
msgstr "**details**"

#: of
msgid "dict"
msgstr "dict"

#: matplotlib.legend.Legend.contains:16 of
msgid "An artist-specific dictionary of details of the event context, such as which points are contained in the pick radius. See the individual Artist subclasses for details."
msgstr "Un diccionario específico del artist con detalles del contexto del evento, como por ejemplo qué puntos están contenidos en el radio de selección. Consulta las subclases individuales de Artist para obtener más detalles."

#: matplotlib.legend.Legend.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr "Dibuja el Artist (y sus hijos) usando el renderizador dado."

#: matplotlib.legend.Legend.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr "Esto no tiene efecto si el artist no es visible (`.Artist.get_visible` devuelve False)."

#: matplotlib.legend.Legend.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr "**renderer** : `.RendererBase` subclase."

#: matplotlib.legend.Legend.draw:17 of
msgid "RendererBase subclass."
msgstr "Subclase RendererBase."

#: matplotlib.legend.Legend.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr "Este método se sobrescribe en las subclases de Artist."

#: matplotlib.legend.Legend.set_frame_on:2 of
msgid "Set whether the legend box patch is drawn."
msgstr "Establecer si el parche de caja de leyenda es dibujado."

#: matplotlib.legend.Legend.set_frame_on:21 of
msgid "**b**"
msgstr "**b**"

#: matplotlib.legend.Legend.get_bbox_to_anchor:2 of
msgid "Return the bbox that the legend will be anchored to."
msgstr "Devuelve el cuadro en el que será anclada la leyenda."

#: matplotlib.legend.Legend.get_children:2 of
msgid "Return a list of the child `.Artist`\\s of this `.Artist`."
msgstr "Devuelve una lista del hijo `.Artist`\\s de este `.Artist`."

#: matplotlib.legend.Legend.get_default_handler_map:2 of
msgid "A class method that returns the default handler map."
msgstr "Un método de clase que devuelve el mapa de manejadores predeterminado."

#: matplotlib.legend.Legend.get_draggable:2 of
msgid "Return ``True`` if the legend is draggable, ``False`` otherwise."
msgstr "Devuelve ``Verdadero`` si la leyenda es arrastrable, ``False`` de otro modo."

#: matplotlib.legend.Legend.get_frame:2 of
msgid "Return the `~.patches.Rectangle` used to frame the legend."
msgstr "Devuelve el `~.patches.Rectangle` usado para enmarcar la leyenda."

#: matplotlib.legend.Legend.get_frame_on:2 of
msgid "Get whether the legend box patch is drawn."
msgstr "Obtener si el parche de caja de leyenda está dibujado."

#: matplotlib.legend.Legend.get_legend_handler:2 of
msgid "Return a legend handler from *legend_handler_map* that corresponds to *orig_handler*."
msgstr "Devuelve un manejador de leyenda de *legend_handler_map* que corresponde a *orig_handler*."

#: matplotlib.legend.Legend.get_legend_handler:5 of
msgid "*legend_handler_map* should be a dictionary object (that is returned by the get_legend_handler_map method)."
msgstr "*legend_handler_map* debe ser un objeto de diccionario (que es devuelto por el método get_legend_handler_map)."

#: matplotlib.legend.Legend.get_legend_handler:8 of
msgid "It first checks if the *orig_handle* itself is a key in the *legend_handler_map* and return the associated value. Otherwise, it checks for each of the classes in its method-resolution-order. If no matching key is found, it returns ``None``."
msgstr "Primero comprueba si el *orig_handle* en sí mismo es una clave en el *legend_handler_map* y devuelve el valor asociado. De lo contrario, comprueba cada una de las clases en su orden de resolución de métodos. Si no se encuentra ninguna clave coincidente, devuelve ``Ninguno``."

#: matplotlib.legend.Legend.get_legend_handler_map:2 of
msgid "Return the handler map."
msgstr "Devuelve el mapa del manejador."

#: matplotlib.legend.Legend.get_lines:2 of
msgid "Return the list of `~.lines.Line2D`\\s in the legend."
msgstr "Devuelve la lista de `~.lines.Line2D`\\s en la leyenda."

#: matplotlib.legend.Legend.get_patches:2 of
msgid "Return the list of `~.patches.Patch`\\s in the legend."
msgstr "Devuelve la lista de `~.patches.Patch`\\s en la leyenda."

#: matplotlib.legend.Legend.get_texts:2 of
msgid "Return the list of `~.text.Text`\\s in the legend."
msgstr "Devuelve la lista de `~.text.Text`\\s en la leyenda."

#: matplotlib.legend.Legend.get_tightbbox:2 of
msgid "Like `.Artist.get_window_extent`, but includes any clipping."
msgstr "Como `.Artist.get_window_extent`, pero incluye cualquier recorte."

#: matplotlib.legend.Legend.get_tightbbox:9 of
msgid "**renderer** : `.RendererBase` subclass"
msgstr "**renderer** : subclase `.RendererBase`"

#: matplotlib.legend.Legend.get_tightbbox:8 of
msgid "RendererBase subclass"
msgstr "Subclase RendererBase"

#: matplotlib.legend.Legend.get_tightbbox:8 of
msgid "renderer that will be used to draw the figures (i.e. ``fig.canvas.get_renderer()``)"
msgstr "renderizador que se utilizará para dibujar las figuras (es decir, ``fig.canvas.get_renderer()``)"

#: matplotlib.artist.Legend.set:16 matplotlib.legend.Legend.get_tightbbox:26 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.legend.Legend.get_tightbbox:14 of
msgid "The enclosing bounding box (in figure pixel coordinates)."
msgstr "La caja delimitadora (en coordenadas de píxeles de la figura)."

#: matplotlib.legend.Legend.get_title:2 of
msgid "Return the `.Text` instance for the legend title."
msgstr "Devuelve la instancia `.Text` para el título de la leyenda."

#: matplotlib.legend.Legend.get_window_extent:2 of
msgid "Get the artist's bounding box in display space."
msgstr "Obtenga la caja delimitadora del artist en el espacio de visualización."

#: matplotlib.legend.Legend.get_window_extent:4 of
msgid "The bounding box' width and height are nonnegative."
msgstr "La anchura y la altura de la caja delimitadora son no negativas."

#: matplotlib.legend.Legend.get_window_extent:6 of
msgid "Subclasses should override for inclusion in the bounding box \"tight\" calculation. Default is to return an empty bounding box at 0, 0."
msgstr "Las subclases deben anularlo para incluirlo en el cálculo de la caja delimitadora \"ajustada\". Por defecto devuelve una caja delimitadora vacía en 0, 0."

#: matplotlib.legend.Legend.get_window_extent:10 of
msgid "Be careful when using this function, the results will not update if the artist window extent of the artist changes.  The extent can change due to any changes in the transform stack, such as changing the axes limits, the figure size, or the canvas used (as is done when saving a figure).  This can lead to unexpected behavior where interactive figures will look fine on the screen, but will save incorrectly."
msgstr "Ten cuidado cuando uses esta función, los resultados no se actualizarán si la extensión de la ventana del artist cambia.  La extensión puede cambiar debido a cualquier cambio en la pila de transformaciones, como cambiar los límites de los ejes, el tamaño de la figura o el lienzo utilizado (como se hace al guardar una figura).  Esto puede llevar a un comportamiento inesperado donde las figuras interactivas se verán bien en la pantalla, pero se guardarán incorrectamente."

#: matplotlib.artist.Legend.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.Legend.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.Legend.set:10 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.Legend.set:10 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.Legend.set:12 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.Legend.set:12 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.Legend.set:13 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.artist.Legend.set:13 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.artist.Legend.set:14 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.Legend.set:15 of
msgid ":meth:`bbox_to_anchor <matplotlib.legend.Legend.set_bbox_to_anchor>`"
msgstr ":meth:`bbox_to_anchor <matplotlib.legend.Legend.set_bbox_to_anchor>`"

#: matplotlib.artist.Legend.set:15 of
msgid "`~matplotlib.transforms.BboxBase` or tuple"
msgstr "`~matplotlib.transforms.BboxBase` o tupla"

#: matplotlib.artist.Legend.set:16 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.Legend.set:17 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.Legend.set:18 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.Legend.set:18 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.artist.Legend.set:19 of
msgid ":meth:`draggable <matplotlib.legend.Legend.set_draggable>`"
msgstr ":meth:`arrastrable <matplotlib.legend.Legend.set_draggable>`"

#: matplotlib.artist.Legend.set:20 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.Legend.set:20 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.artist.Legend.set:21 of
msgid ":meth:`frame_on <matplotlib.legend.Legend.set_frame_on>`"
msgstr ":meth:`frame_on <matplotlib.legend.Legend.set_frame_on>`"

#: matplotlib.artist.Legend.set:22 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.Legend.set:22 matplotlib.artist.Legend.set:32 of
msgid "str"
msgstr "str"

#: matplotlib.artist.Legend.set:23 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.Legend.set:24 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.Legend.set:24 of
msgid "object"
msgstr "object"

#: matplotlib.artist.Legend.set:25 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.Legend.set:25 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.Legend.set:26 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.Legend.set:26 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.Legend.set:27 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.Legend.set:28 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.Legend.set:28 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.Legend.set:29 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.Legend.set:29 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.Legend.set:30 of
msgid ":meth:`title <matplotlib.legend.Legend.set_title>`"
msgstr ":meth:`title <matplotlib.legend.Legend.set_title>`"

#: matplotlib.artist.Legend.set:30 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.artist.Legend.set:31 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.Legend.set:31 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.artist.Legend.set:32 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.Legend.set:33 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.Legend.set:34 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.artist.Legend.set:34 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.legend.Legend.set_bbox_to_anchor:2 of
msgid "Set the bbox that the legend will be anchored to."
msgstr "Establece la caja a la que será anclada la leyenda."

#: matplotlib.legend.Legend.set_bbox_to_anchor:15 of
msgid "**bbox** : `~matplotlib.transforms.BboxBase` or tuple"
msgstr "**bbox** : `~matplotlib.transforms.BboxBase` o tuple"

#: matplotlib.legend.Legend.set_bbox_to_anchor:14 of
msgid "BboxBase or tuple"
msgstr "BboxBase o tupla"

#: matplotlib.legend.Legend.set_bbox_to_anchor:8 of
msgid "The bounding box can be specified in the following ways:"
msgstr "El cuadro delimitador puede especificarse de las siguientes maneras:"

#: matplotlib.legend.Legend.set_bbox_to_anchor:10 of
msgid "A `.BboxBase` instance"
msgstr "Una instancia `.BboxBase`"

#: matplotlib.legend.Legend.set_bbox_to_anchor:11 of
msgid "A tuple of ``(left, bottom, width, height)`` in the given transform (normalized axes coordinate if None)"
msgstr "Una tupla de ``(izquierda, abajo, anchura, altura)`` en la transformación dada (coordenada de ejes normalizados si ninguna)"

#: matplotlib.legend.Legend.set_bbox_to_anchor:13 of
msgid "A tuple of ``(left, bottom)`` where the width and height will be assumed to be zero."
msgstr "Una tupla de ``(izquierda, abajo)`` donde se asumirá que el ancho y la altura serán cero."

#: matplotlib.legend.Legend.set_bbox_to_anchor:15 of
msgid "*None*, to remove the bbox anchoring, and use the parent bbox."
msgstr "*Nunca*, para remover el fondeo de bbox y usar el bbox padre."

#: matplotlib.legend.Legend.set_bbox_to_anchor:32 of
msgid "**transform** : `~matplotlib.transforms.Transform`, optional"
msgstr "**transformación** : `~matplotlib.transforms.Transform`, opcional"

#: matplotlib.legend.Legend.set_bbox_to_anchor:31 of
msgid "Transform, optional"
msgstr "Transformación, opcional"

#: matplotlib.legend.Legend.set_bbox_to_anchor:18 of
msgid "A transform to apply to the bounding box. If not specified, this will use a transform to the bounding box of the parent."
msgstr "Una transformación para aplicar a la caja de delimitación. Si no se especifica, esto utilizará una transformación a la caja de límites del padre."

#: matplotlib.legend.Legend.set_default_handler_map:2 of
msgid "A class method to set the default handler map."
msgstr "Un método de clase para establecer el mapa de manejadores predeterminado."

#: matplotlib.legend.Legend.set_draggable:2 of
msgid "Enable or disable mouse dragging support of the legend."
msgstr "Activa o desactiva el soporte de arrastre del ratón de la leyenda."

#: matplotlib.legend.Legend.set_draggable:8 of
msgid "**state**"
msgstr "**estado**"

#: matplotlib.legend.Legend.set_draggable:8 of
msgid "Whether mouse dragging is enabled."
msgstr "Si el arrastre del ratón está habilitado."

#: matplotlib.legend.Legend.set_draggable:15 of
msgid "The legend parameter to be changed when dragged:"
msgstr "El parámetro de leyenda a cambiar cuando se arrastre:"

#: matplotlib.legend.Legend.set_draggable:17 of
msgid "'loc': update the *loc* parameter of the legend"
msgstr "'loc': actualizar el parámetro *loc* de la leyenda"

#: matplotlib.legend.Legend.set_draggable:18 of
msgid "'bbox': update the *bbox_to_anchor* parameter of the legend"
msgstr "'bbox': actualizar el parámetro *bbox_to_anchor* de la leyenda"

#: matplotlib.legend.Legend.set_draggable:36 of
msgid "`.DraggableLegend` or *None*"
msgstr "`.DraggableLegend` o *nunca*"

#: matplotlib.legend.Legend.set_draggable:23 of
msgid "If *state* is ``True`` this returns the `.DraggableLegend` helper instance. Otherwise this returns *None*."
msgstr "Si *state* es ``True`` esto devuelve la instancia de ayuda `.DraggableLegend`. De lo contrario, esto devuelve *Ninguno*."

#: matplotlib.legend.Legend.set_title:2 of
msgid "Set the legend title. Fontproperties can be optionally set with *prop* parameter."
msgstr "Establece el título de la leyenda. Las propiedades de la fuente pueden establecerse opcionalmente con el parámetro *prop*."

#: matplotlib.legend.Legend.update_default_handler_map:2 of
msgid "A class method to update the default handler map."
msgstr "Un método de clase para actualizar el mapa de manejadores predeterminado."

