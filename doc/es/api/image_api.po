msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/image_api.po\n"
"X-Crowdin-File-ID: 1790\n"
"Language: es_ES\n"

#: ../../api/image_api.rst:3
msgid "``matplotlib.image``"
msgstr "``matplotlib.image``"

#: matplotlib.image:1 of
msgid "The image module supports basic image loading, rescaling and display operations."
msgstr "El módulo de imagen soporta operaciones básicas de carga, reescalado y visualización."

#: matplotlib.image.AxesImage:1 matplotlib.image.BboxImage:1
#: matplotlib.image.FigureImage:1 of
msgid "Bases: :py:class:`matplotlib.image._ImageBase`"
msgstr "Bases: :py:class:`matplotlib.image._ImageBase`"

#: matplotlib.image.AxesImage:2 of
msgid "An image attached to an Axes."
msgstr "Una imagen adjunta a un eje."

#: matplotlib.image.AxesImage matplotlib.image.AxesImage.set_extent
#: matplotlib.image.NonUniformImage matplotlib.image.NonUniformImage.set_array
#: matplotlib.image.NonUniformImage.set_cmap
#: matplotlib.image.NonUniformImage.set_data
#: matplotlib.image.NonUniformImage.set_filternorm
#: matplotlib.image.NonUniformImage.set_filterrad
#: matplotlib.image.NonUniformImage.set_interpolation
#: matplotlib.image.NonUniformImage.set_norm matplotlib.image.PcolorImage
#: matplotlib.image.PcolorImage.set_array matplotlib.image.PcolorImage.set_data
#: matplotlib.image.composite_images matplotlib.image.imread
#: matplotlib.image.imsave matplotlib.image.thumbnail of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.image.AxesImage:8 matplotlib.image.PcolorImage:31 of
msgid "**ax** : `~.axes.Axes`"
msgstr "**eje** : `~.axes.Axes`"

#: matplotlib.image.AxesImage:7 matplotlib.image.PcolorImage:30 of
msgid "Axes"
msgstr "Ejes"

#: matplotlib.image.AxesImage:8 matplotlib.image.PcolorImage:31 of
msgid "The axes the image will belong to."
msgstr "Los ejes a los que pertenecerá la imagen."

#: matplotlib.image.AxesImage:12 matplotlib.image.PcolorImage:48
#: matplotlib.image.imsave:25 of
msgid "**cmap** : str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
msgstr "**cmap** : str o `~matplotlib.colors.Colormap`, por defecto: :rc:`image.cmap`"

#: of
msgid "str or"
msgstr "str o"

#: matplotlib.image.AxesImage:11 matplotlib.image.PcolorImage:47 of
msgid "The Colormap instance or registered colormap name used to map scalar data to colors."
msgstr "La instancia de Colormap o nombre de mapa de color registrado utilizado para mapear datos escalares a colores."

#: matplotlib.image.AxesImage:15 matplotlib.image.PcolorImage:51 of
msgid "**norm** : `~matplotlib.colors.Normalize`"
msgstr "**norma** : `~matplotlib.colors.Normalize`"

#: matplotlib.image.AxesImage:14 matplotlib.image.PcolorImage:50 of
msgid "Normalize"
msgstr "Normalize"

#: matplotlib.image.AxesImage:15 matplotlib.image.PcolorImage:51 of
msgid "Maps luminance to 0-1."
msgstr "Mapas de luminancia a 0-1."

#: matplotlib.image.AxesImage:21 of
msgid "**interpolation** : str, default: :rc:`image.interpolation`"
msgstr "**interpolación** : str, por defecto: :rc:`image.interpolation`"

#: of
msgid "str, default:"
msgstr "str, por defecto:"

#: matplotlib.image.AxesImage:18 of
msgid "Supported values are 'none', 'antialiased', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'blackman'."
msgstr "Los valores soportados son 'Ninguno', 'antialiased', 'cercano', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', '/etc', 'lanczos', 'blackman'."

#: matplotlib.image.AxesImage:27 of
msgid "**interpolation_stage**"
msgstr "**interpolación_etapa**"

#: of
msgid "{'data', 'rgba'}, default: 'data'"
msgstr "{'data', 'rgba'}por defecto: 'datos'"

#: matplotlib.image.AxesImage:24 of
msgid "If 'data', interpolation is carried out on the data provided by the user.  If 'rgba', the interpolation is carried out after the colormapping has been applied (visual interpolation)."
msgstr "Si 'data', la interpolación se realiza sobre los datos proporcionados por el usuario. Si 'rgba', la interpolación se lleva a cabo después de la aplicación del mapeo de colores (interpolación visual)."

#: matplotlib.image.AxesImage:32 matplotlib.image.imsave:33 of
msgid "**origin** : {'upper', 'lower'}, default: :rc:`image.origin`"
msgstr "**origin** : {'upper', 'lower'}, por defecto: :rc:`image.origin`"

#: of
msgid "{'upper', 'lower'}, default:"
msgstr "{'upper', 'lower'}por defecto:"

#: matplotlib.image.AxesImage:30 of
msgid "Place the [0, 0] index of the array in the upper left or lower left corner of the axes. The convention 'upper' is typically used for matrices and images."
msgstr "Coloca el índice [0, 0] de la matriz en la esquina superior izquierda o inferior de los ejes. La convención \"superior\" se utiliza típicamente para matrices e imágenes."

#: matplotlib.image.AxesImage:37 matplotlib.image.AxesImage.set_extent:17 of
msgid "**extent**"
msgstr "**extensión**"

#: of
msgid "tuple, optional"
msgstr "tupla, opcional"

#: matplotlib.image.AxesImage:35 of
msgid "The data axes (left, right, bottom, top) for making image plots registered with data plots.  Default is to label the pixel centers with the zero-based row and column indices."
msgstr "Los ejes de datos (izquierda, derecha, abajo, arriba) para crear gráficos de imagen registrados con gráficos de datos. Por defecto es etiquetar los centros de píxeles con los índices de columna y fila de cero."

#: matplotlib.image.AxesImage:46
#: matplotlib.image.NonUniformImage.set_filternorm:22 of
msgid "**filternorm**"
msgstr "**filtro**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.image.AxesImage:40 of
msgid "A parameter for the antigrain image resize filter (see the antigrain documentation). If filternorm is set, the filter normalizes integer values and corrects the rounding errors. It doesn't do anything with the source floating point values, it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0. So, the filter function must produce a graph of the proper shape."
msgstr "Un parámetro para el filtro de redimensionamiento de imagen antigrano (ver la documentación de antigranos). Si se establece el filtro, el filtro normaliza los valores enteros y corrige los errores de redondeo. No hace nada con los valores de coma flotante de la fuente, corrige sólo enteros de acuerdo a la regla de 1. lo que significa que cualquier suma de peso de píxeles debe ser igual a 1.0. Por lo tanto, la función de filtro debe producir un gráfico de la forma adecuada."

#: matplotlib.image.AxesImage:50
#: matplotlib.image.NonUniformImage.set_filterrad:22 of
msgid "**filterrad**"
msgstr "**filterrad**"

#: of
msgid "float > 0, default: 4"
msgstr "flotante > 0, por defecto: 4"

#: matplotlib.image.AxesImage:49 of
msgid "The filter radius for filters that have a radius parameter, i.e. when interpolation is one of: 'sinc', 'lanczos' or 'blackman'."
msgstr "El radio de filtro para los filtros que tienen un parámetro de radio, es decir, cuando la interpolación es uno de: 'ías', 'lanczos' o 'blackman'."

#: matplotlib.image.AxesImage:54 of
msgid "**resample**"
msgstr "**resample**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.image.AxesImage:53 of
msgid "When True, use a full resampling method. When False, only resample when the output image is larger than the input image."
msgstr "Cuando sea verdadero, utilice un método de remuestreo completo. Cuando False, sólo vuelva a mostrar cuando la imagen de salida es más grande que la imagen de entrada."

#: matplotlib.image.AxesImage:70 matplotlib.image.PcolorImage:67 of
msgid "**\\*\\*kwargs** : `.Artist` properties"
msgstr "**\\*\\*kwargs** : propiedades `.Artist`"

#: matplotlib.image.AxesImage:69 matplotlib.image.PcolorImage:66 of
msgid "Artist properties"
msgstr "Propiedades del artista"

#: matplotlib.image.AxesImage:85 of
msgid "**norm** : `matplotlib.colors.Normalize` (or subclass thereof)"
msgstr "**normal** : `matplotlib.colors.Normalize` (o subclase de ellos)"

#: matplotlib.image.AxesImage:84 of
msgid "matplotlib.colors.Normalize (or subclass thereof)"
msgstr "matplotlib.colors.Normalize (o subclase de ellos)"

#: matplotlib.image.AxesImage:82 of
msgid "The normalizing object which scales data, typically into the interval ``[0, 1]``. If *None*, *norm* defaults to a *colors.Normalize* object which initializes its scaling based on the first data processed."
msgstr "El objeto normalizador que escala los datos, típicamente en el intervalo ``[0, 1]``. Si *nunca*, *normal* por defecto a *colores. ormalize* que inicializa su escalado basado en los primeros datos procesados."

#: matplotlib.image.AxesImage:101 of
msgid "**cmap** : str or `~matplotlib.colors.Colormap`"
msgstr "**cmap** : str o `~matplotlib.colors.Colormap`"

#: matplotlib.image.AxesImage:88 of
msgid "The colormap used to map normalized data values to RGBA colors."
msgstr "El mapa de colores utilizado para asignar valores de datos normalizados a colores RGBA."

#: matplotlib.image.AxesImage.get_cursor_data:2
#: matplotlib.image.PcolorImage.get_cursor_data:2 of
msgid "Return the image value at the event position or *None* if the event is outside the image."
msgstr "Devuelve el valor de la imagen en la posición del evento o *nunca* si el evento está fuera de la imagen."

#: matplotlib.image.AxesImage.get_cursor_data:17
#: matplotlib.image.PcolorImage.get_cursor_data:17 of
msgid ":obj:`matplotlib.artist.Artist.get_cursor_data`"
msgstr ":obj:`matplotlib.artist.Artist.get_cursor_data`"

#: matplotlib.image.AxesImage.get_extent:2
#: matplotlib.image.FigureImage.get_extent:2
#: matplotlib.image.NonUniformImage.get_extent:2 of
msgid "Return the image extent as tuple (left, right, bottom, top)."
msgstr "Devuelve la extensión de la imagen como tupla (izquierda, derecha, abajo, arriba)."

#: matplotlib.image.AxesImage.get_window_extent:2
#: matplotlib.image.BboxImage.get_window_extent:2 of
msgid "Get the artist's bounding box in display space."
msgstr "Obtenga la caja delimitadora del artist en el espacio de visualización."

#: matplotlib.image.AxesImage.get_window_extent:4
#: matplotlib.image.BboxImage.get_window_extent:4 of
msgid "The bounding box' width and height are nonnegative."
msgstr "La anchura y la altura de la caja delimitadora son no negativas."

#: matplotlib.image.AxesImage.get_window_extent:6
#: matplotlib.image.BboxImage.get_window_extent:6 of
msgid "Subclasses should override for inclusion in the bounding box \"tight\" calculation. Default is to return an empty bounding box at 0, 0."
msgstr "Las subclases deben anularlo para incluirlo en el cálculo de la caja delimitadora \"ajustada\". Por defecto devuelve una caja delimitadora vacía en 0, 0."

#: matplotlib.image.AxesImage.get_window_extent:10
#: matplotlib.image.BboxImage.get_window_extent:10 of
msgid "Be careful when using this function, the results will not update if the artist window extent of the artist changes.  The extent can change due to any changes in the transform stack, such as changing the axes limits, the figure size, or the canvas used (as is done when saving a figure).  This can lead to unexpected behavior where interactive figures will look fine on the screen, but will save incorrectly."
msgstr "Ten cuidado cuando uses esta función, los resultados no se actualizarán si la extensión de la ventana del artist cambia.  La extensión puede cambiar debido a cualquier cambio en la pila de transformaciones, como cambiar los límites de los ejes, el tamaño de la figura o el lienzo utilizado (como se hace al guardar una figura).  Esto puede llevar a un comportamiento inesperado donde las figuras interactivas se verán bien en la pantalla, pero se guardarán incorrectamente."

#: matplotlib.image.AxesImage.make_image:2
#: matplotlib.image.BboxImage.make_image:2
#: matplotlib.image.FigureImage.make_image:2
#: matplotlib.image.NonUniformImage.make_image:2
#: matplotlib.image.PcolorImage.make_image:2 of
msgid "Normalize, rescale, and colormap this image's data for rendering using *renderer*, with the given *magnification*."
msgstr "Normalizar, reescalar y mapear los datos de esta imagen para renderizarla usando el *renderizador*, con la *coordenada* dada."

#: matplotlib.image.AxesImage.make_image:5
#: matplotlib.image.BboxImage.make_image:5
#: matplotlib.image.FigureImage.make_image:5
#: matplotlib.image.NonUniformImage.make_image:5
#: matplotlib.image.PcolorImage.make_image:5 of
msgid "If *unsampled* is True, the image will not be scaled, but an appropriate affine transformation will be returned instead."
msgstr "Si *unsampled* es verdadero, la imagen no será escalada, pero una transformación de afecto apropiada será devuelta en su lugar."

#: matplotlib.image.AxesImage.make_image matplotlib.image.BboxImage.make_image
#: matplotlib.image.FigureImage.make_image
#: matplotlib.image.NonUniformImage.make_image
#: matplotlib.image.PcolorImage.make_image matplotlib.image.composite_images
#: matplotlib.image.imread matplotlib.image.pil_to_array
#: matplotlib.image.thumbnail of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.image.AxesImage.make_image:12
#: matplotlib.image.BboxImage.make_image:12
#: matplotlib.image.FigureImage.make_image:12
#: matplotlib.image.NonUniformImage.make_image:12
#: matplotlib.image.PcolorImage.make_image:12
#: matplotlib.image.composite_images:23 of
msgid "**image**"
msgstr "**imagen**"

#: of
msgid "(M, N, 4) uint8 array"
msgstr "(M, N, 4) arreglo uint8"

#: matplotlib.image.AxesImage.make_image:12
#: matplotlib.image.BboxImage.make_image:12
#: matplotlib.image.FigureImage.make_image:12
#: matplotlib.image.NonUniformImage.make_image:12
#: matplotlib.image.PcolorImage.make_image:12 of
msgid "The RGBA image, resampled unless *unsampled* is True."
msgstr "La imagen RGBA, de nuevo muestreo a menos que *sin muestreo* sea verdadera."

#: matplotlib.image.AxesImage.make_image:16
#: matplotlib.image.BboxImage.make_image:16
#: matplotlib.image.FigureImage.make_image:16
#: matplotlib.image.NonUniformImage.make_image:16
#: matplotlib.image.NonUniformImage.set_data:9 matplotlib.image.PcolorImage:36
#: matplotlib.image.PcolorImage.make_image:16
#: matplotlib.image.PcolorImage.set_data:10 of
msgid "**x, y**"
msgstr "**x, y**"

#: matplotlib.artist.AxesImage.set:41 matplotlib.artist.BboxImage.set:40
#: matplotlib.artist.FigureImage.set:40
#: matplotlib.artist.NonUniformImage.set:41
#: matplotlib.artist.PcolorImage.set:41 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.image.AxesImage.make_image:15
#: matplotlib.image.BboxImage.make_image:15
#: matplotlib.image.FigureImage.make_image:15
#: matplotlib.image.NonUniformImage.make_image:15
#: matplotlib.image.PcolorImage.make_image:15 of
msgid "The upper left corner where the image should be drawn, in pixel space."
msgstr "La esquina superior izquierda donde debe dibujarse la imagen, en espacio de píxeles."

#: matplotlib.image.AxesImage.make_image:31
#: matplotlib.image.BboxImage.make_image:31
#: matplotlib.image.FigureImage.make_image:31
#: matplotlib.image.NonUniformImage.make_image:31
#: matplotlib.image.PcolorImage.make_image:31 of
msgid "**trans**"
msgstr "**trans**"

#: of
msgid "Affine2D"
msgstr "Affine2D"

#: matplotlib.image.AxesImage.make_image:19
#: matplotlib.image.BboxImage.make_image:19
#: matplotlib.image.FigureImage.make_image:19
#: matplotlib.image.NonUniformImage.make_image:19
#: matplotlib.image.PcolorImage.make_image:19 of
msgid "The affine transformation from image to pixel space."
msgstr "La transformación de la imagen al espacio de píxeles."

#: matplotlib.artist.AxesImage.set:2 matplotlib.artist.BboxImage.set:2
#: matplotlib.artist.FigureImage.set:2 matplotlib.artist.NonUniformImage.set:2
#: matplotlib.artist.PcolorImage.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.AxesImage.set:4 matplotlib.artist.BboxImage.set:4
#: matplotlib.artist.FigureImage.set:4 matplotlib.artist.NonUniformImage.set:4
#: matplotlib.artist.PcolorImage.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.AxesImage.set:10 matplotlib.artist.BboxImage.set:10
#: matplotlib.artist.FigureImage.set:10
#: matplotlib.artist.NonUniformImage.set:10
#: matplotlib.artist.PcolorImage.set:10 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.AxesImage.set:10 matplotlib.artist.BboxImage.set:10
#: matplotlib.artist.FigureImage.set:10
#: matplotlib.artist.NonUniformImage.set:10
#: matplotlib.artist.PcolorImage.set:10 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.AxesImage.set:12 matplotlib.artist.BboxImage.set:12
#: matplotlib.artist.FigureImage.set:12
#: matplotlib.artist.NonUniformImage.set:12
#: matplotlib.artist.PcolorImage.set:12 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.AxesImage.set:12 matplotlib.artist.BboxImage.set:12
#: matplotlib.artist.FigureImage.set:12
#: matplotlib.artist.NonUniformImage.set:12
#: matplotlib.artist.PcolorImage.set:12 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.AxesImage.set:13 matplotlib.artist.BboxImage.set:13
#: matplotlib.artist.FigureImage.set:13
#: matplotlib.artist.NonUniformImage.set:13
#: matplotlib.artist.PcolorImage.set:13 of
msgid "``alpha``"
msgstr "``alfa``"

#: matplotlib.artist.AxesImage.set:13 matplotlib.artist.BboxImage.set:13
#: matplotlib.artist.FigureImage.set:13
#: matplotlib.artist.NonUniformImage.set:13
#: matplotlib.artist.PcolorImage.set:13 of
msgid "float or 2D array-like or None"
msgstr "flotante o tipo array 2D o ninguno"

#: matplotlib.artist.AxesImage.set:14 matplotlib.artist.BboxImage.set:14
#: matplotlib.artist.FigureImage.set:14
#: matplotlib.artist.NonUniformImage.set:14
#: matplotlib.artist.PcolorImage.set:14 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.AxesImage.set:14 matplotlib.artist.AxesImage.set:18
#: matplotlib.artist.AxesImage.set:24 matplotlib.artist.AxesImage.set:27
#: matplotlib.artist.AxesImage.set:34 matplotlib.artist.AxesImage.set:40
#: matplotlib.artist.BboxImage.set:14 matplotlib.artist.BboxImage.set:18
#: matplotlib.artist.BboxImage.set:23 matplotlib.artist.BboxImage.set:26
#: matplotlib.artist.BboxImage.set:33 matplotlib.artist.BboxImage.set:39
#: matplotlib.artist.FigureImage.set:14 matplotlib.artist.FigureImage.set:18
#: matplotlib.artist.FigureImage.set:23 matplotlib.artist.FigureImage.set:26
#: matplotlib.artist.FigureImage.set:33 matplotlib.artist.FigureImage.set:39
#: matplotlib.artist.NonUniformImage.set:14
#: matplotlib.artist.NonUniformImage.set:18
#: matplotlib.artist.NonUniformImage.set:27
#: matplotlib.artist.NonUniformImage.set:34
#: matplotlib.artist.NonUniformImage.set:40
#: matplotlib.artist.PcolorImage.set:14 matplotlib.artist.PcolorImage.set:18
#: matplotlib.artist.PcolorImage.set:24 matplotlib.artist.PcolorImage.set:27
#: matplotlib.artist.PcolorImage.set:34 matplotlib.artist.PcolorImage.set:40 of
msgid "bool"
msgstr "bool"

#: matplotlib.artist.AxesImage.set:15 matplotlib.artist.BboxImage.set:15
#: matplotlib.artist.FigureImage.set:15
#: matplotlib.artist.NonUniformImage.set:15
#: matplotlib.artist.PcolorImage.set:15 of
msgid "``array``"
msgstr "``array``"

#: matplotlib.artist.AxesImage.set:15 matplotlib.artist.BboxImage.set:15
#: matplotlib.artist.FigureImage.set:15 of
msgid "array-like"
msgstr "array-like"

#: matplotlib.artist.AxesImage.set:16 matplotlib.artist.BboxImage.set:16
#: matplotlib.artist.FigureImage.set:16
#: matplotlib.artist.NonUniformImage.set:16
#: matplotlib.artist.PcolorImage.set:16 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"

#: matplotlib.artist.AxesImage.set:16 matplotlib.artist.BboxImage.set:16
#: matplotlib.artist.FigureImage.set:16
#: matplotlib.artist.NonUniformImage.set:16
#: matplotlib.artist.PcolorImage.set:16 of
msgid "(vmin: float, vmax: float)"
msgstr "(vmin: flotante, vmax: flotante)"

#: matplotlib.artist.AxesImage.set:17 matplotlib.artist.BboxImage.set:17
#: matplotlib.artist.FigureImage.set:17
#: matplotlib.artist.NonUniformImage.set:17
#: matplotlib.artist.PcolorImage.set:17 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.AxesImage.set:17 matplotlib.artist.BboxImage.set:17
#: matplotlib.artist.FigureImage.set:17
#: matplotlib.artist.NonUniformImage.set:17
#: matplotlib.artist.PcolorImage.set:17 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.artist.AxesImage.set:18 matplotlib.artist.BboxImage.set:18
#: matplotlib.artist.FigureImage.set:18
#: matplotlib.artist.NonUniformImage.set:18
#: matplotlib.artist.PcolorImage.set:18 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.AxesImage.set:19 matplotlib.artist.BboxImage.set:19
#: matplotlib.artist.FigureImage.set:19
#: matplotlib.artist.NonUniformImage.set:19
#: matplotlib.artist.PcolorImage.set:19 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.AxesImage.set:19 matplotlib.artist.BboxImage.set:19
#: matplotlib.artist.FigureImage.set:19
#: matplotlib.artist.NonUniformImage.set:19
#: matplotlib.artist.PcolorImage.set:19 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.artist.AxesImage.set:20 matplotlib.artist.BboxImage.set:20
#: matplotlib.artist.FigureImage.set:20
#: matplotlib.artist.NonUniformImage.set:20
#: matplotlib.artist.PcolorImage.set:20 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"

#: matplotlib.artist.AxesImage.set:20 matplotlib.artist.BboxImage.set:20
#: matplotlib.artist.FigureImage.set:20 matplotlib.artist.PcolorImage.set:20 of
msgid "`.Colormap` or str or None"
msgstr "`.Colormap` o str o ninguno"

#: matplotlib.artist.AxesImage.set:21 matplotlib.artist.BboxImage.set:21 of
msgid "``data``"
msgstr "``data``"

#: matplotlib.artist.AxesImage.set:21 matplotlib.artist.BboxImage.set:21 of
msgid "array-like or `PIL.Image.Image`"
msgstr "array-like o `PIL.Image.Image`"

#: matplotlib.artist.AxesImage.set:22 matplotlib.artist.NonUniformImage.set:22
#: matplotlib.artist.PcolorImage.set:22 of
msgid ":meth:`extent <matplotlib.image.AxesImage.set_extent>`"
msgstr ":meth:`extent <matplotlib.image.AxesImage.set_extent>`"

#: matplotlib.artist.AxesImage.set:22 matplotlib.artist.NonUniformImage.set:22
#: matplotlib.artist.PcolorImage.set:22 of
msgid "4-tuple of float"
msgstr "4 tuplas de flotante"

#: matplotlib.artist.AxesImage.set:23 matplotlib.artist.BboxImage.set:22
#: matplotlib.artist.FigureImage.set:22
#: matplotlib.artist.NonUniformImage.set:23
#: matplotlib.artist.PcolorImage.set:23 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.AxesImage.set:23 matplotlib.artist.BboxImage.set:22
#: matplotlib.artist.FigureImage.set:22
#: matplotlib.artist.NonUniformImage.set:23
#: matplotlib.artist.PcolorImage.set:23 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.artist.AxesImage.set:24 matplotlib.artist.BboxImage.set:23
#: matplotlib.artist.FigureImage.set:23
#: matplotlib.artist.NonUniformImage.set:24
#: matplotlib.artist.PcolorImage.set:24 of
msgid "``filternorm``"
msgstr "``filtronorma``"

#: matplotlib.artist.AxesImage.set:25 matplotlib.artist.BboxImage.set:24
#: matplotlib.artist.FigureImage.set:24
#: matplotlib.artist.NonUniformImage.set:25
#: matplotlib.artist.PcolorImage.set:25 of
msgid "``filterrad``"
msgstr "``filterrad``"

#: matplotlib.artist.AxesImage.set:25 matplotlib.artist.BboxImage.set:24
#: matplotlib.artist.FigureImage.set:24 matplotlib.artist.PcolorImage.set:25 of
msgid "positive float"
msgstr "flotante positivo"

#: matplotlib.artist.AxesImage.set:26 matplotlib.artist.BboxImage.set:25
#: matplotlib.artist.FigureImage.set:25
#: matplotlib.artist.NonUniformImage.set:26
#: matplotlib.artist.PcolorImage.set:26 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.AxesImage.set:26 matplotlib.artist.AxesImage.set:39
#: matplotlib.artist.BboxImage.set:25 matplotlib.artist.BboxImage.set:38
#: matplotlib.artist.FigureImage.set:25 matplotlib.artist.FigureImage.set:38
#: matplotlib.artist.NonUniformImage.set:26
#: matplotlib.artist.NonUniformImage.set:39
#: matplotlib.artist.PcolorImage.set:26 matplotlib.artist.PcolorImage.set:39 of
msgid "str"
msgstr "str"

#: matplotlib.artist.AxesImage.set:27 matplotlib.artist.BboxImage.set:26
#: matplotlib.artist.FigureImage.set:26
#: matplotlib.artist.NonUniformImage.set:27
#: matplotlib.artist.PcolorImage.set:27 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.AxesImage.set:28 matplotlib.artist.BboxImage.set:27
#: matplotlib.artist.FigureImage.set:27 matplotlib.artist.PcolorImage.set:28 of
msgid "``interpolation``"
msgstr "``interpolación``"

#: matplotlib.artist.AxesImage.set:28 matplotlib.artist.BboxImage.set:27
#: matplotlib.artist.FigureImage.set:27 matplotlib.artist.PcolorImage.set:28 of
msgid "{'antialiased', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'none'} or None"
msgstr "{'antialiased', 'cercano', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'cuadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'landes', 'lanczos', 'outer'} o ninguno"

#: matplotlib.artist.AxesImage.set:29 matplotlib.artist.BboxImage.set:28
#: matplotlib.artist.FigureImage.set:28
#: matplotlib.artist.NonUniformImage.set:29
#: matplotlib.artist.PcolorImage.set:29 of
msgid "``interpolation_stage``"
msgstr "``interpolación_etapa``"

#: matplotlib.artist.AxesImage.set:29 matplotlib.artist.BboxImage.set:28
#: matplotlib.artist.FigureImage.set:28
#: matplotlib.artist.NonUniformImage.set:29
#: matplotlib.artist.PcolorImage.set:29 of
msgid "{'data', 'rgba'} or None"
msgstr "{'data', 'rgba'} o ninguno"

#: matplotlib.artist.AxesImage.set:30 matplotlib.artist.BboxImage.set:29
#: matplotlib.artist.FigureImage.set:29
#: matplotlib.artist.NonUniformImage.set:30
#: matplotlib.artist.PcolorImage.set:30 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.AxesImage.set:30 matplotlib.artist.BboxImage.set:29
#: matplotlib.artist.FigureImage.set:29
#: matplotlib.artist.NonUniformImage.set:30
#: matplotlib.artist.PcolorImage.set:30 of
msgid "object"
msgstr "object"

#: matplotlib.artist.AxesImage.set:31 matplotlib.artist.BboxImage.set:30
#: matplotlib.artist.FigureImage.set:30
#: matplotlib.artist.NonUniformImage.set:31
#: matplotlib.artist.PcolorImage.set:31 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"

#: matplotlib.artist.AxesImage.set:31 matplotlib.artist.BboxImage.set:30
#: matplotlib.artist.FigureImage.set:30 matplotlib.artist.PcolorImage.set:31 of
msgid "`.Normalize` or None"
msgstr "`.normalize` o Ninguno"

#: matplotlib.artist.AxesImage.set:32 matplotlib.artist.BboxImage.set:31
#: matplotlib.artist.FigureImage.set:31
#: matplotlib.artist.NonUniformImage.set:32
#: matplotlib.artist.PcolorImage.set:32 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.AxesImage.set:32 matplotlib.artist.BboxImage.set:31
#: matplotlib.artist.FigureImage.set:31
#: matplotlib.artist.NonUniformImage.set:32
#: matplotlib.artist.PcolorImage.set:32 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.AxesImage.set:33 matplotlib.artist.BboxImage.set:32
#: matplotlib.artist.FigureImage.set:32
#: matplotlib.artist.NonUniformImage.set:33
#: matplotlib.artist.PcolorImage.set:33 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.AxesImage.set:33 matplotlib.artist.BboxImage.set:32
#: matplotlib.artist.FigureImage.set:32
#: matplotlib.artist.NonUniformImage.set:33
#: matplotlib.artist.PcolorImage.set:33 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.AxesImage.set:34 matplotlib.artist.BboxImage.set:33
#: matplotlib.artist.FigureImage.set:33
#: matplotlib.artist.NonUniformImage.set:34
#: matplotlib.artist.PcolorImage.set:34 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.AxesImage.set:35 matplotlib.artist.BboxImage.set:34
#: matplotlib.artist.FigureImage.set:34
#: matplotlib.artist.NonUniformImage.set:35
#: matplotlib.artist.PcolorImage.set:35 of
msgid "``resample``"
msgstr "``volver a mostrar``"

#: matplotlib.artist.AxesImage.set:35 matplotlib.artist.AxesImage.set:37
#: matplotlib.artist.BboxImage.set:34 matplotlib.artist.BboxImage.set:36
#: matplotlib.artist.FigureImage.set:34 matplotlib.artist.FigureImage.set:36
#: matplotlib.artist.NonUniformImage.set:35
#: matplotlib.artist.NonUniformImage.set:37
#: matplotlib.artist.PcolorImage.set:35 matplotlib.artist.PcolorImage.set:37 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.AxesImage.set:36 matplotlib.artist.BboxImage.set:35
#: matplotlib.artist.FigureImage.set:35
#: matplotlib.artist.NonUniformImage.set:36
#: matplotlib.artist.PcolorImage.set:36 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.AxesImage.set:36 matplotlib.artist.BboxImage.set:35
#: matplotlib.artist.FigureImage.set:35
#: matplotlib.artist.NonUniformImage.set:36
#: matplotlib.artist.PcolorImage.set:36 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.AxesImage.set:37 matplotlib.artist.BboxImage.set:36
#: matplotlib.artist.FigureImage.set:36
#: matplotlib.artist.NonUniformImage.set:37
#: matplotlib.artist.PcolorImage.set:37 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.AxesImage.set:38 matplotlib.artist.BboxImage.set:37
#: matplotlib.artist.FigureImage.set:37
#: matplotlib.artist.NonUniformImage.set:38
#: matplotlib.artist.PcolorImage.set:38 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.AxesImage.set:38 matplotlib.artist.BboxImage.set:37
#: matplotlib.artist.FigureImage.set:37
#: matplotlib.artist.NonUniformImage.set:38
#: matplotlib.artist.PcolorImage.set:38 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.artist.AxesImage.set:39 matplotlib.artist.BboxImage.set:38
#: matplotlib.artist.FigureImage.set:38
#: matplotlib.artist.NonUniformImage.set:39
#: matplotlib.artist.PcolorImage.set:39 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.AxesImage.set:40 matplotlib.artist.BboxImage.set:39
#: matplotlib.artist.FigureImage.set:39
#: matplotlib.artist.NonUniformImage.set:40
#: matplotlib.artist.PcolorImage.set:40 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.AxesImage.set:41 matplotlib.artist.BboxImage.set:40
#: matplotlib.artist.FigureImage.set:40
#: matplotlib.artist.NonUniformImage.set:41
#: matplotlib.artist.PcolorImage.set:41 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.image.AxesImage.set_extent:2 of
msgid "Set the image extent."
msgstr "Definir la extensión de la imagen."

#: matplotlib.image.AxesImage.set_extent:8 of
msgid "The position and size of the image as tuple ``(left, right, bottom, top)`` in data coordinates."
msgstr "La posición y el tamaño de la imagen como tupla ``(izquierda, derecha, abajo, arriba)`` en las coordenadas de datos."

#: matplotlib.image.AxesImage.set_extent:20
#: matplotlib.image.NonUniformImage.set_norm:19 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.image.AxesImage.set_extent:21 of
msgid "This updates ``ax.dataLim``, and, if autoscaling, sets ``ax.viewLim`` to tightly fit the image, regardless of ``dataLim``.  Autoscaling state is not changed, so following this with ``ax.autoscale_view()`` will redo the autoscaling in accord with ``dataLim``."
msgstr "Esto actualiza ``ax.dataLim``, y si se autocala configura ``ax.viewLim`` como ajustado a la imagen, independientemente de ``dataLim``. El estado de autoescalado no se cambia, por lo que seguir esto con ``ax.autoscale_view()`` rehará el autoescalado de acuerdo con ``dataLim``."

#: matplotlib.image.BboxImage:2 of
msgid "The Image class whose size is determined by the given bbox."
msgstr "La clase Imagen, cuyo tamaño está determinado por el cuadro dado."

#: matplotlib.image.BboxImage:23 matplotlib.image.FigureImage:23 of
msgid "cmap is a colors.Colormap instance norm is a colors.Normalize instance to map luminance to 0-1"
msgstr "cmap es una norma de instancia colors.Colormap es un colors.Normalize instancia para mapear luminancia a 0-1"

#: matplotlib.image.BboxImage:26 matplotlib.image.FigureImage:26 of
msgid "kwargs are an optional list of Artist keyword args"
msgstr "kwargs son una lista opcional de argumentos de palabras clave del artista"

#: matplotlib.image.BboxImage.contains:2 of
msgid "Test whether the mouse event occurred within the image."
msgstr "Evalúa si el evento del ratón ha ocurrido dentro de la imagen."

#: matplotlib.image.FigureImage:2 of
msgid "An image attached to a figure."
msgstr "Una imagen adjunta a una figura."

#: matplotlib.artist.FigureImage.set:21 of
msgid ":meth:`data <matplotlib.image.FigureImage.set_data>`"
msgstr ":meth:`data <matplotlib.image.FigureImage.set_data>`"

#: matplotlib.artist.FigureImage.set:21
#: matplotlib.artist.NonUniformImage.set:15
#: matplotlib.artist.NonUniformImage.set:20
#: matplotlib.artist.NonUniformImage.set:21
#: matplotlib.artist.NonUniformImage.set:24
#: matplotlib.artist.NonUniformImage.set:25
#: matplotlib.artist.NonUniformImage.set:31
#: matplotlib.artist.PcolorImage.set:15 matplotlib.artist.PcolorImage.set:21 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.image.FigureImage.set_data:2 of
msgid "Set the image array."
msgstr "Establecer el array de imágenes."

#: matplotlib.image.NonUniformImage:1 matplotlib.image.PcolorImage:1 of
msgid "Bases: :py:class:`matplotlib.image.AxesImage`"
msgstr "Bases: :py:class:`matplotlib.image.AxesImage`"

#: matplotlib.image.NonUniformImage:8 matplotlib.image.thumbnail:23 of
msgid "**interpolation**"
msgstr "**interpolación**"

#: of
msgid "{'nearest', 'bilinear'}, default: 'nearest'"
msgstr "{'nearest', 'bilinear'}, por defecto: 'más cercano'"

#: matplotlib.image.NonUniformImage:24 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.image.NonUniformImage:11 of
msgid "All other keyword arguments are identical to those of `.AxesImage`."
msgstr "Todos los otros argumentos de palabra clave son idénticos a los de `.AxesImage`."

#: matplotlib.artist.NonUniformImage.set:21 of
msgid ":meth:`data <matplotlib.image.NonUniformImage.set_data>`"
msgstr ":meth:`data <matplotlib.image.NonUniformImage.set_data>`"

#: matplotlib.artist.NonUniformImage.set:28 of
msgid ":meth:`interpolation <matplotlib.image.NonUniformImage.set_interpolation>`"
msgstr ":meth:`interpolación <matplotlib.image.NonUniformImage.set_interpolation>`"

#: matplotlib.artist.NonUniformImage.set:28 of
msgid "{'nearest', 'bilinear'} or None"
msgstr "{'nearest', 'bilinear'} o ninguno"

#: matplotlib.image.NonUniformImage.set_array:2
#: matplotlib.image.PcolorImage.set_array:2 of
msgid "Retained for backwards compatibility - use set_data instead."
msgstr "Conservado por compatibilidad con versiones anteriores - use set_data en su lugar."

#: matplotlib.image.NonUniformImage.set_array:21
#: matplotlib.image.NonUniformImage.set_data:26 matplotlib.image.PcolorImage:44
#: matplotlib.image.PcolorImage.set_array:21
#: matplotlib.image.PcolorImage.set_data:31 of
msgid "**A**"
msgstr "**A**"

#: matplotlib.image.NonUniformImage.set_cmap:2 of
msgid "Set the colormap for luminance data."
msgstr "Establece el mapa de colores para los datos de la luminancia."

#: matplotlib.image.NonUniformImage.set_cmap:21 of
msgid "**cmap** : `.Colormap` or str or None"
msgstr "**cmap** : `.Colormap` o str o None"

#: matplotlib.image.NonUniformImage.set_cmap:20 of
msgid "Colormap or str or None"
msgstr "Colormap o str o ninguno"

#: matplotlib.image.NonUniformImage.set_data:2 of
msgid "Set the grid for the pixel centers, and the pixel values."
msgstr "Establece la cuadrícula para los centros de píxeles y los valores de los píxeles."

#: of
msgid "1D array-like"
msgstr "1D array-like"

#: matplotlib.image.NonUniformImage.set_data:8 of
msgid "Monotonic arrays of shapes (N,) and (M,), respectively, specifying pixel centers."
msgstr "Arreglos monotónicos de formas (N,) y (M,), respectivamente, especificando los centros de píxeles."

#: matplotlib.image.NonUniformImage.set_data:12 of
msgid "(M, N) ndarray or masked array of values to be colormapped, or (M, N, 3) RGB array, or (M, N, 4) RGBA array."
msgstr "(M, N) ndarray o array enmascarado de valores a ser colormapped, o (M, N, 3) RGB array, o (M, N, 4) RGBA array."

#: matplotlib.image.NonUniformImage.set_filternorm:2 of
msgid "Set whether the resize filter normalizes the weights."
msgstr "Establecer si el filtro de redimensionar normaliza las pesas."

#: matplotlib.image.NonUniformImage.set_filternorm:4 of
msgid "See help for `~.Axes.imshow`."
msgstr "Vea ayuda para `~.Axes.imshow`."

#: matplotlib.image.NonUniformImage.set_filterrad:2 of
msgid "Set the resize filter radius only applicable to some interpolation schemes -- see help for imshow"
msgstr "Establecer el radio de redimensionar filtro sólo aplicable a algunos esquemas de interpolación -- ver ayuda para mostrar"

#: matplotlib.image.NonUniformImage.set_interpolation:21 of
msgid "**s**"
msgstr "**s**"

#: matplotlib.image.NonUniformImage.set_interpolation:8 of
msgid "If None, use :rc:`image.interpolation`."
msgstr "Si no, usa :rc:`image.interpolation`."

#: matplotlib.image.NonUniformImage.set_norm:2 of
msgid "Set the normalization instance."
msgstr "Establece la instancia de normalización."

#: matplotlib.image.NonUniformImage.set_norm:16 of
msgid "**norm** : `.Normalize` or None"
msgstr "**norma** : `.Normalize` o Ninguno"

#: matplotlib.image.NonUniformImage.set_norm:15 of
msgid "Normalize or None"
msgstr "Normalizar o ninguno"

#: matplotlib.image.NonUniformImage.set_norm:20 of
msgid "If there are any colorbars using the mappable for this norm, setting the norm of the mappable will reset the norm, locator, and formatters on the colorbar to default."
msgstr "Si hay alguna barra de colores usando el mapeable para esta norma, establecer la norma del mapeable restablecerá la norma, localización y formateadores de la barra de colores por defecto."

#: matplotlib.image.PcolorImage:2 of
msgid "Make a pcolor-style plot with an irregular rectangular grid."
msgstr "Crea una parcela de color con una rejilla rectangular irregular."

#: matplotlib.image.PcolorImage:4 of
msgid "This uses a variation of the original irregular image code, and it is used by pcolorfast for the corresponding grid type."
msgstr "Esto usa una variación del código de imagen irregular original, y es usado por pcolorfast para el tipo de cuadrícula correspondiente."

#: of
msgid "1D array-like, optional"
msgstr "Opcional para matriz 1D"

#: matplotlib.image.PcolorImage:34 matplotlib.image.PcolorImage.set_data:8 of
msgid "Monotonic arrays of length N+1 and M+1, respectively, specifying rectangle boundaries.  If not given, will default to ``range(N + 1)`` and ``range(M + 1)``, respectively."
msgstr "Arreglos monotónicos de longitud N+1 y M+1, respectivamente, especificando los límites del rectángulo. Si no se da, por defecto será ``range(N + 1)`` y ``range(M + 1)``, respectivamente."

#: matplotlib.image.PcolorImage:39 matplotlib.image.PcolorImage.set_data:13 of
msgid "The data to be color-coded. The interpretation depends on the shape:"
msgstr "Los datos a ser codificados por color. La interpretación depende de la forma:"

#: matplotlib.image.PcolorImage:42 matplotlib.image.PcolorImage.set_data:16 of
msgid "(M, N) ndarray or masked array: values to be colormapped"
msgstr "(M, N) ndarray o matriz enmascarada: valores a ser mapeados en color"

#: matplotlib.image.PcolorImage:43 matplotlib.image.PcolorImage.set_data:17 of
msgid "(M, N, 3): RGB array"
msgstr "(M, N, 3): array RVA"

#: matplotlib.image.PcolorImage:44 matplotlib.image.PcolorImage.set_data:18 of
msgid "(M, N, 4): RGBA array"
msgstr "(M, N, 4): arreglo RGBA"

#: matplotlib.artist.PcolorImage.set:21 of
msgid ":meth:`data <matplotlib.image.PcolorImage.set_data>`"
msgstr ":meth:`data <matplotlib.image.PcolorImage.set_data>`"

#: matplotlib.image.PcolorImage.set_data:2 of
msgid "Set the grid for the rectangle boundaries, and the data values."
msgstr "Establece la cuadrícula para los límites del rectángulo, y los valores de los datos."

#: matplotlib.image.composite_images:2 of
msgid "Composite a number of RGBA images into one.  The images are composited in the order in which they appear in the *images* list."
msgstr "Componer un número de imágenes RGBA en una, las imágenes se componen en el orden en el que aparecen en la lista de *imágenes*."

#: matplotlib.image.composite_images:12 of
msgid "**images**"
msgstr "**images**"

#: of
msgid "list of Images"
msgstr "lista de imágenes"

#: matplotlib.image.composite_images:9 of
msgid "Each must have a `make_image` method.  For each image, `can_composite` should return `True`, though this is not enforced by this function.  Each image must have a purely affine transformation with no shear."
msgstr "Cada uno debe tener un método `make_image`. Para cada imagen, `can_composite` debe devolver `True`, aunque esto no es forzado por esta función. Cada imagen debe tener una transformación puramente afectada sin esquilma."

#: matplotlib.image.composite_images:15 of
msgid "**renderer** : `.RendererBase`"
msgstr "**renderizador** : `.RendererBase`"

#: matplotlib.image.composite_images:14 of
msgid "RendererBase"
msgstr "RenderizarBase"

#: matplotlib.image.composite_images:18 of
msgid "**magnification**"
msgstr "**Conocimiento**"

#: of
msgid "float, default: 1"
msgstr "float, default: 1"

#: matplotlib.image.composite_images:18 of
msgid "The additional magnification to apply for the renderer in use."
msgstr "La ampliación adicional para el renderizador en uso."

#: of
msgid "uint8 array (M, N, 4)"
msgstr "array uint8 (M, N, 4)"

#: matplotlib.image.composite_images:23 of
msgid "The composited RGBA image."
msgstr "La imagen RGBA compuesta."

#: matplotlib.image.composite_images:39 of
msgid "**offset_x, offset_y**"
msgstr "**offset_x, offset_y**"

#: matplotlib.image.composite_images:26 of
msgid "The (left, bottom) offset where the composited image should be placed in the output figure."
msgstr "El desplazamiento (izquierdo, inferior) donde la imagen compuesta debe colocarse en la figura de salida."

#: matplotlib.image.imread:2 of
msgid "Read an image from a file into an array."
msgstr "Leer una imagen de un archivo a una matriz."

#: matplotlib.image.imread:6 of
msgid "This function exists for historical reasons.  It is recommended to use `PIL.Image.open` instead for loading images."
msgstr "Esta función existe por razones históricas. Se recomienda usar `PIL.Image.open` para cargar imágenes."

#: matplotlib.image.imread:17 matplotlib.image.imsave:11 of
msgid "**fname**"
msgstr "**fname**"

#: of
msgid "str or file-like"
msgstr "str o archivo"

#: matplotlib.image.imread:12 of
msgid "The image file to read: a filename, a URL or a file-like object opened in read-binary mode."
msgstr "El archivo de imagen a leer: un nombre de archivo, una URL o un objeto tipo archivo abierto en modo de lectura-binario."

#: matplotlib.image.imread:15 of
msgid "Passing a URL is deprecated.  Please open the URL for reading and pass the result to Pillow, e.g. with ``np.array(PIL.Image.open(urllib.request.urlopen(url)))``."
msgstr "Pasar una URL es obsoleto. Por favor, abra la URL para leer y pase el resultado a Pillow, por ejemplo, con ``np.array(PIL.Image.open(urllib.request.urlopen(url))``."

#: matplotlib.image.imread:24 matplotlib.image.imsave:29 of
msgid "**format**"
msgstr "**formato**"

#: of
msgid "str, optional"
msgstr "str, opcional"

#: matplotlib.image.imread:20 of
msgid "The image file format assumed for reading the data.  The image is loaded as a PNG file if *format* is set to \"png\", if *fname* is a path or opened file with a \".png\" extension, or if it is an URL.  In all other cases, *format* is ignored and the format is auto-detected by `PIL.Image.open`."
msgstr "El formato de archivo de imagen asumido para leer los datos. La imagen se carga como un archivo PNG si *format* está establecido en \"png\", si *fname* es una ruta o archivo abierto con un \". extensión ng\", o si es una URL. En todos los demás casos, *format* es ignorado y el formato es auto-detectado por `PIL.Image.open`."

#: matplotlib.image.imread:49 of
msgid "`numpy.array`"
msgstr "`numpy.array`"

#: matplotlib.image.imread:29 of
msgid "The image data. The returned array has shape"
msgstr "Los datos de la imagen. La matriz devuelta tiene forma"

#: matplotlib.image.imread:31 matplotlib.image.pil_to_array:12 of
msgid "(M, N) for grayscale images."
msgstr "(M, N) para imágenes en escala de grises."

#: matplotlib.image.imread:32 matplotlib.image.pil_to_array:13 of
msgid "(M, N, 3) for RGB images."
msgstr "(M, N, 3) para imágenes RGB."

#: matplotlib.image.imread:33 matplotlib.image.pil_to_array:14 of
msgid "(M, N, 4) for RGBA images."
msgstr "(M, N, 4) para imágenes RGBA."

#: matplotlib.image.imread:35 of
msgid "PNG images are returned as float arrays (0-1).  All other formats are returned as int arrays, with a bit depth determined by the file's contents."
msgstr "Las imágenes PNG se devuelven como matrices flotantes (0-1)."

#: matplotlib.image.imsave:2 of
msgid "Save an array as an image file."
msgstr "Guardar una matriz como un archivo de imagen."

#: of
msgid "str or path-like or file-like"
msgstr "str o como ruta o archivo"

#: matplotlib.image.imsave:8 of
msgid "A path or a file-like object to store the image in. If *format* is not set, then the output format is inferred from the extension of *fname*, if any, and from :rc:`savefig.format` otherwise. If *format* is set, it determines the output format."
msgstr "Una ruta o un objeto tipo archivo en el que almacenar la imagen. Si no se establece *formato*, el formato de salida se inferirá de la extensión de *fname*, si existe, y de :rc:`savefig. ormat` de otra manera. Si se establece *formato*, determina el formato de salida."

#: matplotlib.image.imsave:15 of
msgid "**arr**"
msgstr "**ar**"

#: matplotlib.image.imsave:14 of
msgid "The image data. The shape can be one of MxN (luminance), MxNx3 (RGB) or MxNx4 (RGBA)."
msgstr "Los datos de la imagen. La forma puede ser una de MxN (luminancia), MxNx3 (RGB) o MxNx4 (RGBA)."

#: matplotlib.image.imsave:21 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.image.imsave:18 of
msgid "*vmin* and *vmax* set the color scaling for the image by fixing the values that map to the colormap color limits. If either *vmin* or *vmax* is None, that limit is determined from the *arr* min/max value."
msgstr "*vmin* y *vmax* establecen la escala de color de la imagen al fijar los valores que asignan a los límites de color del mapa de colores. Si *vmin* o *vmax* no es Ninguno, ese límite se determina a partir del valor *arr* min/max."

#: matplotlib.image.imsave:24 of
msgid "A Colormap instance or registered colormap name. The colormap maps scalar data to colors. It is ignored for RGB(A) data."
msgstr "Una instancia de Colormap o nombre de mapa de colores registrado. El mapa de colores asigna datos escalares a colores. Se ignora para datos RGB(A)."

#: matplotlib.image.imsave:28 of
msgid "The file format, e.g. 'png', 'pdf', 'svg', ...  The behavior when this is unset is documented under *fname*."
msgstr "El formato de archivo, p. ej., 'png', 'pdf', 'svg', ... El comportamiento cuando no está configurado está documentado bajo *fname*."

#: matplotlib.image.imsave:32 of
msgid "Indicates whether the ``(0, 0)`` index of the array is in the upper left or lower left corner of the axes."
msgstr "Indica si el índice ``(0, 0)`` de la matriz está en la esquina superior izquierda o inferior izquierda de los ejes."

#: matplotlib.image.imsave:38 of
msgid "**dpi**"
msgstr "**dpi**"

#: matplotlib.image.imsave:36 of
msgid "The DPI to store in the metadata of the file.  This does not affect the resolution of the output image.  Depending on file format, this may be rounded to the nearest integer."
msgstr "El DPI para almacenar en los metadatos del archivo. Esto no afecta a la resolución de la imagen de salida. Dependiendo del formato de archivo, esto puede ser redondeado al entero más cercano."

#: matplotlib.image.imsave:43 of
msgid "**metadata**"
msgstr "**metadatos**"

#: of
msgid "dict, optional"
msgstr "dict, optional"

#: matplotlib.image.imsave:41 of
msgid "Metadata in the image file.  The supported keys depend on the output format, see the documentation of the respective backends for more information."
msgstr "Metadatos en el archivo de imagen. Las claves soportadas dependen del formato de salida, vea la documentación de los respectivos backends para más información."

#: matplotlib.image.imsave:61 of
msgid "**pil_kwargs**"
msgstr "**pil_kwargs**"

#: matplotlib.image.imsave:46 of
msgid "Keyword arguments passed to `PIL.Image.Image.save`.  If the 'pnginfo' key is present, it completely overrides *metadata*, including the default 'Software' key."
msgstr "Argumentos de palabra clave pasados a `PIL.Image.save`. Si la clave 'pnginfo' está presente, anula completamente *metadata*, incluyendo la clave 'Software' por defecto."

#: matplotlib.image.pil_to_array:2 of
msgid "Load a `PIL image`_ and return it as a numpy int array."
msgstr "Carga una `imagen PIL`_ y retorna como una matriz de int numpy."

#: matplotlib.image.pil_to_array:26 of
msgid "numpy.array"
msgstr "numpy.array"

#: matplotlib.image.pil_to_array:10 of
msgid "The array shape depends on the image type:"
msgstr "La forma del array depende del tipo de imagen:"

#: matplotlib.image.thumbnail:2 of
msgid "Make a thumbnail of image in *infile* with output filename *thumbfile*."
msgstr "Hacer una miniatura de la imagen en *infile* con el nombre del archivo de salida *thumbnail file*."

#: matplotlib.image.thumbnail:4 of
msgid "See :doc:`/gallery/misc/image_thumbnail_sgskip`."
msgstr "Vea :doc:`/gallery/misc/image_deletnail_sgskip`."

#: matplotlib.image.thumbnail:13 of
msgid "**infile**"
msgstr "**archivo**"

#: matplotlib.image.thumbnail:9 of
msgid "The image file. Matplotlib relies on Pillow_ for image reading, and thus supports a wide range of file formats, including PNG, JPG, TIFF and others."
msgstr "Matplotlib se basa en Pillow_ para la lectura de imágenes, por lo que soporta una amplia gama de formatos de archivo, incluyendo PNG, JPG, TIFF y otros."

#: matplotlib.image.thumbnail:16 of
msgid "**thumbfile**"
msgstr "**Fichero**"

#: matplotlib.image.thumbnail:16 of
msgid "The thumbnail filename."
msgstr "Nombre de archivo en miniatura."

#: matplotlib.image.thumbnail:19 of
msgid "**scale**"
msgstr "**escala**"

#: of
msgid "float, default: 0.1"
msgstr "float, por defecto: 0.1"

#: matplotlib.image.thumbnail:19 of
msgid "The scale factor for the thumbnail."
msgstr "El factor de escala para la uña."

#: of
msgid "str, default: 'bilinear'"
msgstr "str, por defecto: 'bilinear'"

#: matplotlib.image.thumbnail:22 of
msgid "The interpolation scheme used in the resampling. See the *interpolation* parameter of `~.Axes.imshow` for possible values."
msgstr "El esquema de interpolación utilizado en el muestreo. Vea el parámetro *interpolación* de `~.Axes.imshow` para ver los valores posibles."

#: matplotlib.image.thumbnail:30 of
msgid "**preview**"
msgstr "**vista previa**"

#: matplotlib.image.thumbnail:26 of
msgid "If True, the default backend (presumably a user interface backend) will be used which will cause a figure to be raised if `~matplotlib.pyplot.show` is called.  If it is False, the figure is created using `.FigureCanvasBase` and the drawing backend is selected as `.Figure.savefig` would normally do."
msgstr "Si es verdadero, se utilizará el backend por defecto (presumiblemente un backend de interfaz de usuario) que causará que se eleve una figura si `~matplotlib.pyplot. cómo` es llamado. Si es False, la figura se crea usando `.FigureCanvasBase` y el backend de dibujo se selecciona como `.Figure.savefig` lo haría normalmente."

#: matplotlib.image.thumbnail:47 of
msgid "`~.figure.Figure`"
msgstr "`~.figure.Figure`"

#: matplotlib.image.thumbnail:35 of
msgid "The figure instance containing the thumbnail."
msgstr "La instancia de figura que contiene la miniclave."

