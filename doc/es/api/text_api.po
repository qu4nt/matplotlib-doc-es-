msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-19 02:44\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/text_api.po\n"
"X-Crowdin-File-ID: 1964\n"
"Language: es_ES\n"

#: ../../api/text_api.rst:3
msgid "``matplotlib.text``"
msgstr "``matplotlib.text``"

#: matplotlib.text:1 of
msgid "Classes for including text in a figure."
msgstr "Clases para incluir texto en una figura."

#: matplotlib.text.Annotation:1 of
msgid "Bases: :py:class:`matplotlib.text.Text`, :py:class:`matplotlib.text._AnnotationBase`"
msgstr "Bases: :py:class:`matplotlib.text.Text`, :py:class:`matplotlib.text._AnnotationBase`"

#: matplotlib.text.Annotation:2 of
msgid "An `.Annotation` is a `.Text` that can refer to a specific position *xy*. Optionally an arrow pointing from the text to *xy* can be drawn."
msgstr "Una `.Annotation` es un `.Text` que puede referirse a una posición específica *xy*. Opcionalmente se puede dibujar una flecha que apunte desde el texto a *xy*."

#: matplotlib.text.Annotation of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.text.Annotation:21 matplotlib.text.Annotation:49
#: matplotlib.text.Text.set_position:21 of
msgid "**xy**"
msgstr "**xy**"

#: matplotlib.text.Annotation:21 of
msgid "The annotated position."
msgstr "La posición anotada."

#: matplotlib.text.Annotation:24 of
msgid "**xycoords**"
msgstr "**xycoords**"

#: matplotlib.text.Annotation:24 of
msgid "The coordinate system for *xy*."
msgstr "El sistema de coordenadas para *xy*."

#: matplotlib.text.Annotation:28 of
msgid "**arrow_patch**"
msgstr "**arrow_patch**"

#: matplotlib.text.Annotation:27 of
msgid "A `.FancyArrowPatch` to point from *xytext* to *xy*."
msgstr "Un `.FancyArrowPatch` para apuntar desde *xytext* a *xy*."

#: matplotlib.text.Annotation:34 of
msgid "Annotate the point *xy* with text *text*."
msgstr "Anotar el punto *xy* con el texto *text*."

#: matplotlib.text.Annotation:36 of
msgid "In the simplest form, the text is placed at *xy*."
msgstr "En la forma más simple, el texto se coloca en *xy*."

#: matplotlib.text.Annotation:38 of
msgid "Optionally, the text can be displayed in another position *xytext*. An arrow pointing from the text to the annotated point *xy* can then be added by defining *arrowprops*."
msgstr "Opcionalmente, el texto puede mostrarse en otra posición *xytext*. Entonces se puede añadir una flecha que apunte desde el texto al punto anotado *xy* definiendo *arrowprops*."

#: matplotlib.text.Annotation matplotlib.text.Annotation.draw
#: matplotlib.text.Annotation.get_tightbbox
#: matplotlib.text.Annotation.get_window_extent
#: matplotlib.text.Annotation.set_figure matplotlib.text.OffsetFrom
#: matplotlib.text.OffsetFrom.set_unit matplotlib.text.Text.draw
#: matplotlib.text.Text.get_window_extent
#: matplotlib.text.Text.set_backgroundcolor matplotlib.text.Text.set_bbox
#: matplotlib.text.Text.set_clip_box matplotlib.text.Text.set_clip_on
#: matplotlib.text.Text.set_clip_path matplotlib.text.Text.set_color
#: matplotlib.text.Text.set_fontfamily matplotlib.text.Text.set_fontname
#: matplotlib.text.Text.set_fontproperties matplotlib.text.Text.set_fontsize
#: matplotlib.text.Text.set_fontstretch matplotlib.text.Text.set_fontstyle
#: matplotlib.text.Text.set_fontvariant matplotlib.text.Text.set_fontweight
#: matplotlib.text.Text.set_horizontalalignment
#: matplotlib.text.Text.set_linespacing
#: matplotlib.text.Text.set_math_fontfamily
#: matplotlib.text.Text.set_multialignment matplotlib.text.Text.set_parse_math
#: matplotlib.text.Text.set_position matplotlib.text.Text.set_rotation
#: matplotlib.text.Text.set_rotation_mode matplotlib.text.Text.set_text
#: matplotlib.text.Text.set_transform_rotates_text
#: matplotlib.text.Text.set_usetex matplotlib.text.Text.set_verticalalignment
#: matplotlib.text.Text.set_wrap matplotlib.text.Text.set_x
#: matplotlib.text.Text.set_y matplotlib.text.Text.update
#: matplotlib.text.get_rotation of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.text.Annotation:45 of
msgid "**text**"
msgstr "**texto**"

#: matplotlib.artist.Annotation.set:31 matplotlib.artist.Annotation.set:36
#: matplotlib.artist.Annotation.set:50 matplotlib.artist.Text.set:29
#: matplotlib.artist.Text.set:34 matplotlib.artist.Text.set:48
#: matplotlib.text.Text:50 matplotlib.text.Text:55 matplotlib.text.Text:69 of
msgid "str"
msgstr "str"

#: matplotlib.text.Annotation:45 of
msgid "The text of the annotation."
msgstr "El texto de la anotación."

#: matplotlib.artist.Annotation.set:41 matplotlib.artist.Text.set:39
#: matplotlib.text.Text:60 of
msgid "(float, float)"
msgstr "(float, float)"

#: matplotlib.text.Annotation:48 of
msgid "The point *(x, y)* to annotate. The coordinate system is determined by *xycoords*."
msgstr "El punto *(x, y)* a anotar. El sistema de coordenadas está determinado por *coordenadasxy*."

#: matplotlib.text.Annotation:53 of
msgid "**xytext** : (float, float), default: *xy*"
msgstr "**xytext** : (float, float), por defecto: *xy*"

#: of
msgid "(float, float), default:"
msgstr "(float, float), por defecto:"

#: matplotlib.text.Annotation:52 of
msgid "The position *(x, y)* to place the text at. The coordinate system is determined by *textcoords*."
msgstr "La posición *(x, y)* en la que colocar el texto. El sistema de coordenadas está determinado por *textcoords*."

#: matplotlib.text.Annotation:104 of
msgid "**xycoords** : str or `.Artist` or `.Transform` or callable or (float, float), default: 'data'"
msgstr "**xycoords** : str o `.Artist` o `.Transform` o callable o (float, float), por defecto: 'data'"

#: of
msgid "str or"
msgstr "str or"

#: matplotlib.text.Annotation:56 of
msgid "The coordinate system that *xy* is given in. The following types of values are supported:"
msgstr "El sistema de coordenadas en el que se da *xy*. Se admiten los siguientes tipos de valores:"

#: matplotlib.text.Annotation:59 of
msgid "One of the following strings:"
msgstr "Una de las siguientes cadenas:"

#: matplotlib.text.Annotation:62 matplotlib.text.Annotation:113 of
msgid "Value"
msgstr "Valor"

#: matplotlib.artist.Annotation.set:10 matplotlib.artist.Text.set:10
#: matplotlib.text.Annotation:62 matplotlib.text.Annotation:113
#: matplotlib.text.Annotation:133 matplotlib.text.Annotation:153
#: matplotlib.text.Text:31 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.text.Annotation:64 of
msgid "'figure points'"
msgstr "'figure points'"

#: matplotlib.text.Annotation:64 of
msgid "Points from the lower left of the figure"
msgstr "Puntos de la parte inferior izquierda de la figura"

#: matplotlib.text.Annotation:65 of
msgid "'figure pixels'"
msgstr "'figure pixels'"

#: matplotlib.text.Annotation:65 of
msgid "Pixels from the lower left of the figure"
msgstr "Píxeles de la parte inferior izquierda de la figura"

#: matplotlib.text.Annotation:66 of
msgid "'figure fraction'"
msgstr "'figure fraction'"

#: matplotlib.text.Annotation:66 of
msgid "Fraction of figure from lower left"
msgstr "Fracción de la figura desde la parte inferior izquierda"

#: matplotlib.text.Annotation:67 of
msgid "'subfigure points'"
msgstr "'subfigure points'"

#: matplotlib.text.Annotation:67 of
msgid "Points from the lower left of the subfigure"
msgstr "Puntos de la parte inferior izquierda de la subfigura"

#: matplotlib.text.Annotation:68 of
msgid "'subfigure pixels'"
msgstr "'subfigure pixels'"

#: matplotlib.text.Annotation:68 of
msgid "Pixels from the lower left of the subfigure"
msgstr "Píxeles de la parte inferior izquierda de la subfigura"

#: matplotlib.text.Annotation:69 of
msgid "'subfigure fraction'"
msgstr "'subfigure fraction'"

#: matplotlib.text.Annotation:69 of
msgid "Fraction of subfigure from lower left"
msgstr "Fracción de la subfigura desde la parte inferior izquierda"

#: matplotlib.text.Annotation:70 of
msgid "'axes points'"
msgstr "'axes points'"

#: matplotlib.text.Annotation:70 of
msgid "Points from lower left corner of axes"
msgstr "'polar'"

#: matplotlib.text.Annotation:71 of
msgid "'axes pixels'"
msgstr "'axes pixels'"

#: matplotlib.text.Annotation:71 of
msgid "Pixels from lower left corner of axes"
msgstr "Píxeles de la esquina inferior izquierda de los ejes"

#: matplotlib.text.Annotation:72 of
msgid "'axes fraction'"
msgstr "'axes fraction'"

#: matplotlib.text.Annotation:72 of
msgid "Fraction of axes from lower left"
msgstr "Fracción de ejes desde la parte inferior izquierda"

#: matplotlib.text.Annotation:73 of
msgid "'data'"
msgstr "'data'"

#: matplotlib.text.Annotation:73 of
msgid "Use the coordinate system of the object being annotated (default)"
msgstr "Utilizar el sistema de coordenadas del objeto que se anota (por defecto)"

#: matplotlib.text.Annotation:75 of
msgid "'polar'"
msgstr "'polar'"

#: matplotlib.text.Annotation:75 of
msgid "*(theta, r)* if not native 'data' coordinates"
msgstr "*(theta, r)* si no son coordenadas nativas de 'data'"

#: matplotlib.text.Annotation:79 of
msgid "Note that 'subfigure pixels' and 'figure pixels' are the same for the parent figure, so users who want code that is usable in a subfigure can use 'subfigure pixels'."
msgstr "Ten en cuenta que 'subfigure pixels' y 'figure pixels' son los mismos para la figura padre, por lo que los usuarios que quieran un código utilizable en una subfigura pueden utilizar 'subfigure pixels'."

#: matplotlib.text.Annotation:83 of
msgid "An `.Artist`: *xy* is interpreted as a fraction of the artist's `~matplotlib.transforms.Bbox`. E.g. *(0, 0)* would be the lower left corner of the bounding box and *(0.5, 1)* would be the center top of the bounding box."
msgstr "Un `.Artist`: *xy* se interpreta como una fracción del artista `~matplotlib.transforms.Bbox`. Por ejemplo, *(0, 0)* sería la esquina inferior izquierda de la caja delimitadora y *(0,5, 1)* sería la parte superior central de la caja delimitadora."

#: matplotlib.text.Annotation:88 of
msgid "A `.Transform` to transform *xy* to screen coordinates."
msgstr "Un `.Transform` para transformar *xy* a coordenadas de pantalla."

#: matplotlib.text.Annotation:90 of
msgid "A function with one of the following signatures::"
msgstr "Una función con una de las siguientes firmas::"

#: matplotlib.text.Annotation:95 of
msgid "where *renderer* is a `.RendererBase` subclass."
msgstr "donde *renderer* es una subclase `.RendererBase`."

#: matplotlib.text.Annotation:97 of
msgid "The result of the function is interpreted like the `.Artist` and `.Transform` cases above."
msgstr "El resultado de la función se interpreta como los casos `.Artist` y `.Transform` anteriores."

#: matplotlib.text.Annotation:100 of
msgid "A tuple *(xcoords, ycoords)* specifying separate coordinate systems for *x* and *y*. *xcoords* and *ycoords* must each be of one of the above described types."
msgstr "Una tupla *(xcoords, ycoords)* que especifica sistemas de coordenadas separados para *x* y *y*. *xcoords* y *ycoords* deben ser cada uno de los tipos descritos anteriormente."

#: matplotlib.text.Annotation:104 of
msgid "See :ref:`plotting-guide-annotation` for more details."
msgstr "Ver :ref:`plotting-guide-annotation` para más detalles."

#: matplotlib.text.Annotation:117 of
msgid "**textcoords** : str or `.Artist` or `.Transform` or callable or (float, float), default: value of *xycoords*"
msgstr "**textcoords** : str o `.Artist` o `.Transform` o callable o (float, float), por defecto: valor de *xycoords*"

#: matplotlib.text.Annotation:107 of
msgid "The coordinate system that *xytext* is given in."
msgstr "El sistema de coordenadas en el que se da *xytext*."

#: matplotlib.text.Annotation:109 of
msgid "All *xycoords* values are valid as well as the following strings:"
msgstr "Todos los valores *xycoords* son válidos, así como las siguientes cadenas:"

#: matplotlib.text.Annotation:115 of
msgid "'offset points'"
msgstr "'offset points'"

#: matplotlib.text.Annotation:115 of
msgid "Offset (in points) from the *xy* value"
msgstr "Desplazamiento (en puntos) del valor *xy*"

#: matplotlib.text.Annotation:116 of
msgid "'offset pixels'"
msgstr "'offset pixels'"

#: matplotlib.text.Annotation:116 of
msgid "Offset (in pixels) from the *xy* value"
msgstr "Desplazamiento (en píxeles) del valor *xy*"

#: matplotlib.text.Annotation:172 of
msgid "**arrowprops**"
msgstr "**arrowprops**"

#: of
msgid "dict, optional"
msgstr "dict, opcional"

#: matplotlib.text.Annotation:120 of
msgid "The properties used to draw a `.FancyArrowPatch` arrow between the positions *xy* and *xytext*.  Defaults to None, i.e. no arrow is drawn."
msgstr "Las propiedades utilizadas para dibujar una flecha `.FancyArrowPatch` entre las posiciones *xy* y *xytext*.  Por defecto es None, es decir, no se dibuja ninguna flecha."

#: matplotlib.text.Annotation:124 of
msgid "For historical reasons there are two different ways to specify arrows, \"simple\" and \"fancy\":"
msgstr "Por razones históricas, hay dos formas diferentes de especificar las flechas, \"simple\" y \"elegante\":"

#: matplotlib.text.Annotation:127 of
msgid "**Simple arrow:**"
msgstr "**Flecha simple:**"

#: matplotlib.text.Annotation:129 of
msgid "If *arrowprops* does not contain the key 'arrowstyle' the allowed keys are:"
msgstr "Si *arrowprops* no contiene la clave 'arrowstyle' las claves permitidas son:"

#: matplotlib.text.Annotation:133 matplotlib.text.Annotation:153 of
msgid "Key"
msgstr "Clave"

#: matplotlib.text.Annotation:135 of
msgid "width"
msgstr "anchura"

#: matplotlib.text.Annotation:135 of
msgid "The width of the arrow in points"
msgstr "El ancho de la flecha en puntos"

#: matplotlib.text.Annotation:136 of
msgid "headwidth"
msgstr "headwidth"

#: matplotlib.text.Annotation:136 of
msgid "The width of the base of the arrow head in points"
msgstr "El ancho de la base de la punta de la flecha en puntos"

#: matplotlib.text.Annotation:137 of
msgid "headlength"
msgstr "headlength"

#: matplotlib.text.Annotation:137 of
msgid "The length of the arrow head in points"
msgstr "La longitud de la punta de la flecha en puntos"

#: matplotlib.text.Annotation:138 of
msgid "shrink"
msgstr "reducir"

#: matplotlib.text.Annotation:138 of
msgid "Fraction of total length to shrink from both ends"
msgstr "Fracción de la longitud total a encoger desde ambos extremos"

#: matplotlib.text.Annotation:139 matplotlib.text.Annotation:164 of
msgid "?"
msgstr "?"

#: matplotlib.text.Annotation:139 of
msgid "Any key to :class:`matplotlib.patches.FancyArrowPatch`"
msgstr "Cualquier clave para :class:`matplotlib.patches.FancyArrowPatch`"

#: matplotlib.text.Annotation:142 of
msgid "The arrow is attached to the edge of the text box, the exact position (corners or centers) depending on where it's pointing to."
msgstr "La flecha se une al borde de la caja de texto, la posición exacta (esquinas o centros) depende de hacia dónde apunte."

#: matplotlib.text.Annotation:145 of
msgid "**Fancy arrow:**"
msgstr "**Flecha de lujo:**"

#: matplotlib.text.Annotation:147 of
msgid "This is used if 'arrowstyle' is provided in the *arrowprops*."
msgstr "Se utiliza si se proporciona 'arrowstyle' en el *arrowprops*."

#: matplotlib.text.Annotation:149 of
msgid "Valid keys are the following `~matplotlib.patches.FancyArrowPatch` parameters:"
msgstr "Las claves válidas son los siguientes parámetros:"

#: matplotlib.text.Annotation:155 of
msgid "arrowstyle"
msgstr "arrowstyle"

#: matplotlib.text.Annotation:155 of
msgid "the arrow style"
msgstr "el estilo de la flecha"

#: matplotlib.text.Annotation:156 of
msgid "connectionstyle"
msgstr "connectionstyle"

#: matplotlib.text.Annotation:156 of
msgid "the connection style"
msgstr "el estilo de conexión"

#: matplotlib.text.Annotation:157 of
msgid "relpos"
msgstr "relpos"

#: matplotlib.text.Annotation:157 of
msgid "see below; default is (0.5, 0.5)"
msgstr "ver abajo; por defecto es (0.5, 0.5)"

#: matplotlib.text.Annotation:158 of
msgid "patchA"
msgstr "patchA"

#: matplotlib.text.Annotation:158 of
msgid "default is bounding box of the text"
msgstr "por defecto es la caja de delimitación del texto"

#: matplotlib.text.Annotation:159 of
msgid "patchB"
msgstr "patchB"

#: matplotlib.text.Annotation:159 of
msgid "default is None"
msgstr "por defecto es None"

#: matplotlib.text.Annotation:160 of
msgid "shrinkA"
msgstr "shrinkA"

#: matplotlib.text.Annotation:160 matplotlib.text.Annotation:161 of
msgid "default is 2 points"
msgstr "por defecto son 2 puntos"

#: matplotlib.text.Annotation:161 of
msgid "shrinkB"
msgstr "shrinkB"

#: matplotlib.text.Annotation:162 of
msgid "mutation_scale"
msgstr "mutation_scale"

#: matplotlib.text.Annotation:162 of
msgid "default is text size (in points)"
msgstr "por defecto es el tamaño del texto (en puntos)"

#: matplotlib.text.Annotation:163 of
msgid "mutation_aspect"
msgstr "mutation_aspect"

#: matplotlib.text.Annotation:163 of
msgid "default is 1."
msgstr "por defecto es 1."

#: matplotlib.text.Annotation:164 of
msgid "any key for :class:`matplotlib.patches.PathPatch`"
msgstr "cualquier clave para :class:`matplotlib.patches.PathPatch`"

#: matplotlib.text.Annotation:167 of
msgid "The exact starting point position of the arrow is defined by *relpos*. It's a tuple of relative coordinates of the text box, where (0, 0) is the lower left corner and (1, 1) is the upper right corner. Values <0 and >1 are supported and specify points outside the text box. By default (0.5, 0.5) the starting point is centered in the text box."
msgstr "La posición exacta del punto de partida de la flecha se define por *relpos*. Es una tupla de coordenadas relativas de la caja de texto, donde (0, 0) es la esquina inferior izquierda y (1, 1) es la esquina superior derecha. Los valores <0 y >1 son compatibles y especifican puntos fuera de la caja de texto. Por defecto (0.5, 0.5) el punto de partida está centrado en la caja de texto."

#: matplotlib.text.Annotation:182 of
msgid "**annotation_clip**"
msgstr "**annotation_clip**"

#: of
msgid "bool or None, default: None"
msgstr "bool o None, por defecto: None"

#: matplotlib.text.Annotation:175 of
msgid "Whether to draw the annotation when the annotation point *xy* is outside the axes area."
msgstr "Si se dibuja la anotación cuando el punto de anotación *xy* está fuera del área de los ejes."

#: matplotlib.text.Annotation:178 of
msgid "If *True*, the annotation will only be drawn when *xy* is within the axes."
msgstr "Si *True*, la anotación sólo se dibujará cuando *xy* esté dentro de los ejes."

#: matplotlib.text.Annotation:180 of
msgid "If *False*, the annotation will always be drawn."
msgstr "Si *False*, la anotación se dibujará siempre."

#: matplotlib.text.Annotation:181 of
msgid "If *None*, the annotation will only be drawn when *xy* is within the axes and *xycoords* is 'data'."
msgstr "Si *None*, la anotación sólo se dibujará cuando *xy* esté dentro de los ejes y *xycoords* sea 'data'."

#: matplotlib.text.Annotation:185 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.text.Annotation:185 of
msgid "Additional kwargs are passed to `~matplotlib.text.Text`."
msgstr "Se pasan kwargs adicionales a `~matplotlib.text.Text`."

#: matplotlib.text.Annotation matplotlib.text.Annotation.get_tightbbox
#: matplotlib.text.get_rotation of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.text.Annotation:196 of
msgid "`.Annotation`"
msgstr "`.Annotation`"

#: matplotlib.text.Annotation:201 of
msgid ":ref:`plotting-guide-annotation`"
msgstr ":ref:`plotting-guide-annotation`"

#: matplotlib.text.Annotation.anncoords:2 of
msgid "The coordinate system to use for `.Annotation.xyann`."
msgstr "El sistema de coordenadas a utilizar para `.Annotation.xyann`."

#: matplotlib.text.Annotation.contains:2 matplotlib.text.Text.contains:2 of
msgid "Return whether the mouse event occurred inside the axis-aligned bounding-box of the text."
msgstr "Devuelve si el evento del ratón ocurrió dentro de la caja delimitadora alineada con el eje del texto."

#: matplotlib.text.Annotation.draw:2 matplotlib.text.Text.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr "Dibuja el Artista (y sus hijos) usando el renderizador dado."

#: matplotlib.text.Annotation.draw:4 matplotlib.text.Text.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr "Esto no tiene efecto si el artista no es visible (`.Artist.get_visible` devuelve False)."

#: matplotlib.text.Annotation.draw:18 matplotlib.text.Text.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr "**renderizador** : subclase `.RendererBase`."

#: matplotlib.text.Annotation.draw:17 matplotlib.text.Text.draw:17 of
msgid "RendererBase subclass."
msgstr "Subclase RendererBase."

#: matplotlib.text.Annotation.draw:21 matplotlib.text.Text.draw:21
#: matplotlib.text.Text.get_prop_tup:18 matplotlib.text.Text.set_clip_path:24
#: matplotlib.text.Text.set_wrap:19 of
msgid "Notes"
msgstr "Notas"

#: matplotlib.text.Annotation.draw:22 matplotlib.text.Text.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr "Este método se sobrescribe en las subclases de Artist."

#: matplotlib.text.Annotation.get_anncoords:2 of
msgid "Return the coordinate system to use for `.Annotation.xyann`."
msgstr "Devuelve el sistema de coordenadas a utilizar para `.Annotation.xyann`."

#: matplotlib.text.Annotation.get_anncoords:4
#: matplotlib.text.Annotation.set_anncoords:4 of
msgid "See also *xycoords* in `.Annotation`."
msgstr "Ver también *xycoords* en `.Annotation`."

#: matplotlib.text.Annotation.get_tightbbox:2 of
msgid "Like `.Artist.get_window_extent`, but includes any clipping."
msgstr "Como `.Artist.get_window_extent`, pero incluye cualquier recorte."

#: matplotlib.text.Annotation.get_tightbbox:9 of
msgid "**renderer** : `.RendererBase` subclass"
msgstr "**renderer** : subclase `.RendererBase`"

#: matplotlib.text.Annotation.get_tightbbox:8 of
msgid "RendererBase subclass"
msgstr "Subclase RendererBase"

#: matplotlib.text.Annotation.get_tightbbox:8 of
msgid "renderer that will be used to draw the figures (i.e. ``fig.canvas.get_renderer()``)"
msgstr "renderizador que se utilizará para dibujar las figuras (es decir, ``fig.canvas.get_renderer()``)"

#: matplotlib.artist.Annotation.set:19
#: matplotlib.text.Annotation.get_tightbbox:26 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.text.Annotation.get_tightbbox:14 of
msgid "The enclosing bounding box (in figure pixel coordinates)."
msgstr "La caja delimitadora (en coordenadas de píxeles de la figura)."

#: matplotlib.text.Annotation.get_window_extent:2
#: matplotlib.text.Text.get_window_extent:2 of
msgid "Return the `.Bbox` bounding the text, in display units."
msgstr "Devuelve el `.Bbox` que delimita el texto, en unidades de visualización."

#: matplotlib.text.Annotation.get_window_extent:4
#: matplotlib.text.Text.get_window_extent:4 of
msgid "In addition to being used internally, this is useful for specifying clickable regions in a png file on a web page."
msgstr "Además de usarse internamente, esto es útil para especificar regiones clicables en un archivo png en una página web."

#: matplotlib.text.Annotation.get_window_extent:14
#: matplotlib.text.Text.get_window_extent:14 of
msgid "**renderer**"
msgstr "**renderer**"

#: of
msgid "Renderer, optional"
msgstr "Renderizador, opcional"

#: matplotlib.text.Annotation.get_window_extent:10
#: matplotlib.text.Text.get_window_extent:10 of
msgid "A renderer is needed to compute the bounding box.  If the artist has already been drawn, the renderer is cached; thus, it is only necessary to pass this argument when calling `get_window_extent` before the first `draw`.  In practice, it is usually easier to trigger a draw first (e.g. by saving the figure)."
msgstr "Se necesita un renderizador para calcular el cuadro delimitador.  Si el artista ya ha sido dibujado, el renderizador se almacena en caché; por lo tanto, sólo es necesario pasar este argumento cuando se llama a `get_window_extent` antes del primer `draw`.  En la práctica, normalmente es más fácil activar un dibujo primero (por ejemplo, guardando la figura)."

#: matplotlib.text.Annotation.get_window_extent:32
#: matplotlib.text.Text.get_window_extent:32 of
msgid "**dpi**"
msgstr "**dpi**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.text.Annotation.get_window_extent:17
#: matplotlib.text.Text.get_window_extent:17 of
msgid "The dpi value for computing the bbox, defaults to ``self.figure.dpi`` (*not* the renderer dpi); should be set e.g. if to match regions with a figure saved with a custom dpi value."
msgstr "El valor de ppp para calcular el bbox, por defecto es ``self.figure.dpi`` (*no* el ppp del renderizador); debe establecerse, por ejemplo, si se quiere hacer coincidir regiones con una figura guardada con un valor de ppp personalizado."

#: matplotlib.artist.Annotation.set:2 matplotlib.artist.Text.set:2 of
msgid "Set multiple properties at once."
msgstr "Establecer varias propiedades a la vez."

#: matplotlib.artist.Annotation.set:4 matplotlib.artist.Text.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades soportadas son"

#: matplotlib.artist.Annotation.set:10 matplotlib.artist.Text.set:10
#: matplotlib.text.Text:31 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.Annotation.set:12 matplotlib.artist.Text.set:12
#: matplotlib.text.Text:33 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.Annotation.set:12 matplotlib.artist.Text.set:12
#: matplotlib.text.Text:33 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de flotadores (m, n, 3) y un valor de ppp, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.Annotation.set:13 matplotlib.artist.Text.set:13
#: matplotlib.text.Text:34 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.artist.Annotation.set:13 matplotlib.artist.Text.set:13
#: matplotlib.text.Text:34 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.artist.Annotation.set:14 matplotlib.artist.Text.set:14
#: matplotlib.text.Text:35 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.Annotation.set:14 matplotlib.artist.Annotation.set:20
#: matplotlib.artist.Annotation.set:33 matplotlib.artist.Annotation.set:38
#: matplotlib.artist.Annotation.set:42 matplotlib.artist.Annotation.set:49
#: matplotlib.artist.Annotation.set:53 matplotlib.artist.Annotation.set:54
#: matplotlib.artist.Text.set:14 matplotlib.artist.Text.set:31
#: matplotlib.artist.Text.set:36 matplotlib.artist.Text.set:40
#: matplotlib.artist.Text.set:47 matplotlib.artist.Text.set:51
#: matplotlib.artist.Text.set:52 matplotlib.text.Text:35
#: matplotlib.text.Text:52 matplotlib.text.Text:57 matplotlib.text.Text:61
#: matplotlib.text.Text:68 matplotlib.text.Text:72 matplotlib.text.Text:73 of
msgid "bool"
msgstr "bool"

#: matplotlib.artist.Annotation.set:15 of
msgid ":meth:`anncoords <matplotlib.text.Annotation.set_anncoords>`"
msgstr ":meth:`anncoords <matplotlib.text.Annotation.set_anncoords>`"

#: matplotlib.artist.Annotation.set:15 matplotlib.artist.Annotation.set:23
#: matplotlib.artist.Text.set:17 matplotlib.artist.Text.set:18
#: matplotlib.artist.Text.set:19 matplotlib.text.Text:38
#: matplotlib.text.Text:39 matplotlib.text.Text:40 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.artist.Annotation.set:16 of
msgid "``annotation_clip``"
msgstr "``annotation_clip``"

#: matplotlib.artist.Annotation.set:16 matplotlib.artist.Annotation.set:46
#: matplotlib.artist.Annotation.set:51 matplotlib.artist.Text.set:44
#: matplotlib.artist.Text.set:49 matplotlib.text.Text:65
#: matplotlib.text.Text:70 of
msgid "bool or None"
msgstr "bool o None"

#: matplotlib.artist.Annotation.set:17 matplotlib.artist.Text.set:15
#: matplotlib.text.Text:36 of
msgid ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"
msgstr ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"

#: matplotlib.artist.Annotation.set:17 matplotlib.artist.Annotation.set:22
#: matplotlib.artist.Text.set:15 matplotlib.artist.Text.set:20
#: matplotlib.text.Text:36 matplotlib.text.Text:41 of
msgid "color"
msgstr "color"

#: matplotlib.artist.Annotation.set:18 matplotlib.artist.Text.set:16
#: matplotlib.text.Text:37 of
msgid ":meth:`bbox <matplotlib.text.Text.set_bbox>`"
msgstr ":meth:`bbox <matplotlib.text.Text.set_bbox>`"

#: matplotlib.artist.Annotation.set:18 matplotlib.artist.Text.set:16
#: matplotlib.text.Text:37 of
msgid "dict with properties for `.patches.FancyBboxPatch`"
msgstr "dict con propiedades para `.patches.FancyBboxPatch`"

#: matplotlib.artist.Annotation.set:19 matplotlib.artist.Text.set:17
#: matplotlib.text.Text:38 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.Annotation.set:20 matplotlib.artist.Text.set:18
#: matplotlib.text.Text:39 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.Annotation.set:21 matplotlib.artist.Text.set:19
#: matplotlib.text.Text:40 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.Annotation.set:21 of
msgid "Patch or (Path, Transform) or None"
msgstr "Parche o (Ruta, Transformación) o Ninguno"

#: matplotlib.artist.Annotation.set:22 matplotlib.text.Text:41 of
msgid ":meth:`color <matplotlib.text.Text.set_color>` or c"
msgstr ":meth:`color <matplotlib.text.Text.set_color>` or c"

#: matplotlib.artist.Annotation.set:23 matplotlib.artist.Text.set:21
#: matplotlib.text.Text:42 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.Annotation.set:24 matplotlib.text.Text:43 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` or family"
msgstr ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` o familia"

#: matplotlib.artist.Annotation.set:24 matplotlib.artist.Text.set:22
#: matplotlib.text.Text:43 of
msgid "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"
msgstr "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"

#: matplotlib.artist.Annotation.set:25 matplotlib.text.Text:44 of
msgid ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` or font or font_properties"
msgstr ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` o font o font_properties"

#: matplotlib.artist.Annotation.set:25 matplotlib.artist.Text.set:23
#: matplotlib.text.Text:44 of
msgid "`.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr "`.font_manager.FontProperties` o `str` o `pathlib.Path`"

#: matplotlib.artist.Annotation.set:26 matplotlib.text.Text:45 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` or size"
msgstr ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` o size"

#: matplotlib.artist.Annotation.set:26 matplotlib.artist.Text.set:24
#: matplotlib.text.Text:45 of
msgid "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
msgstr "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"

#: matplotlib.artist.Annotation.set:27 matplotlib.text.Text:46 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"
msgstr ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"

#: matplotlib.artist.Annotation.set:27 matplotlib.artist.Text.set:25
#: matplotlib.text.Text:46 of
msgid "{a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"

#: matplotlib.artist.Annotation.set:28 matplotlib.text.Text:47 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` or style"
msgstr ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` o style"

#: matplotlib.artist.Annotation.set:28 matplotlib.artist.Text.set:26
#: matplotlib.text.Text:47 of
msgid "{'normal', 'italic', 'oblique'}"
msgstr "{'normal', 'italic', 'oblique'}"

#: matplotlib.artist.Annotation.set:29 matplotlib.text.Text:48 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` or variant"
msgstr ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` o variant"

#: matplotlib.artist.Annotation.set:29 matplotlib.artist.Text.set:27
#: matplotlib.text.Text:48 of
msgid "{'normal', 'small-caps'}"
msgstr "{'normal', 'small-caps'}"

#: matplotlib.artist.Annotation.set:30 matplotlib.text.Text:49 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"
msgstr ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"

#: matplotlib.artist.Annotation.set:30 matplotlib.artist.Text.set:28
#: matplotlib.text.Text:49 of
msgid "{a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"

#: matplotlib.artist.Annotation.set:31 matplotlib.artist.Text.set:29
#: matplotlib.text.Text:50 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.Annotation.set:32 matplotlib.text.Text:51 of
msgid ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"
msgstr ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"

#: matplotlib.artist.Annotation.set:32 matplotlib.artist.Text.set:30
#: matplotlib.text.Text:51 of
msgid "{'center', 'right', 'left'}"
msgstr "{'center', 'right', 'left'}"

#: matplotlib.artist.Annotation.set:33 matplotlib.artist.Text.set:31
#: matplotlib.text.Text:52 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.Annotation.set:34 matplotlib.artist.Text.set:32
#: matplotlib.text.Text:53 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.Annotation.set:34 matplotlib.artist.Annotation.set:47
#: matplotlib.artist.Text.set:32 matplotlib.artist.Text.set:45
#: matplotlib.text.Text:53 matplotlib.text.Text:66 of
msgid "object"
msgstr "objeto"

#: matplotlib.artist.Annotation.set:35 matplotlib.artist.Text.set:33
#: matplotlib.text.Text:54 of
msgid ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"
msgstr ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"

#: matplotlib.artist.Annotation.set:35 matplotlib.artist.Text.set:33
#: matplotlib.text.Text:54 of
msgid "float (multiple of font size)"
msgstr "float (múltiplo del tamaño de la fuente)"

#: matplotlib.artist.Annotation.set:36 matplotlib.artist.Text.set:34
#: matplotlib.text.Text:55 of
msgid ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"
msgstr ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"

#: matplotlib.artist.Annotation.set:37 matplotlib.text.Text:56 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` or ma"
msgstr ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` o ma"

#: matplotlib.artist.Annotation.set:37 matplotlib.artist.Text.set:35
#: matplotlib.text.Text:56 of
msgid "{'left', 'right', 'center'}"
msgstr "{'left', 'right', 'center'}"

#: matplotlib.artist.Annotation.set:38 matplotlib.artist.Text.set:36
#: matplotlib.text.Text:57 of
msgid ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"
msgstr ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"

#: matplotlib.artist.Annotation.set:39 matplotlib.artist.Text.set:37
#: matplotlib.text.Text:58 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.Annotation.set:39 matplotlib.artist.Text.set:37
#: matplotlib.text.Text:58 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.Annotation.set:40 matplotlib.artist.Text.set:38
#: matplotlib.text.Text:59 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.Annotation.set:40 matplotlib.artist.Text.set:38
#: matplotlib.text.Text:59 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.Annotation.set:41 matplotlib.artist.Text.set:39
#: matplotlib.text.Text:60 of
msgid ":meth:`position <matplotlib.text.Text.set_position>`"
msgstr ":meth:`position <matplotlib.text.Text.set_position>`"

#: matplotlib.artist.Annotation.set:42 matplotlib.artist.Text.set:40
#: matplotlib.text.Text:61 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.Annotation.set:43 matplotlib.artist.Text.set:41
#: matplotlib.text.Text:62 of
msgid ":meth:`rotation <matplotlib.text.Text.set_rotation>`"
msgstr ":meth:`rotation <matplotlib.text.Text.set_rotation>`"

#: matplotlib.artist.Annotation.set:43 matplotlib.artist.Text.set:41
#: matplotlib.text.Text:62 of
msgid "float or {'vertical', 'horizontal'}"
msgstr "float o {'vertical', 'horizontal'}"

#: matplotlib.artist.Annotation.set:44 matplotlib.artist.Text.set:42
#: matplotlib.text.Text:63 of
msgid ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"
msgstr ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"

#: matplotlib.artist.Annotation.set:44 matplotlib.artist.Text.set:42
#: matplotlib.text.Text:63 of
msgid "{None, 'default', 'anchor'}"
msgstr "{None, 'default', 'anchor'}"

#: matplotlib.artist.Annotation.set:45 matplotlib.artist.Text.set:43
#: matplotlib.text.Text:64 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.Annotation.set:45 matplotlib.artist.Text.set:43
#: matplotlib.text.Text:64 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(escala: float, longitud: float, aleatoriedad: float)"

#: matplotlib.artist.Annotation.set:46 matplotlib.artist.Text.set:44
#: matplotlib.text.Text:65 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.Annotation.set:47 matplotlib.artist.Text.set:45
#: matplotlib.text.Text:66 of
msgid ":meth:`text <matplotlib.text.Text.set_text>`"
msgstr ":meth:`text <matplotlib.text.Text.set_text>`"

#: matplotlib.artist.Annotation.set:48 matplotlib.artist.Text.set:46
#: matplotlib.text.Text:67 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.Annotation.set:48 matplotlib.artist.Text.set:46
#: matplotlib.text.Text:67 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.artist.Annotation.set:49 matplotlib.artist.Text.set:47
#: matplotlib.text.Text:68 of
msgid ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"
msgstr ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"

#: matplotlib.artist.Annotation.set:50 matplotlib.artist.Text.set:48
#: matplotlib.text.Text:69 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.Annotation.set:51 matplotlib.artist.Text.set:49
#: matplotlib.text.Text:70 of
msgid ":meth:`usetex <matplotlib.text.Text.set_usetex>`"
msgstr ":meth:`usetex <matplotlib.text.Text.set_usetex>`"

#: matplotlib.artist.Annotation.set:52 matplotlib.text.Text:71 of
msgid ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"
msgstr ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"

#: matplotlib.artist.Annotation.set:52 matplotlib.artist.Text.set:50
#: matplotlib.text.Text:71 of
msgid "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
msgstr "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"

#: matplotlib.artist.Annotation.set:53 matplotlib.artist.Text.set:51
#: matplotlib.text.Text:72 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.Annotation.set:54 matplotlib.artist.Text.set:52
#: matplotlib.text.Text:73 of
msgid ":meth:`wrap <matplotlib.text.Text.set_wrap>`"
msgstr ":meth:`wrap <matplotlib.text.Text.set_wrap>`"

#: matplotlib.artist.Annotation.set:55 matplotlib.artist.Text.set:53
#: matplotlib.text.Text:74 of
msgid ":meth:`x <matplotlib.text.Text.set_x>`"
msgstr ":meth:`x <matplotlib.text.Text.set_x>`"

#: matplotlib.artist.Annotation.set:55 matplotlib.artist.Annotation.set:56
#: matplotlib.artist.Annotation.set:57 matplotlib.artist.Text.set:53
#: matplotlib.artist.Text.set:54 matplotlib.artist.Text.set:55
#: matplotlib.text.Text:74 matplotlib.text.Text:75 matplotlib.text.Text:76
#: matplotlib.text.get_rotation:26 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.artist.Annotation.set:56 matplotlib.artist.Text.set:54
#: matplotlib.text.Text:75 of
msgid ":meth:`y <matplotlib.text.Text.set_y>`"
msgstr ":meth:`y <matplotlib.text.Text.set_y>`"

#: matplotlib.artist.Annotation.set:57 matplotlib.artist.Text.set:55
#: matplotlib.text.Text:76 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.text.Annotation.set_anncoords:2 of
msgid "Set the coordinate system to use for `.Annotation.xyann`."
msgstr "Establece el sistema de coordenadas a utilizar para `.Annotation.xyann`."

#: matplotlib.text.Annotation.set_figure:2 of
msgid "Set the `.Figure` instance the artist belongs to."
msgstr "Establece la instancia `.Figure` a la que pertenece el artist."

#: matplotlib.text.Annotation.set_figure:21 of
msgid "**fig** : `.Figure`"
msgstr "**fig** : `.Figure`"

#: matplotlib.text.Annotation.set_figure:20 of
msgid "Figure"
msgstr "Figura"

#: matplotlib.text.Annotation.update_positions:2 of
msgid "Update the pixel positions of the annotation text and the arrow patch."
msgstr "Actualizar las posiciones de los píxeles del texto de la anotación y del parche de la flecha."

#: matplotlib.text.Annotation.xyann:2 of
msgid "The text position."
msgstr "La posición del texto."

#: matplotlib.text.Annotation.xyann:4 of
msgid "See also *xytext* in `.Annotation`."
msgstr "Ver también *xytext* en `.Annotation`."

#: matplotlib.text.OffsetFrom:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.text.OffsetFrom:2 of
msgid "Callable helper class for working with `Annotation`."
msgstr "Clase de ayuda invocable para trabajar con `Anotaciones`."

#: matplotlib.text.OffsetFrom:29 of
msgid "**artist** : `.Artist` or `.BboxBase` or `.Transform`"
msgstr "**artist** : `.Artist` o `.BboxBase` o `.Transform`"

#: matplotlib.text.OffsetFrom:28 of
msgid "Artist or BboxBase or Transform"
msgstr "Artista o BboxBase o Transform"

#: matplotlib.text.OffsetFrom:29 of
msgid "The object to compute the offset from."
msgstr "El objeto para calcular el desplazamiento desde."

#: matplotlib.text.OffsetFrom:37 of
msgid "**ref_coord**"
msgstr "**ref_coord**"

#: matplotlib.text.OffsetFrom:32 of
msgid "If *artist* is an `.Artist` or `.BboxBase`, this values is the location to of the offset origin in fractions of the *artist* bounding box."
msgstr "Si *artist* es un `.Artist` o `.BboxBase`, este valor es la ubicación del origen del desplazamiento en fracciones de la caja delimitadora del *artist*."

#: matplotlib.text.OffsetFrom:36 of
msgid "If *artist* is a transform, the offset origin is the transform applied to this value."
msgstr "Si *artist* es una transformación, el origen del desplazamiento es la transformación aplicada a este valor."

#: matplotlib.text.OffsetFrom:53 matplotlib.text.OffsetFrom.set_unit:21 of
msgid "**unit**"
msgstr "**unit**"

#: of
msgid "{'points, 'pixels'}, default: 'points'"
msgstr "{'points, 'pixels'}, default: 'points'"

#: matplotlib.text.OffsetFrom:40 of
msgid "The screen units to use (pixels or points) for the offset input."
msgstr "Las unidades de pantalla a utilizar (píxeles o puntos) para la entrada de desplazamiento."

#: matplotlib.text.OffsetFrom.get_unit:2 of
msgid "Return the unit for input to the transform used by ``__call__``."
msgstr "Devuelve la unidad de entrada a la transformación utilizada por ``__call__``."

#: matplotlib.text.OffsetFrom.set_unit:2 of
msgid "Set the unit for input to the transform used by ``__call__``."
msgstr "Establece la unidad de entrada a la transformación utilizada por ``__call__``."

#: of
msgid "{'points', 'pixels'}"
msgstr "{'points', 'pixels'}"

#: matplotlib.text.Text:1 of
msgid "Bases: :py:class:`matplotlib.artist.Artist`"
msgstr "Bases: :py:class:`matplotlib.artist.Artist`"

#: matplotlib.text.Text:2 of
msgid "Handle storing and drawing of text in window or data coordinates."
msgstr "Maneja el almacenamiento y el dibujo de texto en coordenadas de ventana o de datos."

#: matplotlib.text.Text:23 of
msgid "Create a `.Text` instance at *x*, *y* with string *text*."
msgstr "Crea una instancia `.Text` en *x*, *y* con la cadena *text*."

#: matplotlib.text.Text:25 of
msgid "Valid keyword arguments are:"
msgstr "Los argumentos válidos de la palabra clave son:"

#: matplotlib.artist.Text.set:21 matplotlib.text.Text:42 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.text.Text.get_bbox_patch:2 of
msgid "Return the bbox Patch, or None if the `.patches.FancyBboxPatch` is not made."
msgstr "Devuelve el parche bbox, o None si el `.patches.FancyBboxPatch` no está hecho."

#: matplotlib.text.Text.get_color:2 of
msgid "Alias for `get_color`."
msgstr "Alias para `get_color`."

#: matplotlib.text.Text.get_color:2 of
msgid "Return the color of the text."
msgstr "Devuelve el color del texto."

#: matplotlib.text.Text.get_fontfamily:2 of
msgid "Alias for `get_fontfamily`."
msgstr "Alias para `get_fontfamily`."

#: matplotlib.text.Text.get_fontproperties:2 of
msgid "Alias for `get_fontproperties`."
msgstr "Alias para `get_fontproperties`."

#: matplotlib.text.Text.get_fontfamily:2 of
msgid "Return the list of font families used for font lookup."
msgstr "Devuelve la lista de familias de fuentes utilizadas para la búsqueda de fuentes."

#: matplotlib.text.Text.get_fontfamily:16 of
msgid ":obj:`.font_manager.FontProperties.get_family`"
msgstr ":obj:`.font_manager.FontProperties.get_family`"

#: matplotlib.text.Text.get_fontname:2 of
msgid "Return the font name as a string."
msgstr "Devuelve el nombre de la fuente como una cadena."

#: matplotlib.text.Text.get_fontname:16 of
msgid ":obj:`.font_manager.FontProperties.get_name`"
msgstr ":obj:`.font_manager.FontProperties.get_name`"

#: matplotlib.text.Text.get_fontproperties:2 of
msgid "Return the `.font_manager.FontProperties`."
msgstr "Devuelve las `.font_manager.FontProperties`."

#: matplotlib.text.Text.get_fontsize:2 of
msgid "Return the font size as an integer."
msgstr "Devuelve el tamaño de la fuente como un entero."

#: matplotlib.text.Text.get_fontsize:16 of
msgid ":obj:`.font_manager.FontProperties.get_size_in_points`"
msgstr ":obj:`.font_manager.FontProperties.get_size_in_points`"

#: matplotlib.text.Text.get_fontstyle:2 of
msgid "Return the font style as a string."
msgstr "Devuelve el estilo de la fuente como una cadena."

#: matplotlib.text.Text.get_fontstyle:16 of
msgid ":obj:`.font_manager.FontProperties.get_style`"
msgstr ":obj:`.font_manager.FontProperties.get_style`"

#: matplotlib.text.Text.get_fontvariant:2 of
msgid "Return the font variant as a string."
msgstr "Devuelve la variante de la fuente como una cadena."

#: matplotlib.text.Text.get_fontvariant:16 of
msgid ":obj:`.font_manager.FontProperties.get_variant`"
msgstr ":obj:`.font_manager.FontProperties.get_variant`"

#: matplotlib.text.Text.get_fontweight:2 of
msgid "Return the font weight as a string or a number."
msgstr "Devuelve el peso de la fuente como una cadena o un número."

#: matplotlib.text.Text.get_fontweight:16 of
msgid ":obj:`.font_manager.FontProperties.get_weight`"
msgstr ":obj:`.font_manager.FontProperties.get_weight`"

#: matplotlib.text.Text.get_horizontalalignment:2 of
msgid "Alias for `get_horizontalalignment`."
msgstr "Alias para `get_horizontalalalignment`."

#: matplotlib.text.Text.get_horizontalalignment:2 of
msgid "Return the horizontal alignment as a string.  Will be one of 'left', 'center' or 'right'."
msgstr "Devuelve la alineación horizontal como una cadena.  Será una de 'izquierda', 'centro' o 'derecha'."

#: matplotlib.text.Text.get_math_fontfamily:2 of
msgid "Return the font family name for math text rendered by Matplotlib."
msgstr "Devuelve el nombre de la familia de fuentes para el texto matemático renderizado por Matplotlib."

#: matplotlib.text.Text.get_math_fontfamily:4 of
msgid "The default value is :rc:`mathtext.fontset`."
msgstr "El valor por defecto es :rc:`mathtext.fontset`."

#: matplotlib.text.Text.get_math_fontfamily:17 of
msgid ":obj:`set_math_fontfamily`"
msgstr ":obj:`set_math_fontfamily`"

#: matplotlib.text.Text.get_fontname:2 of
msgid "Alias for `get_fontname`."
msgstr "Alias para `get_fontname`."

#: matplotlib.text.Text.get_parse_math:2 of
msgid "Return whether mathtext parsing is considered for this `Text`."
msgstr "Devuelve si se considera el análisis de mathtext para este `Text`."

#: matplotlib.text.Text.get_position:2 of
msgid "Return the (x, y) position of the text."
msgstr "Devuelve la posición (x, y) del texto."

#: matplotlib.text.Text.get_prop_tup:2 of
msgid "[*Deprecated*] Return a hashable tuple of properties."
msgstr "[*Abandonado*] Devuelve una tupla hashable de propiedades."

#: matplotlib.text.Text.get_prop_tup:4 of
msgid "Not intended to be human readable, but useful for backends who want to cache derived information about text (e.g., layouts) and need to know if the text has changed."
msgstr "No se pretende que sea legible para los humanos, pero es útil para los backends que quieren almacenar en caché información derivada sobre el texto (por ejemplo, diseños) y necesitan saber si el texto ha cambiado."

#: matplotlib.text.Text.get_rotation:2 of
msgid "Return the text angle in degrees between 0 and 360."
msgstr "Devuelve el ángulo del texto en grados entre 0 y 360."

#: matplotlib.text.Text.get_rotation_mode:2 of
msgid "Return the text rotation mode."
msgstr "Devuelve el modo de rotación del texto."

#: matplotlib.text.Text.get_fontsize:2 of
msgid "Alias for `get_fontsize`."
msgstr "Alias para `get_fontsize`."

#: matplotlib.text.Text.get_stretch:2 of
msgid "Return the font stretch as a string or a number."
msgstr "Devuelve el tramo de la fuente como una cadena o un número."

#: matplotlib.text.Text.get_stretch:16 of
msgid ":obj:`.font_manager.FontProperties.get_stretch`"
msgstr ":obj:`.font_manager.FontProperties.get_stretch`"

#: matplotlib.text.Text.get_fontstyle:2 of
msgid "Alias for `get_fontstyle`."
msgstr "Alias para `get_fontstyle`."

#: matplotlib.text.Text.get_text:2 of
msgid "Return the text string."
msgstr "Devuelve la cadena de texto."

#: matplotlib.text.Text.get_transform_rotates_text:2 of
msgid "Return whether rotations of the transform affect the text direction."
msgstr "Devuelve si las rotaciones de la transformación afectan a la dirección del texto."

#: matplotlib.text.Text.get_unitless_position:2 of
msgid "Return the (x, y) unitless position of the text."
msgstr "Devuelve la posición (x, y) sin unidades del texto."

#: matplotlib.text.Text.get_usetex:2 of
msgid "Return whether this `Text` object uses TeX for rendering."
msgstr "Devuelve si este objeto `Text` utiliza TeX para el renderizado."

#: matplotlib.text.Text.get_verticalalignment:2 of
msgid "Alias for `get_verticalalignment`."
msgstr "Alias para `get_verticalalignment`."

#: matplotlib.text.Text.get_fontvariant:2 of
msgid "Alias for `get_fontvariant`."
msgstr "Alias para `get_fontvariant`."

#: matplotlib.text.Text.get_verticalalignment:2 of
msgid "Return the vertical alignment as a string.  Will be one of 'top', 'center', 'bottom', 'baseline' or 'center_baseline'."
msgstr "Devuelve la alineación vertical como una cadena.  Será una de 'top', 'center', 'bottom', 'baseline' o 'center_baseline'."

#: matplotlib.text.Text.get_fontweight:2 of
msgid "Alias for `get_fontweight`."
msgstr "Alias para `get_fontweight`."

#: matplotlib.text.Text.get_wrap:2 of
msgid "Return whether the text can be wrapped."
msgstr "Devuelve si el texto puede ser envuelto."

#: matplotlib.artist.Text.set:20 of
msgid ":meth:`color <matplotlib.text.Text.set_color>`"
msgstr ":meth:`color <matplotlib.text.Text.set_color>`"

#: matplotlib.artist.Text.set:22 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>`"
msgstr ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>`"

#: matplotlib.artist.Text.set:23 of
msgid ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>`"
msgstr ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>`"

#: matplotlib.artist.Text.set:24 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>`"
msgstr ":meth:`fontsize <matplotlib.text.Text.set_fontsize>`"

#: matplotlib.artist.Text.set:25 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>`"
msgstr ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>`"

#: matplotlib.artist.Text.set:26 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>`"
msgstr ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>`"

#: matplotlib.artist.Text.set:27 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>`"
msgstr ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>`"

#: matplotlib.artist.Text.set:28 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>`"
msgstr ":meth:`fontweight <matplotlib.text.Text.set_fontweight>`"

#: matplotlib.artist.Text.set:30 of
msgid ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>`"
msgstr ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>`"

#: matplotlib.artist.Text.set:35 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>`"
msgstr ":meth:`multialignment <matplotlib.text.Text.set_multialignment>`"

#: matplotlib.artist.Text.set:50 of
msgid ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>`"
msgstr ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>`"

#: matplotlib.text.Text.set_backgroundcolor:2 of
msgid "Set the background color of the text by updating the bbox."
msgstr "Establecer el color de fondo del texto actualizando el bbox."

#: matplotlib.text.Text.set_backgroundcolor:15
#: matplotlib.text.Text.set_color:21 of
msgid "**color**"
msgstr "**color**"

#: matplotlib.text.Text.set_backgroundcolor:20 of
msgid ":obj:`.set_bbox`"
msgstr ":obj:`.set_bbox`"

#: matplotlib.text.Text.set_backgroundcolor:21 of
msgid "To change the position of the bounding box"
msgstr "Para cambiar la posición del cuadro delimitador"

#: matplotlib.text.Text.set_bbox:2 of
msgid "Draw a bounding box around self."
msgstr "Dibuja una caja delimitadora alrededor de sí mismo."

#: matplotlib.text.Text.set_bbox:19 of
msgid "**rectprops** : dict with properties for `.patches.FancyBboxPatch`"
msgstr "**rectprops** : dict con propiedades para `.patches.FancyBboxPatch`"

#: of
msgid "dict with properties for"
msgstr "dict con propiedades para"

#: matplotlib.text.Text.set_bbox:8 of
msgid "The default boxstyle is 'square'. The mutation scale of the `.patches.FancyBboxPatch` is set to the fontsize."
msgstr "El boxstyle por defecto es `cuadrado`. La escala de mutación del `.patches.FancyBboxPatch` se ajusta al tamaño de la fuente."

#: matplotlib.text.Text.set_bbox:22 of
msgid "Examples"
msgstr "Ejemplos"

#: matplotlib.text.Text.set_color:2 of
msgid "Alias for `set_color`."
msgstr "Alias para `set_color`."

#: matplotlib.text.Text.set_clip_box:2 of
msgid "Set the artist's clip `.Bbox`."
msgstr "Establecer el clip del artista `.Bbox`."

#: matplotlib.text.Text.set_clip_box:21 of
msgid "**clipbox** : `.Bbox`"
msgstr "**clipbox** : `.Bbox`"

#: matplotlib.text.Text.set_clip_box:20 of
msgid "Bbox"
msgstr "Bbox"

#: matplotlib.text.Text.set_clip_on:2 of
msgid "Set whether the artist uses clipping."
msgstr "Establecer si el artista utiliza el recorte."

#: matplotlib.text.Text.set_clip_on:4 of
msgid "When False artists will be visible outside of the axes which can lead to unexpected results."
msgstr "Cuando es False los artistas serán visibles fuera de los ejes lo que puede llevar a resultados inesperados."

#: matplotlib.text.Text.set_clip_on:23 of
msgid "**b**"
msgstr "**b**"

#: matplotlib.text.Text.set_clip_path:2 of
msgid "Set the artist's clip path."
msgstr "Establecer la ruta del clip del artista."

#: matplotlib.text.Text.set_clip_path:9 of
msgid "**path** : `.Patch` or `.Path` or `.TransformedPath` or None"
msgstr "**ruta** : `.Patch` o `.Path` o `.TransformedPath` o None"

#: matplotlib.text.Text.set_clip_path:8 of
msgid "Patch or Path or TransformedPath or None"
msgstr "Patch o Path o TransformedPath o None"

#: matplotlib.text.Text.set_clip_path:8 of
msgid "The clip path. If given a `.Path`, *transform* must be provided as well. If *None*, a previously set clip path is removed."
msgstr "La ruta del clip. Si se le da un `.Path`, se debe proporcionar también *transform*. Si *None*, se elimina la ruta de recorte previamente establecida."

#: matplotlib.text.Text.set_clip_path:21 of
msgid "**transform** : `~matplotlib.transforms.Transform`, optional"
msgstr "**transformación** : `~matplotlib.transforms.Transform`, opcional"

#: matplotlib.text.Text.set_clip_path:20 of
msgid "Transform, optional"
msgstr "Transformación, opcional"

#: matplotlib.text.Text.set_clip_path:12 of
msgid "Only used if *path* is a `.Path`, in which case the given `.Path` is converted to a `.TransformedPath` using *transform*."
msgstr "Sólo se utiliza si *path* es un `.Path`, en cuyo caso el `.Path` dado se convierte en un `.TransformedPath` utilizando *transform*."

#: matplotlib.text.Text.set_clip_path:25 of
msgid "For efficiency, if *path* is a `.Rectangle` this method will set the clipping box to the corresponding rectangle and set the clipping path to ``None``."
msgstr "Por eficiencia, si *ruta* es un `.Rectángulo` este método establecerá la caja de recorte al rectángulo correspondiente y establecerá la ruta de recorte a ``Ninguna``."

#: matplotlib.text.Text.set_clip_path:29 of
msgid "For technical reasons (support of `~.Artist.set`), a tuple (*path*, *transform*) is also accepted as a single positional parameter."
msgstr "Por razones técnicas (soporte de `~.Artist.set`), también se acepta una tupla (*ruta*, *transformación*) como parámetro posicional único."

#: matplotlib.text.Text.set_color:2 of
msgid "Set the foreground color of the text"
msgstr "Establecer el color de primer plano del texto"

#: matplotlib.text.Text.set_fontfamily:2 of
msgid "Alias for `set_fontfamily`."
msgstr "Alias para `set_fontfamily`."

#: matplotlib.text.Text.set_fontproperties:2 of
msgid "Alias for `set_fontproperties`."
msgstr "Alias para `set_fontproperties`."

#: matplotlib.text.Text.set_fontfamily:2 of
msgid "Set the font family.  May be either a single string, or a list of strings in decreasing priority.  Each string may be either a real font name or a generic font class name.  If the latter, the specific font names will be looked up in the corresponding rcParams."
msgstr "Establece la familia de fuentes.  Puede ser una sola cadena, o una lista de cadenas en prioridad decreciente.  Cada cadena puede ser un nombre de fuente real o un nombre de clase de fuente genérico.  En este último caso, los nombres específicos de las fuentes se buscarán en los correspondientes rcParams."

#: matplotlib.text.Text.set_fontfamily:7 of
msgid "If a `Text` instance is constructed with ``fontfamily=None``, then the font is set to :rc:`font.family`, and the same is done when `set_fontfamily()` is called on an existing `Text` instance."
msgstr "Si una instancia de `Text` se construye con ``fontfamily=None``, entonces la fuente se establece en :rc:`font.family`, y lo mismo se hace cuando se llama a `set_fontfamily()` en una instancia de `Text` existente."

#: matplotlib.text.Text.set_fontfamily:22 matplotlib.text.Text.set_fontname:16
#: of
msgid "**fontname**"
msgstr "**fontname**"

#: matplotlib.text.Text.set_fontfamily:27 matplotlib.text.Text.set_fontname:21
#: of
msgid ":obj:`.font_manager.FontProperties.set_family`"
msgstr ":obj:`.font_manager.FontProperties.set_family`"

#: matplotlib.text.Text.set_fontname:2 of
msgid "Alias for `set_family`."
msgstr "Alias para `set_family`."

#: matplotlib.text.Text.set_fontname:4 of
msgid "One-way alias only: the getter differs."
msgstr "Alias unidireccional solamente: el getter difiere."

#: matplotlib.text.Text.set_fontproperties:2 of
msgid "Set the font properties that control the text."
msgstr "Establecer las propiedades de la fuente que controlan el texto."

#: matplotlib.text.Text.set_fontproperties:23 of
msgid "**fp** : `.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr "**fp** : `.font_manager.FontProperties` o `str` o `pathlib.Path`"

#: matplotlib.text.Text.set_fontproperties:22 of
msgid "font_manager.FontProperties or str or pathlib.Path"
msgstr "font_manager.FontProperties o str o pathlib.Path"

#: matplotlib.text.Text.set_fontproperties:8 of
msgid "If a `str`, it is interpreted as a fontconfig pattern parsed by `.FontProperties`.  If a `pathlib.Path`, it is interpreted as the absolute path to a font file."
msgstr "Si es una `str`, se interpreta como un patrón de fontconfig analizado por `.FontProperties`.  Si es un `pathlib.Path`, se interpreta como la ruta absoluta a un archivo de fuentes."

#: matplotlib.text.Text.set_fontsize:2 of
msgid "Set the font size."
msgstr "Establecer el tamaño de la fuente."

#: matplotlib.text.Text.set_fontsize:16 of
msgid "**fontsize**"
msgstr "**fontsize**"

#: matplotlib.text.Text.set_fontsize:8 of
msgid "If float, the fontsize in points. The string values denote sizes relative to the default font size."
msgstr "Si es float, el tamaño de las fuentes en puntos. Los valores de cadena denotan tamaños relativos al tamaño de la fuente por defecto."

#: matplotlib.text.Text.set_fontsize:21 of
msgid ":obj:`.font_manager.FontProperties.set_size`"
msgstr ":obj:`.font_manager.FontProperties.set_size`"

#: matplotlib.text.Text.set_fontstretch:2 of
msgid "Set the font stretch (horizontal condensation or expansion)."
msgstr "Establecer el estiramiento de la fuente (condensación o expansión horizontal)."

#: matplotlib.text.Text.set_fontstretch:15 of
msgid "**stretch**"
msgstr "**stretch**"

#: matplotlib.text.Text.set_fontstretch:20 of
msgid ":obj:`.font_manager.FontProperties.set_stretch`"
msgstr ":obj:`.font_manager.FontProperties.set_stretch`"

#: matplotlib.text.Text.set_fontstyle:2 of
msgid "Set the font style."
msgstr "Establecer el estilo de la fuente."

#: matplotlib.text.Text.set_fontstyle:15 of
msgid "**fontstyle**"
msgstr "**fontstyle**"

#: matplotlib.text.Text.set_fontstyle:20 of
msgid ":obj:`.font_manager.FontProperties.set_style`"
msgstr ":obj:`.font_manager.FontProperties.set_style`"

#: matplotlib.text.Text.set_fontvariant:2 of
msgid "Set the font variant."
msgstr "Establecer la variante de la fuente."

#: matplotlib.text.Text.set_fontvariant:15 of
msgid "**variant**"
msgstr "**variant**"

#: matplotlib.text.Text.set_fontvariant:20 of
msgid ":obj:`.font_manager.FontProperties.set_variant`"
msgstr ":obj:`.font_manager.FontProperties.set_variant`"

#: matplotlib.text.Text.set_fontweight:2 of
msgid "Set the font weight."
msgstr "Establecer el peso de la fuente."

#: matplotlib.text.Text.set_fontweight:15 of
msgid "**weight**"
msgstr "**weight**"

#: matplotlib.text.Text.set_fontweight:20 of
msgid ":obj:`.font_manager.FontProperties.set_weight`"
msgstr ":obj:`.font_manager.FontProperties.set_weight`"

#: matplotlib.text.Text.set_horizontalalignment:2 of
msgid "Alias for `set_horizontalalignment`."
msgstr "Alias para `set_horizontalalignment`."

#: matplotlib.text.Text.set_horizontalalignment:2 of
msgid "Set the horizontal alignment to one of"
msgstr "Establecer la alineación horizontal a uno de"

#: matplotlib.text.Text.set_horizontalalignment:21
#: matplotlib.text.Text.set_multialignment:24
#: matplotlib.text.Text.set_verticalalignment:21 of
msgid "**align**"
msgstr "**align**"

#: matplotlib.text.Text.set_linespacing:2 of
msgid "Set the line spacing as a multiple of the font size."
msgstr "Establecer el interlineado como un múltiplo del tamaño de la fuente."

#: matplotlib.text.Text.set_linespacing:4 of
msgid "The default line spacing is 1.2."
msgstr "El interlineado por defecto es 1,2."

#: matplotlib.text.Text.set_linespacing:22 of
msgid "**spacing**"
msgstr "**Interlineado**"

#: matplotlib.text.Text.set_multialignment:2 of
msgid "Alias for `set_multialignment`."
msgstr "Alias para `set_multialignment`."

#: matplotlib.text.Text.set_math_fontfamily:2 of
msgid "Set the font family for math text rendered by Matplotlib."
msgstr "Establecer la familia de fuentes para el texto matemático renderizado por Matplotlib."

#: matplotlib.text.Text.set_math_fontfamily:4 of
msgid "This does only affect Matplotlib's own math renderer. It has no effect when rendering with TeX (``usetex=True``)."
msgstr "Esto sólo afecta al propio renderizador matemático de Matplotlib. No tiene efecto cuando se renderiza con TeX (``usetex=True``)."

#: matplotlib.text.Text.set_math_fontfamily:21 of
msgid "**fontfamily**"
msgstr "**fontfamily**"

#: matplotlib.text.Text.set_math_fontfamily:10 of
msgid "The name of the font family."
msgstr "El nombre de la familia de fuentes."

#: matplotlib.text.Text.set_math_fontfamily:12 of
msgid "Available font families are defined in the :ref:`matplotlibrc.template file <customizing-with-matplotlibrc-files>`."
msgstr "Las familias de fuentes disponibles se definen en el archivo :ref:`matplotlibrc.template <customizing-with-matplotlibrc-files>`."

#: matplotlib.text.Text.set_math_fontfamily:26 of
msgid ":obj:`get_math_fontfamily`"
msgstr ":obj:`get_math_fontfamily`"

#: matplotlib.text.Text.set_multialignment:2 of
msgid "Set the text alignment for multiline texts."
msgstr "Establecer la alineación del texto para los textos multilínea."

#: matplotlib.text.Text.set_multialignment:4 of
msgid "The layout of the bounding box of all the lines is determined by the horizontalalignment and verticalalignment properties. This property controls the alignment of the text lines within that box."
msgstr "La disposición de la caja delimitadora de todas las líneas viene determinada por las propiedades horizontalalignment y verticalalignment. Esta propiedad controla la alineación de las líneas de texto dentro de esa caja."

#: matplotlib.text.Text.set_fontname:2 of
msgid "Alias for `set_fontname`."
msgstr "Alias para `set_fontname`."

#: matplotlib.text.Text.set_parse_math:2 of
msgid "Override switch to disable any mathtext parsing for this `Text`."
msgstr "Anular el interruptor para desactivar cualquier análisis de texto matemático para este `Text`."

#: matplotlib.text.Text.set_parse_math:22 of
msgid "**parse_math**"
msgstr "**parse_math**"

#: matplotlib.text.Text.set_parse_math:8 of
msgid "If False, this `Text` will never use mathtext.  If True, mathtext will be used if there is an even number of unescaped dollar signs."
msgstr "Si es False, este `Text` nunca utilizará mathtext.  Si es True, se utilizará mathtext si hay un número par de signos de dólar sin esconder."

#: matplotlib.text.Text.set_position:2 of
msgid "Set the (*x*, *y*) position of the text."
msgstr "Establece la posición (*x*, *y*) del texto."

#: matplotlib.text.Text.set_rotation:2 of
msgid "Set the rotation of the text."
msgstr "Establecer la rotación del texto."

#: matplotlib.text.Text.set_rotation:22 matplotlib.text.Text.set_text:23 of
msgid "**s**"
msgstr "**s**"

#: matplotlib.text.Text.set_rotation:8 of
msgid "The rotation angle in degrees in mathematically positive direction (counterclockwise). 'horizontal' equals 0, 'vertical' equals 90."
msgstr "El ángulo de rotación en grados en dirección matemáticamente positiva (en sentido contrario a las agujas del reloj). 'horizontal' es igual a 0, 'vertical' es igual a 90."

#: matplotlib.text.Text.set_rotation_mode:2 of
msgid "Set text rotation mode."
msgstr "Establecer el modo de rotación del texto."

#: matplotlib.text.Text.set_rotation_mode:23 of
msgid "**m**"
msgstr "**m**"

#: matplotlib.text.Text.set_rotation_mode:8 of
msgid "If ``None`` or ``\"default\"``, the text will be first rotated, then aligned according to their horizontal and vertical alignments.  If ``\"anchor\"``, then alignment occurs before rotation."
msgstr "Si ``None`` o ``\"default\"``, el texto será primero rotado, y luego alineado según sus alineaciones horizontales y verticales.  Si ``\"anchor\"``, entonces la alineación se produce antes de la rotación."

#: matplotlib.text.Text.set_fontsize:2 of
msgid "Alias for `set_fontsize`."
msgstr "Alias para `set_fontsize`."

#: matplotlib.text.Text.set_fontstretch:2 of
msgid "Alias for `set_fontstretch`."
msgstr "Alias para `set_fontstretch`."

#: matplotlib.text.Text.set_fontstyle:2 of
msgid "Alias for `set_fontstyle`."
msgstr "Alias para `set_fontstyle`."

#: matplotlib.text.Text.set_text:2 of
msgid "Set the text string *s*."
msgstr "Establecer la cadena de texto *s*."

#: matplotlib.text.Text.set_text:4 of
msgid "It may contain newlines (``\\n``) or math in LaTeX syntax."
msgstr "Puede contener nuevas líneas (``\\n``) o matemáticas en sintaxis LaTeX."

#: matplotlib.text.Text.set_text:9 of
msgid "Any object gets converted to its `str` representation, except for ``None`` which is converted to an empty string."
msgstr "Cualquier objeto se convierte a su representación `str`, excepto ``None`` que se convierte a una cadena vacía."

#: matplotlib.text.Text.set_transform_rotates_text:2 of
msgid "Whether rotations of the transform affect the text direction."
msgstr "Si las rotaciones de la transformación afectan a la dirección del texto."

#: matplotlib.text.Text.set_transform_rotates_text:21 of
msgid "**t**"
msgstr "**t**"

#: matplotlib.text.Text.set_usetex:22 of
msgid "**usetex**"
msgstr "**usetex**"

#: matplotlib.text.Text.set_usetex:8 of
msgid "Whether to render using TeX, ``None`` means to use :rc:`text.usetex`."
msgstr "Si se va a renderizar usando TeX, ``None`` significa usar :rc:`text.usetex`."

#: matplotlib.text.Text.set_verticalalignment:2 of
msgid "Alias for `set_verticalalignment`."
msgstr "Alias para `set_verticalalignment`."

#: matplotlib.text.Text.set_fontvariant:2 of
msgid "Alias for `set_fontvariant`."
msgstr "Alias para `set_fontvariant`."

#: matplotlib.text.Text.set_verticalalignment:2 of
msgid "Set the vertical alignment."
msgstr "Establecer la alineación vertical."

#: matplotlib.text.Text.set_fontweight:2 of
msgid "Alias for `set_fontweight`."
msgstr "Alias para `set_fontweight`."

#: matplotlib.text.Text.set_wrap:2 of
msgid "Set whether the text can be wrapped."
msgstr "Establecer si el texto puede ser envuelto."

#: matplotlib.text.Text.set_wrap:16 of
msgid "**wrap**"
msgstr "**wrap**"

#: matplotlib.text.Text.set_wrap:20 of
msgid "Wrapping does not work together with ``savefig(..., bbox_inches='tight')`` (which is also used internally by ``%matplotlib inline`` in IPython/Jupyter). The 'tight' setting rescales the canvas to accommodate all content and happens before wrapping."
msgstr "El envoltorio no funciona junto con ``savefig(..., bbox_inches='tight')`` (que también es utilizado internamente por ``%matplotlib inline`` en IPython/Jupyter). El ajuste 'tight' reescala el lienzo para acomodar todo el contenido y ocurre antes de envolver."

#: matplotlib.text.Text.set_x:2 of
msgid "Set the *x* position of the text."
msgstr "Establecer la posición *x* del texto."

#: matplotlib.text.Text.set_x:21 of
msgid "**x**"
msgstr "**x**"

#: matplotlib.text.Text.set_y:2 of
msgid "Set the *y* position of the text."
msgstr "Establecer la posición *y* del texto."

#: matplotlib.text.Text.set_y:21 of
msgid "**y**"
msgstr "**y**"

#: matplotlib.text.Text.update:2 of
msgid "Update this artist's properties from the dict *props*."
msgstr "Actualizar las propiedades de este artista desde el dict *props*."

#: matplotlib.text.Text.update:21 of
msgid "**props**"
msgstr "**props**"

#: of
msgid "dict"
msgstr "dict"

#: matplotlib.text.Text.update_bbox_position_size:2 of
msgid "Update the location and the size of the bbox."
msgstr "Actualiza la ubicación y el tamaño del bbox."

#: matplotlib.text.Text.update_bbox_position_size:4 of
msgid "This method should be used when the position and size of the bbox needs to be updated before actually drawing the bbox."
msgstr "Este método debe utilizarse cuando la posición y el tamaño del bbox deben actualizarse antes de dibujar el bbox."

#: matplotlib.text.Text.update_from:2 of
msgid "Copy properties from *other* to *self*."
msgstr "Copiar propiedades de *otro* a *self*."

#: matplotlib.text.get_rotation:2 of
msgid "Return *rotation* normalized to an angle between 0 and 360 degrees."
msgstr "Devuelve la *rotación* normalizada a un ángulo entre 0 y 360 grados."

#: matplotlib.text.get_rotation:9 of
msgid "**rotation**"
msgstr "**rotation**"

#: of
msgid "float or {None, 'horizontal', 'vertical'}"
msgstr "float o {None, 'horizontal', 'vertical'}"

#: matplotlib.text.get_rotation:8 of
msgid "Rotation angle in degrees. *None* and 'horizontal' equal 0, 'vertical' equals 90."
msgstr "Ángulo de rotación en grados. *None* y 'horizontal' igual a 0, 'vertical' igual a 90."

