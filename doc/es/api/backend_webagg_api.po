msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/backend_webagg_api.po\n"
"X-Crowdin-File-ID: 1752\n"
"Language: es_ES\n"

#: ../../api/backend_webagg_api.rst:2
msgid ":mod:`.backend_webagg`"
msgstr ":mod:`.backend_webagg`"

#: matplotlib.backends.backend_webagg:1 of
msgid "Displays Agg images in the browser, with interactivity"
msgstr "Muestra imágenes Agg en el navegador, con interactividad"

#: matplotlib.backends.backend_webagg.FigureCanvasWebAgg:1 of
msgid "Bases: :py:class:`matplotlib.backends.backend_webagg_core.FigureCanvasWebAggCore`"
msgstr "Bases: :py:class:`matplotlib.backends.backend_webagg_core.FigureCanvasWebAggCore`"

#: matplotlib.backends.backend_webagg.ServerThread:1 of
msgid "Bases: :py:class:`threading.Thread`"
msgstr "Bases: :py:class:`threading.Thread`"

#: matplotlib.backends.backend_webagg.ServerThread:2 of
msgid "This constructor should always be called with keyword arguments. Arguments are:"
msgstr "Este constructor siempre debe ser llamado con argumentos de palabra clave. Los argumentos son:"

#: matplotlib.backends.backend_webagg.ServerThread:4 of
msgid "*group* should be None; reserved for future extension when a ThreadGroup class is implemented."
msgstr "*group* debe ser Ninguno; reservado para futuras extensiones cuando se implementa una clase ThreadGroup."

#: matplotlib.backends.backend_webagg.ServerThread:7 of
msgid "*target* is the callable object to be invoked by the run() method. Defaults to None, meaning nothing is called."
msgstr "*target* es el objeto llamable que será invocado por el método run()."

#: matplotlib.backends.backend_webagg.ServerThread:10 of
msgid "*name* is the thread name. By default, a unique name is constructed of the form \"Thread-N\" where N is a small decimal number."
msgstr "*name* es el nombre del hilo. De forma predeterminada, se construye un nombre único de la forma \"Thread-N\" donde N es un pequeño número decimal."

#: matplotlib.backends.backend_webagg.ServerThread:13 of
msgid "*args* is the argument tuple for the target invocation. Defaults to ()."
msgstr "*args* es la tupla de argumento para la invocación objetivo. Por defecto a ()."

#: matplotlib.backends.backend_webagg.ServerThread:15 of
msgid "*kwargs* is a dictionary of keyword arguments for the target invocation. Defaults to {}."
msgstr "*kwargs* es un diccionario de argumentos de palabras clave para la invocación objetivo. Por defecto es {}."

#: matplotlib.backends.backend_webagg.ServerThread:18 of
msgid "If a subclass overrides the constructor, it must make sure to invoke the base class constructor (Thread.__init__()) before doing anything else to the thread."
msgstr "Si una subclase sobreescribe al constructor, debe asegurarse de invocar el constructor de clase base (Thread.__init__()) antes de hacer cualquier otra cosa al hilo."

#: matplotlib.backends.backend_webagg.ServerThread.run:2 of
msgid "Method representing the thread's activity."
msgstr "Método que representa la actividad del hilo."

#: matplotlib.backends.backend_webagg.ServerThread.run:4 of
msgid "You may override this method in a subclass. The standard run() method invokes the callable object passed to the object's constructor as the target argument, if any, with sequential and keyword arguments taken from the args and kwargs arguments, respectively."
msgstr "Puede sobreescribir este método en una subclase. El método estándar run() invoca el objeto llamable pasado al constructor del objeto como argumento de destino, si los hay, con argumentos secuenciales y de palabras clave tomados de los argumentos y kwargs, respectivamente."

#: matplotlib.backends.backend_webagg.WebAggApplication:1 of
msgid "Bases: :py:class:`tornado.web.Application`"
msgstr "Bases: :py:class:`tornado.web.Application`"

#: matplotlib.backends.backend_webagg.WebAggApplication.AllFiguresPage:1
#: matplotlib.backends.backend_webagg.WebAggApplication.Download:1
#: matplotlib.backends.backend_webagg.WebAggApplication.FavIcon:1
#: matplotlib.backends.backend_webagg.WebAggApplication.MplJs:1
#: matplotlib.backends.backend_webagg.WebAggApplication.SingleFigurePage:1 of
msgid "Bases: :py:class:`tornado.web.RequestHandler`"
msgstr "Bases: :py:class:`tornado.web.RequestHandler`"

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket:1 of
msgid "Bases: :py:class:`tornado.websocket.WebSocketHandler`"
msgstr "Bases: :py:class:`tornado.websocket.WebSocketHandler`"

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.on_close:2 of
msgid "Invoked when the WebSocket is closed."
msgstr "Invocado cuando el WebSocket está cerrado."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.on_close:4 of
msgid "If the connection was closed cleanly and a status code or reason phrase was supplied, these values will be available as the attributes ``self.close_code`` and ``self.close_reason``."
msgstr "Si la conexión se cerró limpiamente y se proporcionó un código de estado o una frase de razón, estos valores estarán disponibles como los atributos ``self'. lose_code`` y ``self.close_reason``."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.on_close:10
#: of
msgid "Added ``close_code`` and ``close_reason`` attributes."
msgstr "Añadidos atributos ``close_code`` y ``close_reason``."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.on_message:2
#: of
msgid "Handle incoming messages on the WebSocket"
msgstr "Manejar mensajes entrantes en el WebSocket"

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.on_message:4
#: of
msgid "This method must be overridden."
msgstr "Este método debe ser anulado."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.on_message:8
#: of
msgid "``on_message`` can be a coroutine."
msgstr "``on_message`` puede ser una coroutina."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.open:2 of
msgid "Invoked when a new WebSocket is opened."
msgstr "Se invoca cuando se abre un nuevo WebSocket."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.open:4 of
msgid "The arguments to `open` are extracted from the `tornado.web.URLSpec` regular expression, just like the arguments to `tornado.web.RequestHandler.get`."
msgstr "Los argumentos para `abrir` se extraen de la expresión regular `tornado.web.URLSpec`, al igual que los argumentos a `tornado.web.RequestHandler.get`."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.open:8 of
msgid "`open` may be a coroutine. `on_message` will not be called until `open` has returned."
msgstr "`open` puede ser una coroutina. `on_message` no será llamado hasta que `open` haya regresado."

#: matplotlib.backends.backend_webagg.WebAggApplication.WebSocket.open:13 of
msgid "``open`` may be a coroutine."
msgstr "``open`` puede ser una coroutina."

#: matplotlib.backends.backend_webagg._BackendWebAgg.show:2 of
msgid "Show all figures."
msgstr "Mostrar todas las cifras."

#: matplotlib.backends.backend_webagg._BackendWebAgg.show:4 of
msgid "`show` blocks by calling `mainloop` if *block* is ``True``, or if it is ``None`` and we are neither in IPython's ``%pylab`` mode, nor in `interactive` mode."
msgstr "`mostrar` bloques llamando a `mainloop` si *block* es ``True``, o si es ``Ninguno`` y no estamos en modo ``%pylab`` de IPython, ni en modo `interactivo`."

