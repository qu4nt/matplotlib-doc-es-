msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:03\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.tricontour.po\n"
"X-Crowdin-File-ID: 1330\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.tricontour.rst:2
msgid "matplotlib.pyplot.tricontour"
msgstr "matplotlib.pyplot.tricontour"

#: matplotlib.pyplot.tricontour:2 of
msgid "Draw contour lines on an unstructured triangular grid."
msgstr "Dibuja líneas de contorno sobre una cuadrícula triangular no estructurada."

#: matplotlib.pyplot.tricontour:4 of
msgid "The triangulation can be specified in one of two ways; either ::"
msgstr "La triangulación puede especificarse de una de dos maneras; o bien ::"

#: matplotlib.pyplot.tricontour:8 of
msgid "where *triangulation* is a `.Triangulation` object, or ::"
msgstr "donde *triangulación* es un objeto `.triangulación`, o ::"

#: matplotlib.pyplot.tricontour:16 of
msgid "in which case a `.Triangulation` object will be created.  See that class' docstring for an explanation of these cases."
msgstr "en cuyo caso se creará un objeto `.Triangulation`. Vea la docstring de la clase para una explicación de estos casos."

#: matplotlib.pyplot.tricontour:19 of
msgid "The remaining arguments may be::"
msgstr "Los argumentos restantes pueden ser::"

#: matplotlib.pyplot.tricontour:23 of
msgid "where *Z* is the array of values to contour, one per point in the triangulation.  The level values are chosen automatically."
msgstr "donde *Z* es la matriz de valores a contornar, uno por punto en la triangulación. Los valores de nivel se eligen automáticamente."

#: matplotlib.pyplot.tricontour:30 of
msgid "contour up to *levels+1* automatically chosen contour levels (*levels* intervals)."
msgstr "contorno hasta *niveles+1* automáticamente escogidos niveles de contorno (*niveles* intervalos)."

#: matplotlib.pyplot.tricontour:37 of
msgid "draw contour lines at the values specified in sequence *levels*, which must be in increasing order."
msgstr "dibujar líneas de contorno a los valores especificados en la secuencia *niveles*, que deben estar en orden creciente."

#: matplotlib.pyplot.tricontour:44 of
msgid "Use keyword arguments to control colors, linewidth, origin, cmap ... see below for more details."
msgstr "Usar argumentos de palabras clave para controlar colores, ancho de línea, origen, cmap ... ver abajo para más detalles."

#: matplotlib.pyplot.tricontour of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.pyplot.tricontour:52 of
msgid "**triangulation** : `.Triangulation`, optional"
msgstr "**triangulación** : `.Triangulation`, opcional"

#: matplotlib.pyplot.tricontour:51 of
msgid "Triangulation, optional"
msgstr "Triangulación, opcional"

#: matplotlib.pyplot.tricontour:50 of
msgid "The unstructured triangular grid."
msgstr "La cuadrícula triangular no estructurada."

#: matplotlib.pyplot.tricontour:52 of
msgid "If specified, then *x*, *y*, *triangles*, and *mask* are not accepted."
msgstr "Si se especifica, entonces *x*, *y*, *triángulos*, y *máscara* no se aceptan."

#: matplotlib.pyplot.tricontour:55 of
msgid "**x, y**"
msgstr "**x, y**"

#: of
msgid "array-like, optional"
msgstr "tipo arreglo, opcional"

#: matplotlib.pyplot.tricontour:55 of
msgid "The coordinates of the values in *Z*."
msgstr "Las coordenadas de los valores en *Z*."

#: matplotlib.pyplot.tricontour:60 of
msgid "**triangles**"
msgstr "**Triángulos**"

#: of
msgid "(ntri, 3) array-like of int, optional"
msgstr "(ntri, 3) tipo array de int, opcional"

#: matplotlib.pyplot.tricontour:58 of
msgid "For each triangle, the indices of the three points that make up the triangle, ordered in an anticlockwise manner.  If not specified, the Delaunay triangulation is calculated."
msgstr "Para cada triángulo, los índices de los tres puntos que lo componen, ordenados en sentido contrario a las agujas del reloj.  Si no se especifica, se calcula la triangulación de Delaunay."

#: matplotlib.pyplot.tricontour:63 of
msgid "**mask**"
msgstr "**Máscara**"

#: of
msgid "(ntri,) array-like of bool, optional"
msgstr "(ntri,) array-like of bool, opcional"

#: matplotlib.pyplot.tricontour:63 of
msgid "Which triangles are masked out."
msgstr "Qué triángulos se enmascaran."

#: matplotlib.pyplot.tricontour:66 of
msgid "**Z**"
msgstr "**Z**"

#: of
msgid "2D array-like"
msgstr "Arreglo 2D"

#: matplotlib.pyplot.tricontour:66 of
msgid "The height values over which the contour is drawn."
msgstr "Los valores de altura sobre los que se dibuja el contorno."

#: matplotlib.pyplot.tricontour:76 of
msgid "**levels**"
msgstr "**Niveles**"

#: of
msgid "int or array-like, optional"
msgstr "int o tipo matriz, opcional"

#: matplotlib.pyplot.tricontour:69 of
msgid "Determines the number and positions of the contour lines / regions."
msgstr "Determina el número y las posiciones de las líneas / regiones de contorno."

#: matplotlib.pyplot.tricontour:71 of
msgid "If an int *n*, use `~matplotlib.ticker.MaxNLocator`, which tries to automatically choose no more than *n+1* \"nice\" contour levels between *vmin* and *vmax*."
msgstr "Si un int *n*, use `~matplotlib.ticker.MaxNLocator`, que intenta elegir automáticamente no más de *n+1* niveles de contorno entre *vmin* y *vmax*."

#: matplotlib.pyplot.tricontour:75 of
msgid "If array-like, draw contour lines at the specified levels.  The values must be in increasing order."
msgstr "Si al estilo de la matriz, dibuja líneas de contorno en los niveles especificados. Los valores deben estar en orden creciente."

#: matplotlib.pyplot.tricontour of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.pyplot.tricontour:83 of
msgid "`~matplotlib.tri.TriContourSet`"
msgstr "`~matplotlib.tri.TriContourSet`"

#: matplotlib.pyplot.tricontour of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.pyplot.tricontour:98 of
msgid "**colors**"
msgstr "**colores**"

#: of
msgid "color string or sequence of colors, optional"
msgstr "cadena de color o secuencia de colores, opcional"

#: matplotlib.pyplot.tricontour:88 of
msgid "The colors of the levels, i.e., the contour lines."
msgstr "Los colores de los niveles, es decir, las líneas de contorno."

#: matplotlib.pyplot.tricontour:90 of
msgid "The sequence is cycled for the levels in ascending order. If the sequence is shorter than the number of levels, it's repeated."
msgstr "La secuencia es ciclada para los niveles en orden ascendente. Si la secuencia es más corta que el número de niveles, se repite."

#: matplotlib.pyplot.tricontour:93 of
msgid "As a shortcut, single color strings may be used in place of one-element lists, i.e. ``'red'`` instead of ``['red']`` to color all levels with the same color. This shortcut does only work for color strings, not for other ways of specifying colors."
msgstr "Como un acceso directo, se pueden utilizar cadenas de color simples en lugar de listas de un elemento, i. . ``'red'`` en lugar de ``['red']`` para colorear todos los niveles con el mismo color. Este acceso directo sólo funciona para cadenas de color, no para otras formas de especificar colores."

#: matplotlib.pyplot.tricontour:98 of
msgid "By default (value *None*), the colormap specified by *cmap* will be used."
msgstr "Por defecto (valor *Ninguno*), se utilizará el mapa de colores especificado por *cmap*."

#: matplotlib.pyplot.tricontour:101 of
msgid "**alpha**"
msgstr "**alfa**"

#: of
msgid "float, default: 1"
msgstr "float, default: 1"

#: matplotlib.pyplot.tricontour:101 of
msgid "The alpha blending value, between 0 (transparent) and 1 (opaque)."
msgstr "El valor de mezcla alfa, entre 0 (transparente) y 1 (opaco)."

#: matplotlib.pyplot.tricontour:107 of
msgid "**cmap** : str or `.Colormap`, default: :rc:`image.cmap`"
msgstr "**cmap** : str o `.Colormap`, por defecto: :rc:`image.cmap`"

#: of
msgid "str or"
msgstr "str o"

#: matplotlib.pyplot.tricontour:104 of
msgid "A `.Colormap` instance or registered colormap name. The colormap maps the level values to colors."
msgstr "Una instancia `.Colormap` o nombre de mapa de colores registrado. El mapa de colores asigna los valores de nivel a colores."

#: matplotlib.pyplot.tricontour:107 of
msgid "If both *colors* and *cmap* are given, an error is raised."
msgstr "Si ambos *colores* y *cmap* son dados, un error es levantado."

#: matplotlib.pyplot.tricontour:112 of
msgid "**norm** : `~matplotlib.colors.Normalize`, optional"
msgstr "**norma** : `~matplotlib.colors.Normalize`, opcional"

#: matplotlib.pyplot.tricontour:111 of
msgid "Normalize, optional"
msgstr "Normalizar, opcional"

#: matplotlib.pyplot.tricontour:110 of
msgid "If a colormap is used, the `.Normalize` instance scales the level values to the canonical colormap range [0, 1] for mapping to colors. If not given, the default linear scaling is used."
msgstr "Si se utiliza un mapa de colores, la instancia `.Normalize` escala los valores de nivel al rango de mapa de colores canónico [0, 1] para mapear a colores. Si no se proporciona, se utiliza el escalado lineal predeterminado."

#: matplotlib.pyplot.tricontour:117 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.pyplot.tricontour:115 of
msgid "If not *None*, either or both of these values will be supplied to the `.Normalize` instance, overriding the default color scaling based on *levels*."
msgstr "Si no es *nunca*, cualquiera o ambos valores serán suministrados a la instancia `.Normalize`, sobreescribiendo la escala de color predeterminada basada en *niveles*."

#: matplotlib.pyplot.tricontour:126 of
msgid "**origin** : {*None*, 'upper', 'lower', 'image'}, default: None"
msgstr "**origin** : {*Ninguno*, 'arriba', 'lower', 'image'}, por defecto: Ninguno"

#: of
msgid "{"
msgstr "{"

#: matplotlib.pyplot.tricontour:120 of
msgid "Determines the orientation and exact position of *Z* by specifying the position of ``Z[0, 0]``.  This is only relevant, if *X*, *Y* are not given."
msgstr "Determina la orientación y posición exacta de *Z* especificando la posición de ``Z[0, 0]``. Esto sólo es relevante, si *X*, *Y* no son dados."

#: matplotlib.pyplot.tricontour:123 of
msgid "*None*: ``Z[0, 0]`` is at X=0, Y=0 in the lower left corner."
msgstr "*Ninguno*: ``Z[0, 0]`` está en X=0, Y=0 en la esquina inferior izquierda."

#: matplotlib.pyplot.tricontour:124 of
msgid "'lower': ``Z[0, 0]`` is at X=0.5, Y=0.5 in the lower left corner."
msgstr "'lower': ``Z[0, 0]`` está en X=0.5, Y=0.5 en la esquina inferior izquierda."

#: matplotlib.pyplot.tricontour:125 of
msgid "'upper': ``Z[0, 0]`` is at X=N+0.5, Y=0.5 in the upper left corner."
msgstr "'upper': ``Z[0, 0]`` está en X=N+0.5, Y=0.5 en la esquina superior izquierda."

#: matplotlib.pyplot.tricontour:126 of
msgid "'image': Use the value from :rc:`image.origin`."
msgstr "'image': Utilice el valor de :rc:`image.origin`."

#: matplotlib.pyplot.tricontour:136 of
msgid "**extent**"
msgstr "**extensión**"

#: of
msgid "(x0, x1, y0, y1), optional"
msgstr "(x0, x1, y0, y1), opcional"

#: matplotlib.pyplot.tricontour:129 of
msgid "If *origin* is not *None*, then *extent* is interpreted as in `.imshow`: it gives the outer pixel boundaries. In this case, the position of Z[0, 0] is the center of the pixel, not a corner. If *origin* is *None*, then (*x0*, *y0*) is the position of Z[0, 0], and (*x1*, *y1*) is the position of Z[-1, -1]."
msgstr "Si *origin* no es *nunca*, entonces *extent* es interpretado como en `.imshow`: da los límites de píxeles externos. En este caso, la posición de Z[0, 0] es el centro del píxel, no una esquina. Si *origen* es *nunca*, entonces (*x0*, *y0*) es la posición de Z[0, 0], y (*x1*, *y1*) es la posición de Z[-1, -1]."

#: matplotlib.pyplot.tricontour:135 of
msgid "This argument is ignored if *X* and *Y* are specified in the call to contour."
msgstr "Este argumento es ignorado si *X* y *Y* son especificados en la llamada al contorno."

#: matplotlib.pyplot.tricontour:141 of
msgid "**locator**"
msgstr "**localizador**"

#: of
msgid "ticker.Locator subclass, optional"
msgstr "ticker.Subclase localizador, opcional"

#: matplotlib.pyplot.tricontour:139 of
msgid "The locator is used to determine the contour levels if they are not given explicitly via *levels*. Defaults to `~.ticker.MaxNLocator`."
msgstr "El localizador se utiliza para determinar los niveles de contorno si no se dan explícitamente a través de *niveles*. Por defecto es `~.ticker.MaxNLocator`."

#: matplotlib.pyplot.tricontour:163 of
msgid "**extend**"
msgstr "**extensión**"

#: of
msgid "{'neither', 'both', 'min', 'max'}, default: 'neither'"
msgstr "{'ninguno de los dos', 'ambos', 'min', 'max'}, por defecto: 'ninguno'"

#: matplotlib.pyplot.tricontour:144 of
msgid "Determines the ``tricontour``-coloring of values that are outside the *levels* range."
msgstr "Determina el color ``tricontour``-de valores que están fuera del rango *levels*."

#: matplotlib.pyplot.tricontour:147 of
msgid "If 'neither', values outside the *levels* range are not colored.  If 'min', 'max' or 'both', color the values below, above or below and above the *levels* range."
msgstr "Si 'ninguno', los valores fuera del rango *niveles* no están colorados. Si 'min', 'max' o 'ambos', colorear los valores debajo, arriba o abajo y encima del rango *levels*."

#: matplotlib.pyplot.tricontour:151 of
msgid "Values below ``min(levels)`` and above ``max(levels)`` are mapped to the under/over values of the `.Colormap`. Note that most colormaps do not have dedicated colors for these by default, so that the over and under values are the edge values of the colormap.  You may want to set these values explicitly using `.Colormap.set_under` and `.Colormap.set_over`."
msgstr "Valores por debajo de ``min(levels)`` y por encima de ``max(levels)`` se asignan a los valores bajo / superior del `.Colormap`. Tenga en cuenta que la mayoría de mapas de colores no tienen colores dedicados para estos de forma predeterminada, para que los valores superiores y inferiores sean los valores de borde del mapa de color. Puede querer establecer estos valores explícitamente usando `.Colormap.set_under` y `.Colormap.set_over`."

#: matplotlib.pyplot.tricontour:159 of
msgid "An existing `.TriContourSet` does not get notified if properties of its colormap are changed. Therefore, an explicit call to `.ContourSet.changed()` is needed after modifying the colormap. The explicit call can be left out, if a colorbar is assigned to the `.TriContourSet` because it internally calls `.ContourSet.changed()`."
msgstr "Un `.TriContourSet` existente no es notificado si las propiedades de su mapa de color han cambiado. Por lo tanto, se necesita una llamada explícita a `.ContourSet.changed()` después de modificar el mapa de color. La llamada explícita puede dejarse afuera, si una barra de colores es asignada al `.TriContourSet` porque internamente llama `.ContourSet.changed()`."

#: matplotlib.pyplot.tricontour:167 of
msgid "**xunits, yunits**"
msgstr "**xunits, yunits**"

#: of
msgid "registered units, optional"
msgstr "unidades registradas, opcional"

#: matplotlib.pyplot.tricontour:166 of
msgid "Override axis units by specifying an instance of a :class:`matplotlib.units.ConversionInterface`."
msgstr "Anular unidades de ejes especificando una instancia de un :class:`matplotlib.units.ConversionInterface`."

#: matplotlib.pyplot.tricontour:172 of
msgid "**antialiased**"
msgstr "**antialias**"

#: of
msgid "bool, optional"
msgstr "bool, optional"

#: matplotlib.pyplot.tricontour:170 of
msgid "Enable antialiasing, overriding the defaults.  For filled contours, the default is *True*.  For line contours, it is taken from :rc:`lines.antialiased`."
msgstr "Habilitar antialiasing, sobreescribiendo los valores predeterminados. Para los contornos rellenados, el valor predeterminado es *Verdadero*. Para contornos de línea, se toma de :rc:`lines.antialiased`."

#: matplotlib.pyplot.tricontour:182 of
msgid "**linewidths** : float or array-like, default: :rc:`contour.linewidth`"
msgstr "**anchos de línea** : float o array-like default: :rc:`contour.linewidth`"

#: of
msgid "float or array-like, default:"
msgstr "float or array-like, default:"

#: matplotlib.pyplot.tricontour:175 of
msgid "The line width of the contour lines."
msgstr "El ancho de la línea de las líneas de contorno."

#: matplotlib.pyplot.tricontour:177 of
msgid "If a number, all levels will be plotted with this linewidth."
msgstr "Si un número, todos los niveles serán trazados con este ancho de línea."

#: matplotlib.pyplot.tricontour:179 of
msgid "If a sequence, the levels in ascending order will be plotted with the linewidths in the order specified."
msgstr "Si una secuencia, los niveles en orden ascendente se trazarán con el ancho de línea en el orden especificado."

#: matplotlib.pyplot.tricontour:182 of
msgid "If None, this falls back to :rc:`lines.linewidth`."
msgstr "Si no, esto cae a :rc:`lines.linewidth`."

#: matplotlib.pyplot.tricontour:200 of
msgid "**linestyles** : {*None*, 'solid', 'dashed', 'dashdot', 'dotted'}, optional"
msgstr "**linestyles** : {*outer*, 'sólid', 'dashdot', 'dotted'}, opcional"

#: matplotlib.pyplot.tricontour:185 of
msgid "If *linestyles* is *None*, the default is 'solid' unless the lines are monochrome.  In that case, negative contours will take their linestyle from :rc:`contour.negative_linestyle` setting."
msgstr "Si *linestyles* es *Ninguno*, el valor por defecto es 'sólid' a menos que las líneas sean monocromáticas. En ese caso, los contornos negativos tomarán su estilo de línea del ajuste :rc:`contour.negative_linestyle`."

#: matplotlib.pyplot.tricontour:189 of
msgid "*linestyles* can also be an iterable of the above strings specifying a set of linestyles to be used. If this iterable is shorter than the number of contour levels it will be repeated as necessary."
msgstr "*linestyles* también puede ser un iterable de las cadenas anteriores especificando un conjunto de estilos de línea a utilizar. Si este iterable es menor que el número de niveles de contorno se repetirá según sea necesario."

