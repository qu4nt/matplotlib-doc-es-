msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/mpl_toolkits.axes_grid1.axes_size.po\n"
"X-Crowdin-File-ID: 1458\n"
"Language: es_ES\n"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:2
msgid "mpl\\_toolkits.axes\\_grid1.axes\\_size"
msgstr "mpl\\_toolkits.axes\\_grid1.ejes\\_tamaño\\_"

#: mpl_toolkits.axes_grid1.axes_size:1 of
msgid "Provides classes of simple units that will be used with AxesDivider class (or others) to determine the size of each axes. The unit classes define `get_size` method that returns a tuple of two floats, meaning relative and absolute sizes, respectively."
msgstr "Proporciona clases de unidades simples que se usarán con la clase AxesDivider (o otros) para determinar el tamaño de cada eje. Las clases unitarias definen el método `get_size` que devuelve una tupla de dos flotantes, lo que significa tamaños relativos y absolutos, respectivamente."

#: mpl_toolkits.axes_grid1.axes_size:6 of
msgid "Note that this class is nothing more than a simple tuple of two floats. Take a look at the Divider class to see how these two values are used."
msgstr "Tenga en cuenta que esta clase no es más que una simple tupla de dos flotantes. Echa un vistazo a la clase Divider para ver cómo se utilizan estos dos valores."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:14
msgid "Classes"
msgstr "Clases"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Add <mpl_toolkits.axes_grid1.axes_size.Add>`\\ \\(a\\, b\\)"
msgstr ":py:obj:`Añadir <mpl_toolkits.axes_grid1.axes_size.Add>`\\ \\(a\\, b\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`AddList <mpl_toolkits.axes_grid1.axes_size.AddList>`\\ \\(add\\_list\\)"
msgstr ":py:obj:`AddList <mpl_toolkits.axes_grid1.axes_size.AddList>`\\ \\(add\\_list\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`AxesX <mpl_toolkits.axes_grid1.axes_size.AxesX>`\\ \\(axes\\[\\, aspect\\, ref\\_ax\\]\\)"
msgstr ":py:obj:`AxesX <mpl_toolkits.axes_grid1.axes_size.AxesX>`\\ \\(axes\\[\\, aspect\\, ref\\_ax\\]\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Scaled size whose relative part corresponds to the data width of the *axes* multiplied by the *aspect*."
msgstr "Tamaño escalado cuya parte relativa corresponde al ancho de datos de los *ejes* multiplicados por el *aspecto*."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`AxesY <mpl_toolkits.axes_grid1.axes_size.AxesY>`\\ \\(axes\\[\\, aspect\\, ref\\_ax\\]\\)"
msgstr ":py:obj:`EjesY <mpl_toolkits.axes_grid1.axes_size.AxesY>`\\ \\(ejes\\[\\, aspect\\, ref\\_ax\\]\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Scaled size whose relative part corresponds to the data height of the *axes* multiplied by the *aspect*."
msgstr "Tamaño escalado cuya parte relativa corresponde a la altura de los datos de los *ejes* multiplicados por el *aspecto*."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Fixed <mpl_toolkits.axes_grid1.axes_size.Fixed>`\\ \\(fixed\\_size\\)"
msgstr ":py:obj:`Corregido <mpl_toolkits.axes_grid1.axes_size.Fixed>`\\ \\(fixed\\_size\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Simple fixed size with absolute part = *fixed_size* and relative part = 0."
msgstr "Tamaño fijo simple con parte absoluta = *fixed_size* y parte relativa = 0."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Fraction <mpl_toolkits.axes_grid1.axes_size.Fraction>`\\ \\(fraction\\, ref\\_size\\)"
msgstr ":py:obj:`Fracción <mpl_toolkits.axes_grid1.axes_size.Fraction>`\\ \\(fraction\\, ref\\_size\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "An instance whose size is a *fraction* of the *ref_size*."
msgstr "Una instancia cuyo tamaño es una *fracción* del *ref_size*."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`GetExtentHelper <mpl_toolkits.axes_grid1.axes_size.GetExtentHelper>`\\ \\(ax\\, direction\\)"
msgstr ":py:obj:`GetExtentHelper <mpl_toolkits.axes_grid1.axes_size.GetExtentHelper>`\\ \\(ax\\, direction\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`MaxExtent <mpl_toolkits.axes_grid1.axes_size.MaxExtent>`\\ \\(artist\\_list\\, w\\_or\\_h\\)"
msgstr ":py:obj:`MaxExtent <mpl_toolkits.axes_grid1.axes_size.MaxExtent>`\\ \\(artist\\_list\\, w\\_or\\_h\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Size whose absolute part is either the largest width or the largest height of the given *artist_list*."
msgstr "Tamaño cuya parte absoluta es o bien la mayor anchura o la mayor altura de la *artist_list* dada."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`MaxHeight <mpl_toolkits.axes_grid1.axes_size.MaxHeight>`\\ \\(artist\\_list\\)"
msgstr ":py:obj:`MaxHeight <mpl_toolkits.axes_grid1.axes_size.MaxHeight>`\\ \\(artist\\_list\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Size whose absolute part is the largest height of the given *artist_list*."
msgstr "Tamaño cuya parte absoluta es la altura más grande de la *artist_list* dada."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`MaxWidth <mpl_toolkits.axes_grid1.axes_size.MaxWidth>`\\ \\(artist\\_list\\)"
msgstr ":py:obj:`MaxWidth <mpl_toolkits.axes_grid1.axes_size.MaxWidth>`\\ \\(artist\\_list\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Size whose absolute part is the largest width of the given *artist_list*."
msgstr "Tamaño cuya parte absoluta es el ancho más grande de la *artist_list* dada."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Padded <mpl_toolkits.axes_grid1.axes_size.Padded>`\\ \\(size\\, pad\\)"
msgstr ":py:obj:`Añadido <mpl_toolkits.axes_grid1.axes_size.Padded>`\\ \\(tamaño\\, pad\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Return a instance where the absolute part of *size* is increase by the amount of *pad*."
msgstr "Devuelve una instancia donde la parte absoluta de *size* es incrementada por la cantidad de *pad*."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Scalable <mpl_toolkits.axes_grid1.axes_size.Scalable>`\\"
msgstr ":py:obj:`Escalable <mpl_toolkits.axes_grid1.axes_size.Scalable>`\\"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "alias of :py:class:`mpl_toolkits.axes_grid1.axes_size.Scaled`"
msgstr "alias de :py:class:`mpl_toolkits.axes_grid1.axes_size.Escalado`"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Scaled <mpl_toolkits.axes_grid1.axes_size.Scaled>`\\ \\(scalable\\_size\\)"
msgstr ":py:obj:`Escalado <mpl_toolkits.axes_grid1.axes_size.Scaled>`\\ \\(escalable\\_size\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Simple scaled(?) size with absolute part = 0 and relative part = *scalable_size*."
msgstr "Tamaño simple escalado(?) con parte absoluta = 0 y parte relativa = *escalable_size*."

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`SizeFromFunc <mpl_toolkits.axes_grid1.axes_size.SizeFromFunc>`\\ \\(func\\)"
msgstr ":py:obj:`SizeFromFunc <mpl_toolkits.axes_grid1.axes_size.SizeFromFunc>`\\ \\(func\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:41
msgid "Functions"
msgstr "Funciones"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:50:<autosummary>:1
msgid ":py:obj:`from_any <mpl_toolkits.axes_grid1.axes_size.from_any>`\\ \\(size\\[\\, fraction\\_ref\\]\\)"
msgstr ":py:obj:`from_any <mpl_toolkits.axes_grid1.axes_size.from_any>`\\ \\(size\\[\\, fraction\\_ref\\]\\)"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:50:<autosummary>:1
msgid "Create a Fixed unit when the first argument is a float, or a Fraction unit if that is a string that ends with %."
msgstr "Crea una unidad fija cuando el primer argumento es un float, o una Fracción si es una cadena que termina con %."

