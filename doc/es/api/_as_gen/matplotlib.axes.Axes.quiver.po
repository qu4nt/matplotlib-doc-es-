msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:55\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.quiver.po\n"
"X-Crowdin-File-ID: 606\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.rst:2
msgid "matplotlib.axes.Axes.quiver"
msgstr "matplotlib.axes.Axes.quiver"

#: matplotlib.axes._axes.Axes.quiver:2 of
msgid "Plot a 2D field of arrows."
msgstr "Trazar un campo 2D de flechas."

#: matplotlib.axes._axes.Axes.quiver:4 of
msgid "Call signature::"
msgstr "Firma de llamada::"

#: matplotlib.axes._axes.Axes.quiver:8 of
msgid "*X*, *Y* define the arrow locations, *U*, *V* define the arrow directions, and *C* optionally sets the color."
msgstr "*X*, *Y* define las ubicaciones de las flechas, *U*, *V* define las direcciones de las flechas, y *C* opcionalmente establece el color."

#: matplotlib.axes._axes.Axes.quiver:11 of
msgid "Each arrow is internally represented by a filled polygon with a default edge linewidth of 0. As a result, an arrow is rather a filled area, not a line with a head, and `.PolyCollection` properties like *linewidth*, *linestyle*, *facecolor*, etc. act accordingly."
msgstr "Cada flecha está representada internamente por un polígono lleno con un ancho de línea predeterminado de 0. Como resultado, una flecha es más bien un área llena, no una línea con una cabeza, y `. Las propiedades de olyCollection` como *ancho de línea*, *linestyle*, *facecolor*, etc. actúan en consecuencia."

#: matplotlib.axes._axes.Axes.quiver:16 of
msgid "**Arrow size**"
msgstr "**Tamaño de flecha**"

#: matplotlib.axes._axes.Axes.quiver:18 of
msgid "The default settings auto-scales the length of the arrows to a reasonable size. To change this behavior see the *scale* and *scale_units* parameters."
msgstr "La configuración por defecto escala automáticamente la longitud de las flechas a un tamaño razonable. Para cambiar este comportamiento vea los parámetros *escala* y *scale_units*."

#: matplotlib.axes._axes.Axes.quiver:21 of
msgid "**Arrow shape**"
msgstr "**Forma de flecha**"

#: matplotlib.axes._axes.Axes.quiver:23 of
msgid "The defaults give a slightly swept-back arrow; to make the head a triangle, make *headaxislength* the same as *headlength*. To make the arrow more pointed, reduce *headwidth* or increase *headlength* and *headaxislength*. To make the head smaller relative to the shaft, scale down all the head parameters. You will probably do best to leave minshaft alone."
msgstr "Los valores por defecto dan una flecha ligeramente barrida; para hacer de la cabeza un triángulo, haz que *headaxislength* sea igual que *longitud de la cabeza*. Para hacer la flecha más apuntada, reduce el *ancho de la cabeza* o incrementa la *longitud de la cabeza* y la *cabeza*. Para hacer la cabeza más pequeña en relación con el shaft, reduzca todos los parámetros de la cabeza. Probablemente harás lo mejor para dejar el shaft solo."

#: matplotlib.axes._axes.Axes.quiver:30 of
msgid "**Arrow outline**"
msgstr "**Esquema de flecha**"

#: matplotlib.axes._axes.Axes.quiver:32 of
msgid "*linewidths* and *edgecolors* can be used to customize the arrow outlines."
msgstr "Los *anchos de línea* y *colores* pueden utilizarse para personalizar los contornos de las flechas."

#: matplotlib.axes._axes.Axes.quiver of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.axes._axes.Axes.quiver:45 of
msgid "**X, Y**"
msgstr "**X, Y**"

#: of
msgid "1D or 2D array-like, optional"
msgstr "Opcional para matrices 1D o 2D"

#: matplotlib.axes._axes.Axes.quiver:38 of
msgid "The x and y coordinates of the arrow locations."
msgstr "Las coordenadas x e y de las localizaciones de flechas."

#: matplotlib.axes._axes.Axes.quiver:40 of
msgid "If not given, they will be generated as a uniform integer meshgrid based on the dimensions of *U* and *V*."
msgstr "Si no se dan, se generarán como una red entera uniforme basada en las dimensiones de *U* y *V*."

#: matplotlib.axes._axes.Axes.quiver:43 of
msgid "If *X* and *Y* are 1D but *U*, *V* are 2D, *X*, *Y* are expanded to 2D using ``X, Y = np.meshgrid(X, Y)``. In this case ``len(X)`` and ``len(Y)`` must match the column and row dimensions of *U* and *V*."
msgstr "Si *X* y *Y* son 1D pero *U*, *V* son 2D, *X*, *Y* se expanden a 2D usando ``X, Y = np.meshgrid(X, Y)``. En este caso ``len(X)`` y ``len(Y)`` deben coincidir con las dimensiones de columna y fila de *U* y *V*."

#: matplotlib.axes._axes.Axes.quiver:52 of
msgid "**U, V**"
msgstr "**U, V**"

#: of
msgid "1D or 2D array-like"
msgstr "Arreglo 1D o 2D"

#: matplotlib.axes._axes.Axes.quiver:48 of
msgid "The x and y direction components of the arrow vectors."
msgstr "Los componentes de dirección x e y de los vectores de flecha."

#: matplotlib.axes._axes.Axes.quiver:50 of
msgid "They must have the same number of elements, matching the number of arrow locations. *U* and *V* may be masked. Only locations unmasked in *U*, *V*, and *C* will be drawn."
msgstr "Deben tener el mismo número de elementos, coincidiendo con el número de localizaciones de flechas. *U* y *V* pueden ser enmascarados. Sólo se dibujarán ubicaciones desenmascaradas en *U*, *V*, y *C*."

#: matplotlib.axes._axes.Axes.quiver:60 of
msgid "**C**"
msgstr "**C**"

#: matplotlib.axes._axes.Axes.quiver:55 of
msgid "Numeric data that defines the arrow colors by colormapping via *norm* and *cmap*."
msgstr "Datos numéricos que definen los colores de las flechas mediante mapeo de colores a través de *normal* y *cmap*."

#: matplotlib.axes._axes.Axes.quiver:58 of
msgid "This does not support explicit colors. If you want to set colors directly, use *color* instead.  The size of *C* must match the number of arrow locations."
msgstr "Esto no soporta colores explícitos. Si quieres establecer colores directamente, usa *color* en su lugar. El tamaño de *C* debe coincidir con el número de ubicaciones de flecha."

#: matplotlib.axes._axes.Axes.quiver:77 of
msgid "**units**"
msgstr "**Unidades**"

#: of
msgid "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, default: 'width'"
msgstr "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, default: 'width'"

#: matplotlib.axes._axes.Axes.quiver:63 of
msgid "The arrow dimensions (except for *length*) are measured in multiples of this unit."
msgstr "Las dimensiones de la flecha (excepto la *longitud*) se miden en múltiplos de esta unidad."

#: matplotlib.axes._axes.Axes.quiver:66 of
msgid "The following values are supported:"
msgstr "Los siguientes valores son compatibles:"

#: matplotlib.axes._axes.Axes.quiver:68 of
msgid "'width', 'height': The width or height of the axis."
msgstr "'ancho', 'altura': El ancho o la altura del eje."

#: matplotlib.axes._axes.Axes.quiver:69 of
msgid "'dots', 'inches': Pixels or inches based on the figure dpi."
msgstr "'puntos', 'pulgadas': Pixeles o pulgadas basados en la figura dpi."

#: matplotlib.axes._axes.Axes.quiver:70 of
msgid "'x', 'y', 'xy': *X*, *Y* or :math:`\\sqrt{X^2 + Y^2}` in data units."
msgstr "'x', 'y', 'xy': *X*, *Y* o :math:`\\sqrt{X^2 + Y^2}` en unidades de datos."

#: matplotlib.axes._axes.Axes.quiver:72 of
msgid "The arrows scale differently depending on the units.  For 'x' or 'y', the arrows get larger as one zooms in; for other units, the arrow size is independent of the zoom state.  For 'width or 'height', the arrow size increases with the width and height of the axes, respectively, when the window is resized; for 'dots' or 'inches', resizing does not change the arrows."
msgstr "Las flechas escalan de forma diferente dependiendo de las unidades. Para 'x' o 'y', las flechas se hacen más grandes como un zoom; para otras unidades, el tamaño de la flecha es independiente del estado de zoom. Para 'anchura o 'altura', el tamaño de la flecha aumenta con el ancho y la altura de los ejes, respectivamente, cuando la ventana es redimensionada; para 'puntos' o 'pulgadas', cambiar el tamaño no cambia las flechas."

#: matplotlib.axes._axes.Axes.quiver:99 of
msgid "**angles**"
msgstr "**Ángulos**"

#: of
msgid "{'uv', 'xy'} or array-like, default: 'uv'"
msgstr "{'uv', 'xy'} o tipo matriz: 'uv'"

#: matplotlib.axes._axes.Axes.quiver:80 of
msgid "Method for determining the angle of the arrows."
msgstr "Método para determinar el ángulo de las flechas."

#: matplotlib.axes._axes.Axes.quiver:82 of
msgid "'uv': The arrow axis aspect ratio is 1 so that if *U* == *V* the orientation of the arrow on the plot is 45 degrees counter-clockwise from the horizontal axis (positive to the right)."
msgstr "'uv': La relación de aspecto del eje de flecha es 1 de manera que si *U* == *V* la orientación de la flecha en la parcela es 45 grados en sentido contrario a las manecillas del eje horizontal (positivo a la derecha)."

#: matplotlib.axes._axes.Axes.quiver:86 of
msgid "Use this if the arrows symbolize a quantity that is not based on *X*, *Y* data coordinates."
msgstr "Usa esto si las flechas simbolizan una cantidad que no se basa en coordenadas de *X*, *Y* de datos."

#: matplotlib.axes._axes.Axes.quiver:89 of
msgid "'xy': Arrows point from (x, y) to (x+u, y+v). Use this for plotting a gradient field, for example."
msgstr "'xy': Las flechas apuntan de (x, y) a (x+u, y+v). Usa esto para trazar un campo gradiente, por ejemplo."

#: matplotlib.axes._axes.Axes.quiver:92 of
msgid "Alternatively, arbitrary angles may be specified explicitly as an array of values in degrees, counter-clockwise from the horizontal axis."
msgstr "Alternativamente, los ángulos arbitrarios pueden especificarse explícitamente como un array de valores en grados, en sentido contrario a las manecillas del eje horizontal."

#: matplotlib.axes._axes.Axes.quiver:95 of
msgid "In this case *U*, *V* is only used to determine the length of the arrows."
msgstr "En este caso *U*, *V* sólo se utiliza para determinar la longitud de las flechas."

#: matplotlib.axes._axes.Axes.quiver:98 of
msgid "Note: inverting a data axis will correspondingly invert the arrows only with ``angles='xy'``."
msgstr "Nota: invertir un eje de datos invertirá correspondientemente las flechas sólo con ``angles='xy'``."

#: matplotlib.axes._axes.Axes.quiver:107 of
msgid "**scale**"
msgstr "**escala**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.axes._axes.Axes.quiver:102 of
msgid "Number of data units per arrow length unit, e.g., m/s per plot width; a smaller scale parameter makes the arrow longer. Default is *None*."
msgstr "Número de unidades de datos por unidad de longitud de flecha, por ejemplo, m/s por ancho de gráfico; un parámetro de escala más pequeño hace la flecha más larga. Por defecto *Ninguno*."

#: matplotlib.axes._axes.Axes.quiver:105 of
msgid "If *None*, a simple autoscaling algorithm is used, based on the average vector length and the number of vectors. The arrow length unit is given by the *scale_units* parameter."
msgstr "Si *nunca*, se utiliza un simple algoritmo de autoescalado, basado en la longitud media del vector y el número de vectores. La unidad de longitud de flecha es dada por el parámetro *scale_units*."

#: matplotlib.axes._axes.Axes.quiver:121 of
msgid "**scale_units**"
msgstr "**unidades de escala**"

#: of
msgid "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, optional"
msgstr "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, optional"

#: matplotlib.axes._axes.Axes.quiver:110 of
msgid "If the *scale* kwarg is *None*, the arrow length unit. Default is *None*."
msgstr "Si el kwarg de *escala* es *Ninguno*, la longitud de la flecha. Por defecto es *Ninguno*."

#: matplotlib.axes._axes.Axes.quiver:112 of
msgid "e.g. *scale_units* is 'inches', *scale* is 2.0, and ``(u, v) = (1, 0)``, then the vector will be 0.5 inches long."
msgstr "p. ej., *scale_units* es 'pulgadas', *escala* es 2.0, y ``(u, v) = (1, 0)``, entonces el vector será de 0,5 pulgadas de largo."

#: matplotlib.axes._axes.Axes.quiver:115 of
msgid "If *scale_units* is 'width' or 'height', then the vector will be half the width/height of the axes."
msgstr "Si *scale_units* es 'ancho' o 'altura', entonces el vector será la mitad del ancho/altura de los ejes."

#: matplotlib.axes._axes.Axes.quiver:118 of
msgid "If *scale_units* is 'x' then the vector will be 0.5 x-axis units. To plot vectors in the x-y plane, with u and v having the same units as x and y, use ``angles='xy', scale_units='xy', scale=1``."
msgstr "Si *scale_units* es 'x', el vector será de 0.5 unidades de eje X. Para graficar vectores en el plano x-y con u y v con las mismas unidades que x y y, use ``angles='xy', scale_units='xy', scale=1``."

#: matplotlib.axes._axes.Axes.quiver:126 of
msgid "**width**"
msgstr "**width**"

#: matplotlib.axes._axes.Axes.quiver:124 of
msgid "Shaft width in arrow units; default depends on choice of units, above, and number of vectors; a typical starting value is about 0.005 times the width of the plot."
msgstr "Ancho del corte en las unidades de flecha; por defecto depende de la elección de unidades, arriba y el número de vectores; un valor inicial típico es de aproximadamente 0. 05 veces el ancho de la parcela."

#: matplotlib.axes._axes.Axes.quiver:129 of
msgid "**headwidth**"
msgstr "**ancho de cabeza**"

#: of
msgid "float, default: 3"
msgstr "float, por defecto: 3"

#: matplotlib.axes._axes.Axes.quiver:129 of
msgid "Head width as multiple of shaft width."
msgstr "Ancho del encabezado como múltiplo de ancho del shaft."

#: matplotlib.axes._axes.Axes.quiver:132 of
msgid "**headlength**"
msgstr "**Longitud de cabeza**"

#: of
msgid "float, default: 5"
msgstr "float, por defecto: 5"

#: matplotlib.axes._axes.Axes.quiver:132 of
msgid "Head length as multiple of shaft width."
msgstr "Longitud de la cabeza como múltiplo de ancho del shaft."

#: matplotlib.axes._axes.Axes.quiver:135 of
msgid "**headaxislength**"
msgstr "**headaxislength**"

#: of
msgid "float, default: 4.5"
msgstr "float, por defecto: 4.5"

#: matplotlib.axes._axes.Axes.quiver:135 of
msgid "Head length at shaft intersection."
msgstr "Longitud del cabezal en la intersección del shaft."

#: matplotlib.axes._axes.Axes.quiver:139 of
msgid "**minshaft**"
msgstr "**minshaft**"

#: of
msgid "float, default: 1"
msgstr "float, default: 1"

#: matplotlib.axes._axes.Axes.quiver:138 of
msgid "Length below which arrow scales, in units of head length. Do not set this to less than 1, or small arrows will look terrible!"
msgstr "Longitud por debajo de qué escala de flecha, en unidades de longitud de la cabeza. No lo establezcas a menos de 1, ¡o las flechas pequeñas parecerán terribles!"

#: matplotlib.axes._axes.Axes.quiver:143 of
msgid "**minlength**"
msgstr "**minlongitud**"

#: matplotlib.axes._axes.Axes.quiver:142 of
msgid "Minimum length as a multiple of shaft width; if an arrow length is less than this, plot a dot (hexagon) of this diameter instead."
msgstr "Longitud mínima como un múltiplo de ancho de eje; si la longitud de una flecha es menor que ésta, en su lugar grafica un punto (hexágono) de este diámetro."

#: matplotlib.axes._axes.Axes.quiver:149 of
msgid "**pivot**"
msgstr "**pivot**"

#: of
msgid "{'tail', 'mid', 'middle', 'tip'}, default: 'tail'"
msgstr "{'tail', 'mid', 'middle', 'tip'}, por defecto: 'tail'"

#: matplotlib.axes._axes.Axes.quiver:146 of
msgid "The part of the arrow that is anchored to the *X*, *Y* grid. The arrow rotates about this point."
msgstr "La parte de la flecha que está anclada a la cuadrícula *X*, *Y*. La flecha gira sobre este punto."

#: matplotlib.axes._axes.Axes.quiver:149 of
msgid "'mid' is a synonym for 'middle'."
msgstr "'mid' es un sinónimo de 'middle'."

#: matplotlib.axes._axes.Axes.quiver:155 of
msgid "**color**"
msgstr "**color**"

#: of
msgid "color or color sequence, optional"
msgstr "color o secuencia de colores, opcional"

#: matplotlib.axes._axes.Axes.quiver:152 of
msgid "Explicit color(s) for the arrows. If *C* has been set, *color* has no effect."
msgstr "Color explícito para las flechas. Si se ha establecido *C*, *color* no tiene efecto."

#: matplotlib.axes._axes.Axes.quiver:155 of
msgid "This is a synonym for the `.PolyCollection` *facecolor* parameter."
msgstr "Este es un sinónimo para el parámetro `.PolyCollection` *facecolor*."

#: matplotlib.axes._axes.Axes.quiver of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.axes._axes.Axes.quiver:162 of
msgid "`~matplotlib.quiver.Quiver`"
msgstr "`~matplotlib.quiver.Quiver`"

#: matplotlib.axes._axes.Axes.quiver of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.axes._axes.Axes.quiver:168 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.axes._axes.Axes.quiver:167 of
msgid "If given, all parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception)."
msgstr "Si se dan, todos los parámetros también aceptan una cadena ``s``, que se interpreta como ``data[s]`` (a menos que se produzca una excepción)."

#: matplotlib.axes._axes.Axes.quiver:222 of
msgid "**\\*\\*kwargs** : `~matplotlib.collections.PolyCollection` properties, optional"
msgstr "**\\*\\*kwargs** : `~matplotlib.collections.PolyCollection` propiedades, opcional"

#: matplotlib.axes._axes.Axes.quiver:221 of
msgid "PolyCollection properties, optional"
msgstr "Propiedades de PolyColtion, opcional"

#: matplotlib.axes._axes.Axes.quiver:171 of
msgid "All other keyword arguments are passed on to `.PolyCollection`:"
msgstr "Todos los otros argumentos de palabra clave se pasan a `.PolyCollection`:"

#: matplotlib.axes._axes.Axes.quiver:177 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.axes._axes.Axes.quiver:177 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.axes._axes.Axes.quiver:179 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.axes._axes.Axes.quiver:179 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.axes._axes.Axes.quiver:180 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"

#: matplotlib.axes._axes.Axes.quiver:180 of
msgid "array-like or scalar or None"
msgstr "como matriz o escalar o ninguno"

#: matplotlib.axes._axes.Axes.quiver:181 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.axes._axes.Axes.quiver:181 matplotlib.axes._axes.Axes.quiver:187
#: matplotlib.axes._axes.Axes.quiver:196 matplotlib.axes._axes.Axes.quiver:208
#: matplotlib.axes._axes.Axes.quiver:217 of
msgid "bool"
msgstr "bool"

#: matplotlib.axes._axes.Axes.quiver:182 of
msgid ":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` or aa or antialiaseds"
msgstr ":meth:`antialias <matplotlib.collections.Collection.set_antialiased>` o aa o antialiaseds"

#: matplotlib.axes._axes.Axes.quiver:182 of
msgid "bool or list of bools"
msgstr "libro o lista de bools"

#: matplotlib.axes._axes.Axes.quiver:183 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"

#: matplotlib.axes._axes.Axes.quiver:183 of
msgid "array-like or None"
msgstr "tipo array o ninguno"

#: matplotlib.axes._axes.Axes.quiver:184 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"

#: matplotlib.axes._axes.Axes.quiver:184 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.axes._axes.Axes.quiver:185 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"

#: matplotlib.axes._axes.Axes.quiver:185 of
msgid "(vmin: float, vmax: float)"
msgstr "(vmin: flotante, vmax: flotante)"

#: matplotlib.axes._axes.Axes.quiver:186 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.axes._axes.Axes.quiver:186 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.axes._axes.Axes.quiver:187 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.axes._axes.Axes.quiver:188 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.axes._axes.Axes.quiver:188 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.axes._axes.Axes.quiver:189 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"

#: matplotlib.axes._axes.Axes.quiver:189 of
msgid "`.Colormap` or str or None"
msgstr "`.Colormap` o str o ninguno"

#: matplotlib.axes._axes.Axes.quiver:190 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ":meth:`color <matplotlib.collections.Collection.set_color>`"

#: matplotlib.axes._axes.Axes.quiver:190 of
msgid "color or list of rgba tuples"
msgstr "color o lista de tubos rgba"

#: matplotlib.axes._axes.Axes.quiver:191 of
msgid ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec or edgecolors"
msgstr ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` o ec o aristas colores"

#: matplotlib.axes._axes.Axes.quiver:191 of
msgid "color or list of colors or 'face'"
msgstr "color o lista de colores o 'cara'"

#: matplotlib.axes._axes.Axes.quiver:192 of
msgid ":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or facecolors or fc"
msgstr ":meth:`carecolor <matplotlib.collections.Collection.set_facecolor>` o colores de caras o fc"

#: matplotlib.axes._axes.Axes.quiver:192 of
msgid "color or list of colors"
msgstr "color o lista de colores"

#: matplotlib.axes._axes.Axes.quiver:193 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.axes._axes.Axes.quiver:193 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.axes._axes.Axes.quiver:194 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.axes._axes.Axes.quiver:194 matplotlib.axes._axes.Axes.quiver:213
#: of
msgid "str"
msgstr "str"

#: matplotlib.axes._axes.Axes.quiver:195 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ":meth:`colgante <matplotlib.collections.Collection.set_hatch>`"

#: matplotlib.axes._axes.Axes.quiver:195 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"

#: matplotlib.axes._axes.Axes.quiver:196 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.axes._axes.Axes.quiver:197 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"

#: matplotlib.axes._axes.Axes.quiver:197 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.axes._axes.Axes.quiver:198 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.axes._axes.Axes.quiver:198 of
msgid "object"
msgstr "object"

#: matplotlib.axes._axes.Axes.quiver:199 of
msgid ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or dashes or linestyles or ls"
msgstr ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` o guiones o estilos de línea o ls"

#: matplotlib.axes._axes.Axes.quiver:199 of
msgid "str or tuple or list thereof"
msgstr "str o tuple o lista de ellos"

#: matplotlib.axes._axes.Axes.quiver:200 of
msgid ":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or linewidths or lw"
msgstr ":meth:`ancho de línea <matplotlib.collections.Collection.set_linewidth>o ancho de línea o lw"

#: matplotlib.axes._axes.Axes.quiver:200 of
msgid "float or list of floats"
msgstr "flotante o lista de flotantes"

#: matplotlib.axes._axes.Axes.quiver:201 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"

#: matplotlib.axes._axes.Axes.quiver:201 of
msgid "`.Normalize` or None"
msgstr "`.normalize` o Ninguno"

#: matplotlib.axes._axes.Axes.quiver:202 of
msgid ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"
msgstr ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"

#: matplotlib.axes._axes.Axes.quiver:202 matplotlib.axes._axes.Axes.quiver:212
#: of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.axes._axes.Axes.quiver:203 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"

#: matplotlib.axes._axes.Axes.quiver:203 of
msgid "(N, 2) or (2,) array-like"
msgstr "((N, 2) o (2,) array-like"

#: matplotlib.axes._axes.Axes.quiver:204 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.axes._axes.Axes.quiver:204 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.axes._axes.Axes.quiver:205 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`rutas <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.axes._axes.Axes.quiver:205 matplotlib.axes._axes.Axes.quiver:215
#: of
msgid "list of array-like"
msgstr "lista de matriz"

#: matplotlib.axes._axes.Axes.quiver:206 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.axes._axes.Axes.quiver:206 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.axes._axes.Axes.quiver:207 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"

#: matplotlib.axes._axes.Axes.quiver:207 matplotlib.axes._axes.Axes.quiver:218
#: of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.axes._axes.Axes.quiver:208 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.axes._axes.Axes.quiver:209 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ":meth:`tamaños <matplotlib.collections._CollectionWithSizes.set_sizes>`"

#: matplotlib.axes._axes.Axes.quiver:209 of
msgid "ndarray or None"
msgstr "ndarray o ninguno"

#: matplotlib.axes._axes.Axes.quiver:210 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.axes._axes.Axes.quiver:210 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.axes._axes.Axes.quiver:211 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.axes._axes.Axes.quiver:211 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.axes._axes.Axes.quiver:212 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.axes._axes.Axes.quiver:213 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.axes._axes.Axes.quiver:214 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ":meth:`urls <matplotlib.collections.Collection.set_urls>`"

#: matplotlib.axes._axes.Axes.quiver:214 of
msgid "list of str or None"
msgstr "lista de str o ninguno"

#: matplotlib.axes._axes.Axes.quiver:215 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.axes._axes.Axes.quiver:216 of
msgid ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"

#: matplotlib.axes._axes.Axes.quiver:216 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.axes._axes.Axes.quiver:217 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.axes._axes.Axes.quiver:218 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.axes._axes.Axes.quiver:227 of
msgid ":obj:`.Axes.quiverkey`"
msgstr ":obj:`.Ejes.quiverkey`"

#: matplotlib.axes._axes.Axes.quiver:228 of
msgid "Add a key to a quiver plot."
msgstr "Agrega una clave a una parcela de quiver."

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:2
msgid "Examples using ``matplotlib.axes.Axes.quiver``"
msgstr "Ejemplos usando ``matplotlib.axes.Axes.quiver``"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:10
msgid "Advanced quiver and quiverkey functions"
msgstr "Funciones avanzadas de quiver y quiverkey"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:18
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_demo.py`"
msgstr ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_demo.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:29
msgid "Quiver Simple Demo"
msgstr "Demostración de Quiver Simple"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:29
#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:37
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_simple_demo.py`"
msgstr ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_simple_demo.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:48
msgid "Trigradient Demo"
msgstr "Demostración del trigradiente"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:48
#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:56
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_trigradient_demo.py`"
msgstr ":ref:`sphx_glr_gallery_images_contours_and_fields_trigradient_demo.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:67
msgid "3D quiver plot"
msgstr "Gráfico de quiver en 3D"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:67
#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:75
msgid ":ref:`sphx_glr_gallery_mplot3d_quiver3d.py`"
msgstr ":ref:`sphx_glr_gallery_mplot3d_quiver3d.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:86
msgid "quiver(X, Y, U, V)"
msgstr "quiver(X, Y, U, V)"

#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:86
#: ../../api/_as_gen/matplotlib.axes.Axes.quiver.examples:94
msgid ":ref:`sphx_glr_plot_types_arrays_quiver.py`"
msgstr ":ref:`sphx_glr_plot_types_arrays_quiver.py`"

