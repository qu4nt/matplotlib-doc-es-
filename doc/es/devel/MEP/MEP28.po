msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-18 16:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/devel/MEP/MEP28.po\n"
"X-Crowdin-File-ID: 2026\n"
"Language: es_ES\n"

#: ../../devel/MEP/MEP28.rst:3
msgid "MEP28: Remove Complexity from Axes.boxplot"
msgstr "MEP28: Eliminar la complejidad de Axes.boxplot"

#: ../../devel/MEP/MEP28.rst:10
msgid "Status"
msgstr "Estado"

#: ../../devel/MEP/MEP28.rst:11
msgid "**Discussion**"
msgstr "**Discusión**"

#: ../../devel/MEP/MEP28.rst:14
msgid "Branches and Pull requests"
msgstr "Ramas y Pull requests"

#: ../../devel/MEP/MEP28.rst:16
msgid "The following lists any open PRs or branches related to this MEP:"
msgstr "A continuación se enumeran los PRs o ramas abiertas relacionadas con este MEP:"

#: ../../devel/MEP/MEP28.rst:18
msgid "Deprecate redundant statistical kwargs in ``Axes.boxplot``: https://github.com/phobson/matplotlib/tree/MEP28-initial-deprecations"
msgstr "Se han suprimido los kwargs estadísticos redundantes en ``Axes.boxplot``: https://github.com/phobson/matplotlib/tree/MEP28-initial-deprecations"

#: ../../devel/MEP/MEP28.rst:19
msgid "Deprecate redundant style options in ``Axes.boxplot``: https://github.com/phobson/matplotlib/tree/MEP28-initial-deprecations"
msgstr "Se eliminan las opciones de estilo redundantes en ``Axes.boxplot``: https://github.com/phobson/matplotlib/tree/MEP28-initial-deprecations"

#: ../../devel/MEP/MEP28.rst:20
msgid "Deprecate passings 2D NumPy arrays as input: None"
msgstr "Desaparece el paso de matrices 2D NumPy como entrada: Ninguno"

#: ../../devel/MEP/MEP28.rst:21
msgid "Add pre- & post-processing options to ``cbook.boxplot_stats``: https://github.com/phobson/matplotlib/tree/boxplot-stat-transforms"
msgstr "Añadir opciones de pre y post-procesamiento a ``cbook.boxplot_stats``: https://github.com/phobson/matplotlib/tree/boxplot-stat-transforms"

#: ../../devel/MEP/MEP28.rst:22
msgid "Exposing ``cbook.boxplot_stats`` through ``Axes.boxplot`` kwargs: None"
msgstr "Exponiendo ``cbook.boxplot_stats`` a través de ``Axes.boxplot`` kwargs: Ninguna"

#: ../../devel/MEP/MEP28.rst:23
msgid "Remove redundant statistical kwargs in ``Axes.boxplot``: None"
msgstr "Eliminar los kwargs estadísticos redundantes en ``Axes.boxplot``: Ninguno"

#: ../../devel/MEP/MEP28.rst:24
msgid "Remove redundant style options in ``Axes.boxplot``: None"
msgstr "Elimina las opciones de estilo redundantes en ``Axes.boxplot``: Ninguno"

#: ../../devel/MEP/MEP28.rst:25
msgid "Remaining items that arise through discussion: None"
msgstr "Otros puntos que surgen en el debate: Ninguno"

#: ../../devel/MEP/MEP28.rst:28
msgid "Abstract"
msgstr "Resumen"

#: ../../devel/MEP/MEP28.rst:30
msgid "Over the past few releases, the ``Axes.boxplot`` method has grown in complexity to support fully customizable artist styling and statistical computation. This lead to ``Axes.boxplot`` being split off into multiple parts. The statistics needed to draw a boxplot are computed in ``cbook.boxplot_stats``, while the actual artists are drawn by ``Axes.bxp``. The original method, ``Axes.boxplot`` remains as the most public API that handles passing the user-supplied data to ``cbook.boxplot_stats``, feeding the results to ``Axes.bxp``, and pre-processing style information for each facet of the boxplot plots."
msgstr "En las últimas versiones, el método ``Axes.boxplot`` ha crecido en complejidad para soportar un estilo de artist totalmente personalizable y un cálculo estadístico. Esto ha llevado a dividir ``Axes.boxplot`` en varias partes. Las estadísticas necesarias para dibujar un boxplot se calculan en ``cbook.boxplot_stats``, mientras que los artists reales son dibujados por ``Axes.bxp``. El método original, ``Axes.boxplot`` sigue siendo la API más pública que se encarga de pasar los datos suministrados por el usuario a ``cbook.boxplot_stats``, de alimentar los resultados a ``Axes.bxp``, y de preprocesar la información de estilo para cada faceta de los gráficos de caja."

#: ../../devel/MEP/MEP28.rst:40
msgid "This MEP will outline a path forward to rollback the added complexity and simplify the API while maintaining reasonable backwards compatibility."
msgstr "Este MEP esbozará un camino a seguir para revertir la complejidad añadida y simplificar la API manteniendo una razonable Compatibilidad con versiones anteriores."

#: ../../devel/MEP/MEP28.rst:45
msgid "Detailed description"
msgstr "Descripción detallada"

#: ../../devel/MEP/MEP28.rst:47
msgid "Currently, the ``Axes.boxplot`` method accepts parameters that allow the users to specify medians and confidence intervals for each box that will be drawn in the plot. These were provided so that avdanced users could provide statistics computed in a different fashion that the simple method provided by matplotlib. However, handling this input requires complex logic to make sure that the forms of the data structure match what needs to be drawn. At the moment, that logic contains 9 separate if/else statements nested up to 5 levels deep with a for loop, and may raise up to 2 errors. These parameters were added prior to the creation of the ``Axes.bxp`` method, which draws boxplots from a list of dictionaries containing the relevant statistics. Matplotlib also provides a function that computes these statistics via ``cbook.boxplot_stats``. Note that advanced users can now either a) write their own function to compute the stats required by ``Axes.bxp``, or b) modify the output returned by ``cbook.boxplots_stats`` to fully customize the position of the artists of the plots. With this flexibility, the parameters to manually specify only the medians and their confidences intervals remain for backwards compatibility."
msgstr "Actualmente, el método ``Axes.boxplot`` acepta parámetros que permiten a los usuarios especificar medianas e intervalos de confianza para cada caja que se dibujará en el gráfico. Estos se proporcionaron para que los usuarios de avdanced pudieran proporcionar estadísticas calculadas de una manera diferente al método simple proporcionado por matplotlib. Sin embargo, el manejo de esta entrada requiere una lógica compleja para asegurarse de que las formas de la estructura de datos coinciden con lo que se necesita dibujar. Por el momento, esa lógica contiene 9 declaraciones if/else separadas anidadas hasta 5 niveles de profundidad con un bucle for, y puede generar hasta 2 errores. Estos parámetros se añadieron antes de la creación del método ``Axes.bxp``, que dibuja gráficos de caja a partir de una lista de diccionarios que contienen las estadísticas relevantes. Matplotlib también proporciona una función que calcula estas estadísticas a través de ``cbook.boxplot_stats``. Ten en cuenta que los usuarios avanzados pueden ahora a) escribir su propia función para calcular las estadísticas requeridas por ``Axes.bxp``, o b) modificar la salida devuelta por ``cbook.boxplots_stats`` para personalizar completamente la posición de los artists de los gráficos. Con esta flexibilidad, los parámetros para especificar manualmente sólo las medianas y sus intervalos de confianza permanecen para la compatibilidad con versiones anteriores."

#: ../../devel/MEP/MEP28.rst:65
msgid "Around the same time that the two roles of ``Axes.boxplot`` were split into ``cbook.boxplot_stats`` for computation and ``Axes.bxp`` for drawing, both ``Axes.boxplot`` and ``Axes.bxp`` were written to accept parameters that individually toggle the drawing of all components of the boxplots, and parameters that individually configure the style of those artists. However, to maintain backwards compatibility, the ``sym`` parameter (previously used to specify the symbol of the fliers) was retained. This parameter itself requires fairly complex logic to reconcile the ``sym`` parameters with the newer ``flierprops`` parameter at the default style specified by ``matplotlibrc``."
msgstr "Más o menos al mismo tiempo que las dos funciones de ``Axes.boxplot`` se dividieron en ``cbook.boxplot_stats`` para el cálculo y ``Axes.bxp`` para el dibujo, tanto ``Axes.boxplot`` como ``Axes.bxp`` se escribieron para aceptar parámetros que conmutan individualmente el dibujo de todos los componentes de los gráficos de caja, y parámetros que configuran individualmente el estilo de esos artists. Sin embargo, para mantener la compatibilidad con versiones anteriores, se mantuvo el parámetro ``sym`` (que antes se utilizaba para especificar el símbolo de los volantes). Este parámetro en sí mismo requiere una lógica bastante compleja para reconciliar los parámetros ``sym`` con el parámetro más nuevo ``flierprops`` en el estilo por defecto especificado por ``matplotlibrc``."

#: ../../devel/MEP/MEP28.rst:75
msgid "This MEP seeks to dramatically simplify the creation of boxplots for novice and advanced users alike. Importantly, the changes proposed here will also be available to downstream packages like seaborn, as seaborn smartly allows users to pass arbitrary dictionaries of parameters through the seaborn API to the underlying matplotlib functions."
msgstr "Este MEP busca simplificar drásticamente la creación degráfico de caja para usuarios principiantes y avanzados por igual. Es importante destacar que los cambios propuestos aquí también estarán disponibles para los paquetes posteriores como seaborn, ya que seaborn permite inteligentemente a los usuarios pasar diccionarios arbitrarios de parámetros a través de la API de seaborn a las funciones subyacentes de matplotlib."

#: ../../devel/MEP/MEP28.rst:81
msgid "This will be achieved in the following way:"
msgstr "Esto se logrará de la siguiente manera:"

#: ../../devel/MEP/MEP28.rst:83
msgid "``cbook.boxplot_stats`` will be modified to allow pre- and post- computation transformation functions to be passed in (e.g., ``np.log`` and ``np.exp`` for lognormally distributed data)"
msgstr "``cbook.boxplot_stats`` se modificará para permitir que se pasen funciones de transformación antes y después del cálculo (por ejemplo, ``np.log`` y ``np.exp`` para datos distribuidos de forma lognormal)"

#: ../../devel/MEP/MEP28.rst:86
msgid "``Axes.boxplot`` will be modified to also accept and naïvely pass them to ``cbook.boxplots_stats`` (Alt: pass the stat function and a dict of its optional parameters)."
msgstr "``Axes.boxplot`` será modificado para que también acepte y pase ingenuamente a ``cbook.boxplots_stats`` (Alt: pasar la función stat y un dict de sus parámetros opcionales)."

#: ../../devel/MEP/MEP28.rst:89
msgid "Outdated parameters from ``Axes.boxplot`` will be deprecated and later removed."
msgstr "Los parámetros obsoletos de ``Axes.boxplot`` serán obsoletos y posteriormente eliminados."

#: ../../devel/MEP/MEP28.rst:93
msgid "Importance"
msgstr "Importancia"

#: ../../devel/MEP/MEP28.rst:95
msgid "Since the limits of the whiskers are computed arithmetically, there is an implicit assumption of normality in box and whisker plots. This primarily affects which data points are classified as outliers."
msgstr "Dado que los límites de los bigotes se calculan aritméticamente, existe una suposición implícita de normalidad en los gráficos de caja y bigotes. Esto afecta principalmente a los puntos de datos que se clasifican como valores atípicos."

#: ../../devel/MEP/MEP28.rst:99
msgid "Allowing transformations to the data and the results used to draw boxplots will allow users to opt-out of that assumption if the data are known to not fit a normal distribution."
msgstr "Permitir las transformaciones de los datos y los resultados utilizados para dibujar los gráficos de caja permitirá a los usuarios optar por no hacer esa suposición si se sabe que los datos no se ajustan a una distribución normal."

#: ../../devel/MEP/MEP28.rst:103
msgid "Below is an example of how ``Axes.boxplot`` classifies outliers of lognormal data differently depending one these types of transforms."
msgstr "A continuación se muestra un ejemplo de cómo ``Axes.boxplot`` clasifica los valores atípicos de los datos lognormales de forma diferente dependiendo de estos tipos de transformaciones."

#: ../../devel/MEP/MEP28.rst:28
msgid "(`Source code <../../devel/MEP/MEP28-1.py>`__, `png <../../devel/MEP/MEP28-1.png>`__, `pdf <../../devel/MEP/MEP28-1.pdf>`__)"
msgstr "(`Source code <../../devel/MEP/MEP28-1.py>`__, `png <../../devel/MEP/MEP28-1.png>`__, `pdf <../../devel/MEP/MEP28-1.pdf>`__)"

#: ../../devel/MEP/MEP28.rst:131
msgid "Implementation"
msgstr "Implementación"

#: ../../devel/MEP/MEP28.rst:134
msgid "Passing transform functions to ``cbook.boxplots_stats``"
msgstr "Pasar funciones de transformación a ``cbook.boxplots_stats``"

#: ../../devel/MEP/MEP28.rst:136
msgid "This MEP proposes that two parameters (e.g., ``transform_in`` and ``transform_out`` be added to the cookbook function that computes the statistics for the boxplot function. These will be optional keyword-only arguments and can easily be set to ``lambda x: x`` as a no-op when omitted by the user. The ``transform_in`` function will be applied to the data as the ``boxplot_stats`` function loops through each subset of the data passed to it. After the list of statistics dictionaries are computed the ``transform_out`` function is applied to each value in the dictionaries."
msgstr "Este MEP propone que se añadan dos parámetros (por ejemplo, ``transform_in`` y ``transform_out`` a la función del libro de cocina que calcula las estadísticas para la función gráfico de caja. Estos serán argumentos opcionales de palabra clave y pueden ser fácilmente establecidos a ``lambda x: x`` como un no-op cuando es omitido por el usuario. La función ``transform_in`` se aplicará a los datos mientras la función ``boxplot_stats`` recorre cada subconjunto de datos que se le pasa. Después de la lista de diccionarios de estadísticas se calcula la función ``transform_out`` se aplica a cada valor en los diccionarios."

#: ../../devel/MEP/MEP28.rst:145
msgid "These transformations can then be added to the call signature of ``Axes.boxplot`` with little impact to that method's complexity. This is because they can be directly passed to ``cbook.boxplot_stats``. Alternatively, ``Axes.boxplot`` could be modified to accept an optional statistical function kwarg and a dictionary of parameters to be directly passed to it."
msgstr "Estas transformaciones pueden añadirse a la firma de la llamada de ``Axes.boxplot`` con poco impacto en la complejidad de ese método. Esto se debe a que se pueden pasar directamente a ``cbook.boxplot_stats``. Como alternativa, ``Axes.boxplot`` podría modificarse para aceptar una función estadística opcional kwarg y un diccionario de parámetros que se le pasen directamente."

#: ../../devel/MEP/MEP28.rst:152
msgid "At this point in the implementation users and external libraries like seaborn would have complete control via the ``Axes.boxplot`` method. More importantly, at the very least, seaborn would require no changes to its API to allow users to take advantage of these new options."
msgstr "En este punto de la implementación, los usuarios y las bibliotecas externas como seaborn tendrían un control completo a través del método ``Axes.boxplot``. Y lo que es más importante, al menos seaborn no necesitaría cambios en su API para permitir a los usuarios aprovechar estas nuevas opciones."

#: ../../devel/MEP/MEP28.rst:158
msgid "Simplifications to the ``Axes.boxplot`` API and other functions"
msgstr "Simplificación de la API ``Axes.boxplot`` y otras funciones"

#: ../../devel/MEP/MEP28.rst:160
msgid "Simplifying the boxplot method consists primarily of deprecating and then removing the redundant parameters. Optionally, a next step would include rectifying minor terminological inconsistencies between ``Axes.boxplot`` and ``Axes.bxp``."
msgstr "La simplificación del método boxplot consiste principalmente en desaprobar y luego eliminar los parámetros redundantes. Opcionalmente, un siguiente paso incluiría la rectificación de incoherencias terminológicas menores entre ``Axes.boxplot`` y ``Axes.bxp``."

#: ../../devel/MEP/MEP28.rst:165
msgid "The parameters to be deprecated and removed include:"
msgstr "Los parámetros que se van a obsoleto son los siguientes:"

#: ../../devel/MEP/MEP28.rst:167
msgid "``usermedians`` - processed by 10 SLOC, 3 ``if`` blocks, a ``for`` loop"
msgstr "``usermedians`` - procesado por 10 SLOC, 3 bloques ``if``, un bucle ``for``"

#: ../../devel/MEP/MEP28.rst:168
msgid "``conf_intervals`` - handled by 15 SLOC, 6 ``if`` blocks, a ``for`` loop"
msgstr "``conf_intervals`` - manejado por 15 SLOC, 6 bloques ``if``, un bucle ``for``"

#: ../../devel/MEP/MEP28.rst:169
msgid "``sym`` - processed by 12 SLOC, 4 ``if`` blocks"
msgstr "``sym`` - procesado por 12 SLOC, 4 bloques ``if``"

#: ../../devel/MEP/MEP28.rst:171
msgid "Removing the ``sym`` option allows all code in handling the remaining styling parameters to be moved to ``Axes.bxp``. This doesn't remove any complexity, but does reinforce the single responsibility principle among ``Axes.bxp``, ``cbook.boxplot_stats``, and ``Axes.boxplot``."
msgstr "La eliminación de la opción ``sym`` permite que todo el código para el manejo de los restantes parámetros de estilo se traslade a ``Axes.bxp``. Esto no elimina ninguna complejidad, pero refuerza el principio de responsabilidad única entre ``Axes.bxp``, ``cbook.boxplot_stats`` y ``Axes.boxplot``."

#: ../../devel/MEP/MEP28.rst:176
msgid "Additionally, the ``notch`` parameter could be renamed ``shownotches`` to be consistent with ``Axes.bxp``. This kind of cleanup could be taken a step further and the ``whis``, ``bootstrap``, ``autorange`` could be rolled into the kwargs passed to the new ``statfxn`` parameter."
msgstr "Además, el parámetro ``notch`` podría ser renombrado como ``shownotches`` para ser consistente con ``Axes.bxp``. Este tipo de limpieza podría llevarse a cabo un paso más allá y los parámetros ``whis``, ``bootstrap``, ``autorange`` podrían incluirse en los kwargs pasados al nuevo parámetro ``statfxn``."

#: ../../devel/MEP/MEP28.rst:182
msgid "Backward compatibility"
msgstr "Compatibilidad con versiones anteriores"

#: ../../devel/MEP/MEP28.rst:184
msgid "Implementation of this MEP would eventually result in the backwards incompatible deprecation and then removal of the keyword parameters ``usermedians``, ``conf_intervals``, and ``sym``. Cursory searches on GitHub indicated that ``usermedians``, ``conf_intervals`` are used by few users, who all seem to have a very strong knowledge of matplotlib. A robust deprecation cycle should provide sufficient time for these users to migrate to a new API."
msgstr "La implementación de este MEP resultaría eventualmente en la obsolescencia y posterior eliminación de los parámetros de palabra clave ``usermedians``, ``conf_intervals``, y ``sym``. Búsquedas rápidas en GitHub indican que ``usermedians``, ``conf_intervals`` son utilizados por pocos usuarios, que parecen tener un gran conocimiento de matplotlib. Un ciclo de obsolescencia robusta debería proporcionar suficiente tiempo para que estos usuarios migren a una nueva API."

#: ../../devel/MEP/MEP28.rst:192
msgid "Deprecation of ``sym`` however, may have a much broader reach into the matplotlib userbase."
msgstr "Sin embargo, la obsolescencia de ``sym`` puede tener un alcance mucho más amplio en la base de usuarios de matplotlib."

#: ../../devel/MEP/MEP28.rst:196
msgid "Schedule"
msgstr "Planificación"

#: ../../devel/MEP/MEP28.rst:197
msgid "An accelerated timeline could look like the following:"
msgstr "Un cronograma acelerado podría ser el siguiente:"

#: ../../devel/MEP/MEP28.rst:199
msgid "v2.0.1 add transforms to ``cbook.boxplots_stats``, expose in ``Axes.boxplot``"
msgstr "v2.0.1 añade transformaciones a ``cbook.boxplots_stats``, expone en ``Axes.boxplot``"

#: ../../devel/MEP/MEP28.rst:200
msgid "v2.1.0 Initial Deprecations , and using 2D NumPy arrays as input"
msgstr "v2.1.0 Obsolencias iniciales , y uso de arreglos 2D NumPy como entrada"

#: ../../devel/MEP/MEP28.rst:202
msgid "Using 2D NumPy arrays as input. The semantics around 2D arrays are generally confusing."
msgstr "Uso de arreglos 2D de NumPy como entrada. La semántica en torno a los arreglos 2D es generalmente confusa."

#: ../../devel/MEP/MEP28.rst:203
msgid "``usermedians``, ``conf_intervals``, ``sym`` parameters"
msgstr "parámetros ``usermedians``, ``conf_intervals``, ``sym``"

#: ../../devel/MEP/MEP28.rst:205
msgid "v2.2.0"
msgstr "v2.2.0"

#: ../../devel/MEP/MEP28.rst:207
msgid "remove ``usermedians``, ``conf_intervals``, ``sym`` parameters"
msgstr "eliminar los parámetros ``usermedians``, ``conf_intervals``, ``sym``"

#: ../../devel/MEP/MEP28.rst:208
msgid "deprecate ``notch`` in favor of ``shownotches`` to be consistent with other parameters and ``Axes.bxp``"
msgstr "dejar de lado ``notch`` en favor de ``shownotches`` para ser coherente con otros parámetros y ``Axes.bxp``"

#: ../../devel/MEP/MEP28.rst:215
msgid "v2.3.0"
msgstr "v2.3.0"

#: ../../devel/MEP/MEP28.rst:212
msgid "remove ``notch`` parameter"
msgstr "eliminar el parámetro ``notch``"

#: ../../devel/MEP/MEP28.rst:213
msgid "move all style and artist toggling logic to ``Axes.bxp`` such ``Axes.boxplot`` is little more than a broker between ``Axes.bxp`` and ``cbook.boxplots_stats``"
msgstr "mover toda la lógica de estilo y de alternancia de artists a ``Axes.bxp`` tal ``Axes.boxplot`` es poco más que un intermediario entre ``Axes.bxp`` y ``cbook.boxplots_stats``"

#: ../../devel/MEP/MEP28.rst:218
msgid "Anticipated Impacts to Users"
msgstr "Efectos previstos para los usuarios"

#: ../../devel/MEP/MEP28.rst:220
msgid "As described above deprecating ``usermedians`` and ``conf_intervals`` will likely impact few users. Those who will be impacted are almost certainly advanced users who will be able to adapt to the change."
msgstr "Tal y como se ha descrito anteriormente, la obsolencia de \"usermedians\" y \"conf_intervals\" probablemente afectará a pocos usuarios. Los que se verán afectados son, casi con toda seguridad, usuarios avanzados que podrán adaptarse al cambio."

#: ../../devel/MEP/MEP28.rst:224
msgid "Deprecating the ``sym`` option may import more users and effort should be taken to collect community feedback on this."
msgstr "La eliminación de la opción ``sym`` podría importar a más usuarios y se debería hacer un esfuerzo para recoger la opinión de la comunidad al respecto."

#: ../../devel/MEP/MEP28.rst:228
msgid "Anticipated Impacts to Downstream Libraries"
msgstr "Impactos anticipados para bajar las bibliotecas"

#: ../../devel/MEP/MEP28.rst:230
msgid "The source code (GitHub master as of 2016-10-17) was inspected for seaborn and python-ggplot to see if these changes would impact their use. None of the parameters nominated for removal in this MEP are used by seaborn. The seaborn APIs that use matplotlib's boxplot function allow user's to pass arbitrary ``**kwargs`` through to matplotlib's API. Thus seaborn users with modern matplotlib installations will be able to take full advantage of any new features added as a result of this MEP."
msgstr "Se inspeccionó el código fuente (GitHub master a partir de 2016-10-17) de seaborn y python-ggplot para ver si estos cambios afectarían a su uso. Ninguno de los parámetros nominados para ser eliminados en este MEP son utilizados por seaborn. Las APIs de seaborn que utilizan la función gráfico de caja de matplotlib permiten al usuario pasar ``**kwargs`` arbitrarios a través de la API de matplotlib. Por lo tanto, los usuarios de seaborn con instalaciones modernas de matplotlib podrán aprovechar al máximo las nuevas características añadidas como resultado de este MEP."

#: ../../devel/MEP/MEP28.rst:238
msgid "Python-ggplot has implemented its own function to draw boxplots. Therefore, no impact can come to it as a result of implementing this MEP."
msgstr "Python-ggplot ha implementado su propia función para dibujar gráficos de caja. Por lo tanto, la implementación de este MEP no puede tener ningún impacto."

#: ../../devel/MEP/MEP28.rst:242
msgid "Alternatives"
msgstr "Alternativas"

#: ../../devel/MEP/MEP28.rst:245
msgid "Variations on the theme"
msgstr "Variaciones sobre el tema"

#: ../../devel/MEP/MEP28.rst:247
msgid "This MEP can be divided into a few loosely coupled components:"
msgstr "Este MEP puede dividirse en algunos componentes poco acoplados:"

#: ../../devel/MEP/MEP28.rst:249
msgid "Allowing pre- and post-computation transformation function in ``cbook.boxplot_stats``"
msgstr "Permitir la función de transformación antes y después del cálculo en ``cbook.boxplot_stats``"

#: ../../devel/MEP/MEP28.rst:250
msgid "Exposing that transformation in the ``Axes.boxplot`` API"
msgstr "Exponer esa transformación en la API ``Axes.boxplot``"

#: ../../devel/MEP/MEP28.rst:251
msgid "Removing redundant statistical options in ``Axes.boxplot``"
msgstr "Eliminación de opciones estadísticas redundantes en ``Axes.boxplot``"

#: ../../devel/MEP/MEP28.rst:252
msgid "Shifting all styling parameter processing from ``Axes.boxplot`` to ``Axes.bxp``."
msgstr "Cambio de todo el procesamiento de parámetros de estilo de ``Axes.boxplot`` a ``Axes.bxp``."

#: ../../devel/MEP/MEP28.rst:254
msgid "With this approach, #2 depends and #1, and #4 depends on #3."
msgstr "Con este enfoque, #2 depende y #1, y #4 depende de #3."

#: ../../devel/MEP/MEP28.rst:256
msgid "There are two possible approaches to #2. The first and most direct would be to mirror the new ``transform_in`` and ``transform_out`` parameters of ``cbook.boxplot_stats`` in ``Axes.boxplot`` and pass them directly."
msgstr "Hay dos enfoques posibles para el número #2. La primera y más directa sería reflejar los nuevos parámetros ``transform_in`` y ``transform_out`` de ``cbook.boxplot_stats`` en ``Axes.boxplot`` y pasarlos directamente."

#: ../../devel/MEP/MEP28.rst:260
msgid "The second approach would be to add ``statfxn`` and ``statfxn_args`` parameters to ``Axes.boxplot``. Under this implementation, the default value of ``statfxn`` would be ``cbook.boxplot_stats``, but users could pass their own function. Then ``transform_in`` and ``transform_out`` would then be passed as elements of the ``statfxn_args`` parameter."
msgstr "El segundo enfoque sería añadir los parámetros ``statfxn`` y ``statfxn_args`` a ``Axes.boxplot``. Bajo esta implementación, el valor por defecto de ``statfxn`` sería ``cbook.boxplot_stats``, pero los usuarios podrían pasar su propia función. Entonces, ``transform_in`` y ``transform_out`` se pasarían como elementos del parámetro ``statfxn_args``."

#: ../../devel/MEP/MEP28.rst:299
msgid "Both cases would allow users to do the following:"
msgstr "Ambos casos permitirían a los usuarios hacer lo siguiente:"

#: ../../devel/MEP/MEP28.rst:308
msgid "But Option Two lets a user write a completely custom stat function (e.g., ``my_box_stats``) with fancy BCA confidence intervals and the whiskers set differently depending on some attribute of the data."
msgstr "Pero la Opción Dos permite al usuario escribir una función de estadísticas completamente personalizada (por ejemplo, ``my_box_stats``) con extravagantes intervalos de confianza BCA y los bigotes establecidos de forma diferente dependiendo de algún atributo de los datos."

#: ../../devel/MEP/MEP28.rst:312
msgid "This is available under the current API:"
msgstr "Esto está disponible en la actual API:"

#: ../../devel/MEP/MEP28.rst:321
msgid "And would be more concise with Option Two"
msgstr "Y sería más conciso con la opción dos"

#: ../../devel/MEP/MEP28.rst:329
msgid "Users could also pass their own function to compute the stats:"
msgstr "Los usuarios también pueden pasar su propia función para calcular las estadísticas:"

#: ../../devel/MEP/MEP28.rst:337
msgid "From the examples above, Option Two seems to have only marginal benefit, but in the context of downstream libraries like seaborn, its advantage is more apparent as the following would be possible without any patches to seaborn:"
msgstr "A partir de los ejemplos anteriores, la opción dos parece tener sólo un beneficio marginal, pero en el contexto de las bibliotecas descendentes como seaborn, su ventaja es más evidente, ya que lo siguiente sería posible sin ningún parche para seaborn:"

#: ../../devel/MEP/MEP28.rst:351
msgid "This type of flexibility was the intention behind splitting the overall boxplot API in the current three functions. In practice however, downstream libraries like seaborn support versions of matplotlib dating back well before the split. Thus, adding just a bit more flexibility to the ``Axes.boxplot`` could expose all the functionality to users of the downstream libraries with modern matplotlib installation without intervention from the downstream library maintainers."
msgstr "Este tipo de flexibilidad fue la intención detrás de la división de la API gráfico de caja general en las tres funciones actuales. Sin embargo, en la práctica, bibliotecas como seaborn soportan versiones de matplotlib que se remontan a mucho antes de la división. Por lo tanto, añadir un poco más de flexibilidad a ``Axes.boxplot`` podría exponer toda la funcionalidad a los usuarios de las bibliotecas posteriores con una instalación moderna de matplotlib sin la intervención de los mantenedores de las bibliotecas posteriores."

#: ../../devel/MEP/MEP28.rst:360
msgid "Doing less"
msgstr "Hacer menos"

#: ../../devel/MEP/MEP28.rst:362
msgid "Another obvious alternative would be to omit the added pre- and post- computation transform functionality in ``cbook.boxplot_stats`` and ``Axes.boxplot``, and simply remove the redundant statistical and style parameters as described above."
msgstr "Otra alternativa obvia sería omitir la funcionalidad añadida de transformación antes y después del cálculo en ``cbook.boxplot_stats`` y ``Axes.boxplot``, y simplemente eliminar los parámetros estadísticos y de estilo redundantes como se ha descrito anteriormente."

#: ../../devel/MEP/MEP28.rst:368
msgid "Doing nothing"
msgstr "No hacer nada"

#: ../../devel/MEP/MEP28.rst:370
msgid "As with many things in life, doing nothing is an option here. This means we simply advocate for users and downstream libraries to take advantage of the split between ``cbook.boxplot_stats`` and ``Axes.bxp`` and let them decide how to provide an interface to that."
msgstr "Como con muchas cosas en la vida, no hacer nada es una opción aquí. Esto significa que simplemente abogamos por que los usuarios y las bibliotecas posteriores aprovechen la división entre ``cbook.boxplot_stats`` y ``Axes.bxp`` y dejen que ellos decidan cómo proporcionar una interfaz para ello."

