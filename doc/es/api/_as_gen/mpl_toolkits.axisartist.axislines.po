msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/mpl_toolkits.axisartist.axislines.po\n"
"X-Crowdin-File-ID: 1598\n"
"Language: es_ES\n"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:2
msgid "mpl\\_toolkits.axisartist.axislines"
msgstr "mpl\\_toolkits.axisartist.axislines"

#: mpl_toolkits.axisartist.axislines:1 of
msgid "Axislines includes modified implementation of the Axes class. The biggest difference is that the artists responsible for drawing the axis spine, ticks, ticklabels and axis labels are separated out from Matplotlib's Axis class. Originally, this change was motivated to support curvilinear grid. Here are a few reasons that I came up with a new axes class:"
msgstr "Axislines incluye la implementación modificada de la clase Axes. La diferencia más grande es que los artistas responsables de dibujar la columna vertebral, ticklabels y etiquetas de ejes están separados de la clase Eje de Matplotlib. Originalmente, este cambio estaba motivado para apoyar la cuadrícula curvilínea. Aquí hay algunas razones por las que encontré una nueva clase de ejes:"

#: mpl_toolkits.axisartist.axislines:7 of
msgid "\"top\" and \"bottom\" x-axis (or \"left\" and \"right\" y-axis) can have different ticks (tick locations and labels). This is not possible with the current Matplotlib, although some twin axes trick can help."
msgstr "Los ejes x \"arriba\" y \"abajo\" (o \"izquierda\" y \"derecha\" y-axis) pueden tener diferentes ticks (ubicaciones de ticks y etiquetas). Esto no es posible con el Matplotlib actual, aunque algunos trucos de dos ejes pueden ayudar."

#: mpl_toolkits.axisartist.axislines:11 of
msgid "Curvilinear grid."
msgstr "Rejilla curvilínea."

#: mpl_toolkits.axisartist.axislines:13 of
msgid "angled ticks."
msgstr "ticks en ángulo."

#: mpl_toolkits.axisartist.axislines:15 of
msgid "In the new axes class, xaxis and yaxis is set to not visible by default, and new set of artist (AxisArtist) are defined to draw axis line, ticks, ticklabels and axis label. Axes.axis attribute serves as a dictionary of these artists, i.e., ax.axis[\"left\"] is a AxisArtist instance responsible to draw left y-axis. The default Axes.axis contains \"bottom\", \"left\", \"top\" and \"right\"."
msgstr "En la nueva clase de ejes, xaxis y yaxis no son visibles por defecto, y un nuevo conjunto de artistas (AxisArtist) se definen para dibujar líneas de ejes, tick, etiquetas de ticks y etiquetas de ejes. Ejes. El atributo xis sirve como un diccionario de estos artistas, es decir, ax.axis[\"left\"] es una instancia AxisArtist responsable de dibujar el eje izquierdo. El eje por defecto contiene \"bottom\", \"left\", \"top\" y \"right\"."

#: mpl_toolkits.axisartist.axislines:22 of
msgid "AxisArtist can be considered as a container artist and has following children artists which will draw ticks, labels, etc."
msgstr "El AxisArtist puede ser considerado como un contenedor de artista y tiene artistas que siguen a los niños que dibujarán ticks, etiquetas, etc."

#: mpl_toolkits.axisartist.axislines:25 of
msgid "line"
msgstr "línea"

#: mpl_toolkits.axisartist.axislines:26 of
msgid "major_ticks, major_ticklabels"
msgstr "major_ticks, major_ticklabels"

#: mpl_toolkits.axisartist.axislines:27 of
msgid "minor_ticks, minor_ticklabels"
msgstr "minor_ticks, minor_ticklabels"

#: mpl_toolkits.axisartist.axislines:28 of
msgid "offsetText"
msgstr "offsetText"

#: mpl_toolkits.axisartist.axislines:29 of
msgid "label"
msgstr "label"

#: mpl_toolkits.axisartist.axislines:31 of
msgid "Note that these are separate artists from `matplotlib.axis.Axis`, thus most tick-related functions in Matplotlib won't work. For example, color and markerwidth of the ``ax.axis[\"bottom\"].major_ticks`` will follow those of Axes.xaxis unless explicitly specified."
msgstr "Tenga en cuenta que estos son artistas separados de `matplotlib.axis.Axis`, por lo tanto la mayoría de las funciones relacionadas con tick en Matplotlib no funcionarán. Por ejemplo, el color y el ancho de marcador del ``ax.axis[\"bottom\"].major_ticks`` seguirá los de Ejes.xaxis a menos que se especifique explícitamente."

#: mpl_toolkits.axisartist.axislines:36 of
msgid "In addition to AxisArtist, the Axes will have *gridlines* attribute, which obviously draws grid lines. The gridlines needs to be separated from the axis as some gridlines can never pass any axis."
msgstr "Además de AxisArtist, los ejes tendrán un atributo de *rejillas*, que obviamente dibuja líneas de cuadrícula. Las líneas de rejilla deben separarse del eje, ya que algunas líneas de rejilla nunca pueden pasar ningún eje."

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:14
msgid "Classes"
msgstr "Clases"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ":py:obj:`Axes <mpl_toolkits.axisartist.axislines.Axes>`\\ \\(\\*args\\[\\, grid\\_helper\\]\\)"
msgstr ":py:obj:`Ejes <mpl_toolkits.axisartist.axislines.Axes>`\\ \\(\\*args\\[\\, grid\\_helper\\]\\)"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid "Build an Axes in a figure."
msgstr "Construye un hacha en una figura."

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ":py:obj:`AxesZero <mpl_toolkits.axisartist.axislines.AxesZero>`\\ \\(\\*args\\[\\, grid\\_helper\\]\\)"
msgstr ":py:obj:`AxesZero <mpl_toolkits.axisartist.axislines.AxesZero>`\\ \\(\\*args\\[\\, grid\\_helper\\]\\)"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ":py:obj:`AxisArtistHelper <mpl_toolkits.axisartist.axislines.AxisArtistHelper>`\\ \\(\\)"
msgstr ":py:obj:`AxisArtistHelper <mpl_toolkits.axisartist.axislines.AxisArtistHelper>`\\ \\(\\)"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid "AxisArtistHelper should define following method with given APIs. Note that the first axes argument will be axes attribute of the caller artist.::."
msgstr "AxisArtistHelper debe definir el siguiente método con APIs dadas. Tenga en cuenta que el primer argumento de ejes será el atributo de ejes del artista que llama.::."

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ":py:obj:`AxisArtistHelperRectlinear <mpl_toolkits.axisartist.axislines.AxisArtistHelperRectlinear>`\\ \\(\\)"
msgstr ":py:obj:`AxisArtistHelperRectlinear <mpl_toolkits.axisartist.axislines.AxisArtistHelperRectlinear>`\\ \\(\\)"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ":py:obj:`GridHelperBase <mpl_toolkits.axisartist.axislines.GridHelperBase>`\\ \\(\\)"
msgstr ":py:obj:`GridHelperBase <mpl_toolkits.axisartist.axislines.GridHelperBase>`\\ \\(\\)"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ":py:obj:`GridHelperRectlinear <mpl_toolkits.axisartist.axislines.GridHelperRectlinear>`\\ \\(axes\\)"
msgstr ":py:obj:`GridHelperRectlinear <mpl_toolkits.axisartist.axislines.GridHelperRectlinear>`\\ \\(axes\\)"

