msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:04\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.subplot.po\n"
"X-Crowdin-File-ID: 1298\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.rst:2
msgid "matplotlib.pyplot.subplot"
msgstr "matplotlib.pyplot.subplot"

#: matplotlib.pyplot.subplot:2 of
msgid "Add an Axes to the current figure or retrieve an existing Axes."
msgstr "Agrega un hacha a la figura actual o recupera un hacha existente."

#: matplotlib.pyplot.subplot:4 of
msgid "This is a wrapper of `.Figure.add_subplot` which provides additional behavior when working with the implicit API (see the notes section)."
msgstr "Este es un envoltorio de `.Figure.add_subplot` que proporciona un comportamiento adicional al trabajar con la API implícita (ver la sección Notas)."

#: matplotlib.pyplot.subplot:7 of
msgid "Call signatures::"
msgstr "Firma de llamadas::"

#: matplotlib.pyplot.subplot of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.pyplot.subplot:30 of
msgid "**\\*args** : int, (int, int, *index*), or `.SubplotSpec`, default: (1, 1, 1)"
msgstr "**\\*args** : int, (int, int, *index*), o `.SubplotSpec`, por defecto: (1, 1, 1)"

#: of
msgid "int, (int, int,"
msgstr "int, (int, int, int,"

#: matplotlib.pyplot.subplot:17 of
msgid "The position of the subplot described by one of"
msgstr "La posición de la subparcela descrita por uno de"

#: matplotlib.pyplot.subplot:19 of
msgid "Three integers (*nrows*, *ncols*, *index*). The subplot will take the *index* position on a grid with *nrows* rows and *ncols* columns. *index* starts at 1 in the upper left corner and increases to the right. *index* can also be a two-tuple specifying the (*first*, *last*) indices (1-based, and including *last*) of the subplot, e.g., ``fig.add_subplot(3, 1, (1, 2))`` makes a subplot that spans the upper 2/3 of the figure."
msgstr "Tres enteros (*nrows*, *ncols*, *índice*). El subgráfico tomará la posición de *índice* en una cuadrícula con *nrows* filas y columnas *ncols*. *índice* comienza en 1 en la esquina superior izquierda y aumenta a la derecha. *índice* también puede ser una doble tupla que especifique los (*primero*, *últimos*) índices (1 basada, e incluyendo *último*) de la subparcela, e. ., ``fig.add_subplot(3, 1, (1, 2))`` hace una subparcela que abarca la parte superior 2/3 de la figura."

#: matplotlib.pyplot.subplot:26 of
msgid "A 3-digit integer. The digits are interpreted as if given separately as three single-digit integers, i.e. ``fig.add_subplot(235)`` is the same as ``fig.add_subplot(2, 3, 5)``. Note that this can only be used if there are no more than 9 subplots."
msgstr "Un entero de 3 dígitos. Los dígitos se interpretan como si se dieran por separado como tres enteros de un solo dígito, es decir, ``fig. dd_subplot(235)`` es lo mismo que ``fig.add_subplot(2, 3, 5)``. Tenga en cuenta que esto sólo puede utilizarse si no hay más de 9 subplots."

#: matplotlib.pyplot.subplot:30 of
msgid "A `.SubplotSpec`."
msgstr "A `.SubplotSpec`."

#: matplotlib.pyplot.subplot:35 of
msgid "**projection**"
msgstr "**proyección**"

#: of
msgid "{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optional"
msgstr "{None, 'aitoff', 'martillo', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, opcional"

#: matplotlib.pyplot.subplot:33 of
msgid "The projection type of the subplot (`~.axes.Axes`). *str* is the name of a custom projection, see `~matplotlib.projections`. The default None results in a 'rectilinear' projection."
msgstr "El tipo de proyección de la subparcela (`~.axes.Axes`). *str* es el nombre de una proyección personalizada, vea `~matplotlib.projections`. El valor predeterminado Ninguno da como resultado una proyección 'rectilinear'."

#: matplotlib.pyplot.subplot:38 of
msgid "**polar**"
msgstr "**polar**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.pyplot.subplot:38 of
msgid "If True, equivalent to projection='polar'."
msgstr "Si es verdadero, equivalente a la proyección='polar'."

#: matplotlib.pyplot.subplot:43 of
msgid "**sharex, sharey** : `~.axes.Axes`, optional"
msgstr "**sharex, compartir** : `~.axes.Axes`, opcional"

#: matplotlib.pyplot.subplot:42 of
msgid "Axes, optional"
msgstr "Ejes, opcional"

#: matplotlib.pyplot.subplot:41 of
msgid "Share the x or y `~matplotlib.axis` with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared axes."
msgstr "Comparte el x o y `~matplotlib.axis` con sharex y/o sharey. El eje tendrá los mismos límites, ticks y escala que el eje de los ejes compartidos."

#: matplotlib.pyplot.subplot:46 of
msgid "**label**"
msgstr "**etiqueta**"

#: matplotlib.pyplot.subplot:92 matplotlib.pyplot.subplot:105
#: matplotlib.pyplot.subplot:107 matplotlib.pyplot.subplot:110
#: matplotlib.pyplot.subplot:117 of
msgid "str"
msgstr "str"

#: matplotlib.pyplot.subplot:46 of
msgid "A label for the returned axes."
msgstr "Una etiqueta para los ejes devueltos."

#: matplotlib.pyplot.subplot of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.pyplot.subplot:57 of
msgid "`.axes.SubplotBase`, or another subclass of `~.axes.Axes`"
msgstr "`.axes.SubplotBase`, u otra subclase de `~.axes.Axes`"

#: matplotlib.pyplot.subplot:51 of
msgid "The axes of the subplot. The returned axes base class depends on the projection used. It is `~.axes.Axes` if rectilinear projection is used and `.projections.polar.PolarAxes` if polar projection is used. The returned axes is then a subplot subclass of the base class."
msgstr "Los ejes de la subparcela. La clase base de ejes devueltos depende de la proyección utilizada. Es `~.axes.Axes` si se utiliza proyección rectilineal y `. rojections.polar.PolarAxes` si se utiliza la proyección polar. Los ejes devueltos son entonces una subclase de la clase base."

#: matplotlib.pyplot.subplot of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.pyplot.subplot:127 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.pyplot.subplot:62 of
msgid "This method also takes the keyword arguments for the returned axes base class; except for the *figure* argument. The keyword arguments for the rectilinear base class `~.axes.Axes` can be found in the following table but there might also be other keyword arguments if another projection is used."
msgstr "Este método también toma los argumentos de palabra clave para la clase base de los ejes devueltos; excepto el argumento *figura*. Los argumentos de palabra clave para la clase base rectilinear `~. xes.Axes` se puede encontrar en la siguiente tabla, pero también puede haber otros argumentos de palabras clave si se utiliza otra proyección."

#: matplotlib.pyplot.subplot:72 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.pyplot.subplot:72 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.pyplot.subplot:74 of
msgid ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"
msgstr ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"

#: matplotlib.pyplot.subplot:74 of
msgid "{'box', 'datalim'}"
msgstr "{'box', 'datalim'}"

#: matplotlib.pyplot.subplot:75 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.pyplot.subplot:75 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.pyplot.subplot:76 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.pyplot.subplot:76 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.pyplot.subplot:77 of
msgid ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"
msgstr ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"

#: matplotlib.pyplot.subplot:77 of
msgid "(float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"
msgstr "(float, float) o {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"

#: matplotlib.pyplot.subplot:78 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.pyplot.subplot:78 matplotlib.pyplot.subplot:80
#: matplotlib.pyplot.subplot:81 matplotlib.pyplot.subplot:82
#: matplotlib.pyplot.subplot:87 matplotlib.pyplot.subplot:91
#: matplotlib.pyplot.subplot:93 matplotlib.pyplot.subplot:95
#: matplotlib.pyplot.subplot:102 matplotlib.pyplot.subplot:108 of
msgid "bool"
msgstr "bool"

#: matplotlib.pyplot.subplot:79 of
msgid ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"
msgstr ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"

#: matplotlib.pyplot.subplot:79 of
msgid "{'auto', 'equal'} or float"
msgstr "{'auto', 'equal'} or float"

#: matplotlib.pyplot.subplot:80 of
msgid ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"
msgstr ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"

#: matplotlib.pyplot.subplot:81 of
msgid ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"
msgstr ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"

#: matplotlib.pyplot.subplot:82 of
msgid ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"
msgstr ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"

#: matplotlib.pyplot.subplot:83 of
msgid ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"
msgstr ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"

#: matplotlib.pyplot.subplot:83 of
msgid "Callable[[Axes, Renderer], Bbox]"
msgstr "Callable[[Axes, Renderer], Bbox]"

#: matplotlib.pyplot.subplot:84 of
msgid ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"
msgstr ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"

#: matplotlib.pyplot.subplot:84 of
msgid "bool or 'line'"
msgstr "bool or 'line'"

#: matplotlib.pyplot.subplot:85 of
msgid ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"
msgstr ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"

#: matplotlib.pyplot.subplot:85 matplotlib.pyplot.subplot:101 of
msgid "float or None"
msgstr "float o None"

#: matplotlib.pyplot.subplot:86 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.pyplot.subplot:86 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.pyplot.subplot:87 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.pyplot.subplot:88 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.pyplot.subplot:88 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.pyplot.subplot:89 of
msgid ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` or fc"
msgstr ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` o fc"

#: matplotlib.pyplot.subplot:89 of
msgid "color"
msgstr "color"

#: matplotlib.pyplot.subplot:90 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.pyplot.subplot:90 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.pyplot.subplot:91 of
msgid ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"
msgstr ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"

#: matplotlib.pyplot.subplot:92 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.pyplot.subplot:93 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.pyplot.subplot:94 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.pyplot.subplot:94 of
msgid "object"
msgstr "object"

#: matplotlib.pyplot.subplot:95 of
msgid ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"
msgstr ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"

#: matplotlib.pyplot.subplot:96 of
msgid ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"
msgstr ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"

#: matplotlib.pyplot.subplot:96 matplotlib.pyplot.subplot:100
#: matplotlib.pyplot.subplot:109 matplotlib.pyplot.subplot:114
#: matplotlib.pyplot.subplot:115 matplotlib.pyplot.subplot:116
#: matplotlib.pyplot.subplot:121 matplotlib.pyplot.subplot:122 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.pyplot.subplot:97 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.pyplot.subplot:97 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.pyplot.subplot:98 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.pyplot.subplot:98 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.pyplot.subplot:99 of
msgid ":meth:`position <matplotlib.axes.Axes.set_position>`"
msgstr ":meth:`position <matplotlib.axes.Axes.set_position>`"

#: matplotlib.pyplot.subplot:99 of
msgid "[left, bottom, width, height] or `~matplotlib.transforms.Bbox`"
msgstr "[left, bottom, width, height] o `~matplotlib.transforms.Bbox`"

#: matplotlib.pyplot.subplot:100 of
msgid ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"
msgstr ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"

#: matplotlib.pyplot.subplot:101 of
msgid ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"
msgstr ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"

#: matplotlib.pyplot.subplot:102 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.pyplot.subplot:103 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.pyplot.subplot:103 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.pyplot.subplot:104 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.pyplot.subplot:104 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.pyplot.subplot:105 of
msgid ":meth:`title <matplotlib.axes.Axes.set_title>`"
msgstr ":meth:`title <matplotlib.axes.Axes.set_title>`"

#: matplotlib.pyplot.subplot:106 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.pyplot.subplot:106 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.pyplot.subplot:107 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.pyplot.subplot:108 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.pyplot.subplot:109 of
msgid ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"
msgstr ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"

#: matplotlib.pyplot.subplot:110 of
msgid ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"
msgstr ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"

#: matplotlib.pyplot.subplot:111 of
msgid ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"
msgstr ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"

#: matplotlib.pyplot.subplot:111 matplotlib.pyplot.subplot:118 of
msgid "(bottom: float, top: float)"
msgstr "(bottom: float, top: float)"

#: matplotlib.pyplot.subplot:112 of
msgid ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"
msgstr ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"

#: matplotlib.pyplot.subplot:112 matplotlib.pyplot.subplot:119 of
msgid "float greater than -0.5"
msgstr "float mayor que -0,5"

#: matplotlib.pyplot.subplot:113 of
msgid ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"
msgstr ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"

#: matplotlib.pyplot.subplot:113 matplotlib.pyplot.subplot:120 of
msgid "{\"linear\", \"log\", \"symlog\", \"logit\", ...} or `.ScaleBase`"
msgstr "{\"linear\", \"log\", \"symlog\", \"logit\", ...} o `.ScaleBase`"

#: matplotlib.pyplot.subplot:114 of
msgid ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"
msgstr ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"

#: matplotlib.pyplot.subplot:115 of
msgid ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"
msgstr ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"

#: matplotlib.pyplot.subplot:116 of
msgid ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"
msgstr ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"

#: matplotlib.pyplot.subplot:117 of
msgid ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"
msgstr ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"

#: matplotlib.pyplot.subplot:118 of
msgid ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"
msgstr ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"

#: matplotlib.pyplot.subplot:119 of
msgid ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"
msgstr ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"

#: matplotlib.pyplot.subplot:120 of
msgid ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"
msgstr ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"

#: matplotlib.pyplot.subplot:121 of
msgid ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"
msgstr ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"

#: matplotlib.pyplot.subplot:122 of
msgid ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"
msgstr ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"

#: matplotlib.pyplot.subplot:123 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.pyplot.subplot:123 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.pyplot.subplot:132 of
msgid ":obj:`.Figure.add_subplot`"
msgstr ":obj:`.Figure.add_subplot`"

#: matplotlib.pyplot.subplot:134 of
msgid ":obj:`.pyplot.subplots`"
msgstr ":obj:`.pyplot.subplots`"

#: matplotlib.pyplot.subplot:136 of
msgid ":obj:`.pyplot.axes`"
msgstr ":obj:`.pyplot.axes`"

#: matplotlib.pyplot.subplot:138 of
msgid ":obj:`.Figure.subplots`"
msgstr ":obj:`.Figure.subplots`"

#: matplotlib.pyplot.subplot:142 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.pyplot.subplot:143 of
msgid "Creating a new Axes will delete any pre-existing Axes that overlaps with it beyond sharing a boundary::"
msgstr "Crear nuevos ejes eliminará cualquier eje preexistente que se superponga con él más allá de compartir un límite::"

#: matplotlib.pyplot.subplot:154 of
msgid "If you do not want this behavior, use the `.Figure.add_subplot` method or the `.pyplot.axes` function instead."
msgstr "Si no desea este comportamiento, utilice el método `.Figure.add_subplot` o la función `.pyplot.axes` en su lugar."

#: matplotlib.pyplot.subplot:157 of
msgid "If no *kwargs* are passed and there exists an Axes in the location specified by *args* then that Axes will be returned rather than a new Axes being created."
msgstr "Si no se pasa ningún *kwargs* y existe un Eje en la ubicación especificada por *args*, entonces ese Eje será devuelto en lugar de un nuevo Eje que se está creando."

#: matplotlib.pyplot.subplot:161 of
msgid "If *kwargs* are passed and there exists an Axes in the location specified by *args*, the projection type is the same, and the *kwargs* match with the existing Axes, then the existing Axes is returned.  Otherwise a new Axes is created with the specified parameters.  We save a reference to the *kwargs* which we use for this comparison.  If any of the values in *kwargs* are mutable we will not detect the case where they are mutated. In these cases we suggest using `.Figure.add_subplot` and the explicit Axes API rather than the implicit pyplot API."
msgstr "Si se pasan *kwargs* y existe un ejes en la ubicación especificada por *args*, el tipo de proyección es el mismo, y los *kwargs* coinciden con los ejes existentes, luego los ejes existentes son devueltos. De lo contrario, se crean nuevos ejes con los parámetros especificados. Guardamos una referencia a los *kwargs* que utilizamos para esta comparación. Si alguno de los valores en *kwargs* es mutable no detectaremos el caso en el que son mutados. En estos casos sugerimos usar `.Figure.add_subplot` y la API de ejes explícita en lugar de la API de pyplot implícita."

#: matplotlib.pyplot.subplot:173 of
msgid "Examples"
msgstr "Ejemplos"

#: ../../../../../../../../api/_as_gen/matplotlib.pyplot.subplot.examples:2
msgid "Examples using ``matplotlib.pyplot.subplot``"
msgstr "Ejemplos usando ``matplotlib.pyplot.subplot``"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:10
msgid "Resizing axes with tight layout"
msgstr "Cambiar el tamaño de los ejes con el diseño ajustado"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:10
#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:18
msgid ":ref:`sphx_glr_gallery_subplots_axes_and_figures_demo_tight_layout.py`"
msgstr ":ref:`sphx_glr_gallery_subplots_axes_and_figures_demo_tight_layout.py`"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:29
msgid "Shared Axis"
msgstr "Eje compartido"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:29
#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:37
msgid ":ref:`sphx_glr_gallery_subplots_axes_and_figures_shared_axis_demo.py`"
msgstr ":ref:`sphx_glr_gallery_subplots_axes_and_figures_shared_axis_demo.py`"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:48
msgid "Simple Colorbar"
msgstr "Barra de color simple"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:48
#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:56
msgid ":ref:`sphx_glr_gallery_axes_grid1_simple_colorbar.py`"
msgstr ":ref:`sphx_glr_gallery_axes_grid1_simple_colorbar.py`"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:67
msgid "Pyplot tutorial"
msgstr "Tutorial Pyplot"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:67
#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:75
msgid ":ref:`sphx_glr_tutorials_introductory_pyplot.py`"
msgstr ":ref:`sphx_glr_tutorials_introductory_pyplot.py`"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:86
msgid "Constrained Layout Guide"
msgstr "Guía de diseño restringido"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:86
#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:94
msgid ":ref:`sphx_glr_tutorials_intermediate_constrainedlayout_guide.py`"
msgstr ":ref:`sphx_glr_tutorials_intermediate_constrainedlayout_guide.py`"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:105
msgid "Tight Layout guide"
msgstr "Guía de diseño ajustado"

#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:105
#: ../../api/_as_gen/matplotlib.pyplot.subplot.examples:113
msgid ":ref:`sphx_glr_tutorials_intermediate_tight_layout_guide.py`"
msgstr ":ref:`sphx_glr_tutorials_intermediate_tight_layout_guide.py`"

