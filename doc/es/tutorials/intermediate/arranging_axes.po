msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-05-22 12:12\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/tutorials/intermediate/arranging_axes.po\n"
"X-Crowdin-File-ID: 3300\n"
"Language: es_ES\n"

#: ../../tutorials/intermediate/arranging_axes.rst:13
msgid "Click :ref:`here <sphx_glr_download_tutorials_intermediate_arranging_axes.py>` to download the full example code"
msgstr "Haga click :ref:`en <sphx_glr_download_tutorials_intermediate_arranging_axes.py>` para descargar el código de ejemplo completo"

#: ../../tutorials/intermediate/arranging_axes.rst:23
msgid "Arranging multiple Axes in a Figure"
msgstr "Organizar varios ejes en una figura"

#: ../../tutorials/intermediate/arranging_axes.rst:25
msgid "Often more than one Axes is wanted on a figure at a time, usually organized into a regular grid.  Matplotlib has a variety of tools for working with grids of Axes that have evolved over the history of the library. Here we will discuss the tools we think users should use most often, the tools that underpin how Axes are organized, and mention some of the older tools."
msgstr "A menudo se quiere tener al mismo tiempo más de un Eje en una figura, generalmente organizado en una cuadrícula regular.  Matplotlib tiene una variedad de herramientas para trabajar con cuadrículas de Ejes que han evolucionado a lo largo de la historia de la biblioteca. Aquí discutiremos las herramientas que creemos que los usuarios deberían usar más a menudo, las herramientas que sustentan cómo se organizan los Ejes, y mencionaremos algunas de las herramientas más antiguas."

#: ../../tutorials/intermediate/arranging_axes.rst:33
msgid "Matplotlib uses *Axes* to refer to the drawing area that contains data, x- and y-axis, ticks, labels, title, etc. See :ref:`figure_parts` for more details.  Another term that is often used is \"subplot\", which refers to an Axes that is in a grid with other Axes objects."
msgstr "Matplotlib utiliza *Axes* (Ejes) para referirse al área de dibujo que contiene los datos, los ejes X e Y, las marcas, las etiquetas, el título, etc. Véase :ref:`figure_parts` para más detalles. Otro término que se utiliza a menudo es \"subplot\", que se refiere a un Eje que está en una cuadrícula con otros objetos Eje."

#: ../../tutorials/intermediate/arranging_axes.rst:39
msgid "Overview"
msgstr "Resumen"

#: ../../tutorials/intermediate/arranging_axes.rst:42
msgid "Create grid-shaped combinations of Axes"
msgstr "Crear combinaciones de ejes en forma de cuadrícula"

#: ../../tutorials/intermediate/arranging_axes.rst:48
msgid "`~matplotlib.pyplot.subplots`"
msgstr "`~matplotlib.pyplot.subplots`"

#: ../../tutorials/intermediate/arranging_axes.rst:45
msgid "The primary function used to create figures and a grid of Axes.  It creates and places all Axes on the figure at once, and returns an object array with handles for the Axes in the grid.  See `.Figure.subplots`."
msgstr "La función principal utilizada para crear figuras y una rejilla de Ejes. Crea y coloca todos los Ejes en la figura a la vez, y devuelve un arreglo de objetos con los manejadores de los Ejes en la retícula.  Ver `.Figure.subplots`."

#: ../../tutorials/intermediate/arranging_axes.rst:50
msgid "or"
msgstr "o"

#: ../../tutorials/intermediate/arranging_axes.rst:56
msgid "`~matplotlib.pyplot.subplot_mosaic`"
msgstr "`~matplotlib.pyplot.subplot_mosaic`"

#: ../../tutorials/intermediate/arranging_axes.rst:53
msgid "A simple way to create figures and a grid of Axes, with the added flexibility that Axes can also span rows or columns. The Axes are returned in a labelled dictionary instead of an array.  See also `.Figure.subplot_mosaic` and :doc:`/tutorials/provisional/mosaic`."
msgstr "Una forma sencilla de crear figuras y una retícula de Ejes, con la flexibilidad añadida de que los Ejes también pueden abarcar filas o columnas. Los Ejes se devuelven en un diccionario etiquetado en lugar de un arreglo.  Ver también `.Figure.subplot_mosaic` y :doc:`/tutorials/provisional/mosaic`."

#: ../../tutorials/intermediate/arranging_axes.rst:58
msgid "Sometimes it is natural to have more than one distinct group of Axes grids, in which case Matplotlib has the concept of `~.figure.SubFigure`:"
msgstr "A veces es natural tener más de un grupo distinto de retículas de ejes, en cuyo caso Matplotlib tiene el concepto de `~.figure.SubFigure`:"

#: ../../tutorials/intermediate/arranging_axes.rst:62
msgid "`~matplotlib.figure.SubFigure`"
msgstr "`~matplotlib.figure.SubFigure`"

#: ../../tutorials/intermediate/arranging_axes.rst:62
msgid "A virtual figure within a figure."
msgstr "Una figura virtual dentro de una figura."

#: ../../tutorials/intermediate/arranging_axes.rst:65
msgid "Underlying tools"
msgstr "Herramientas subyacentes"

#: ../../tutorials/intermediate/arranging_axes.rst:67
msgid "Underlying these are the concept of a `~.gridspec.GridSpec` and a `~.SubplotSpec`:"
msgstr "Detrás de esto está el concepto de `~.gridspec.GridSpec` y de `~.SubplotSpec`:"

#: ../../tutorials/intermediate/arranging_axes.rst:74
msgid "`~matplotlib.gridspec.GridSpec`"
msgstr "`~matplotlib.gridspec.GridSpec`"

#: ../../tutorials/intermediate/arranging_axes.rst:71
msgid "Specifies the geometry of the grid that a subplot will be placed. The number of rows and number of columns of the grid need to be set. Optionally, the subplot layout parameters (e.g., left, right, etc.) can be tuned."
msgstr "Especifica la geometría de la cuadrícula en la que se colocará un subplot. Es necesario establecer el número de filas y el número de columnas de la cuadrícula. Opcionalmente, se pueden ajustar los parámetros de disposición de la subtrama (por ejemplo, izquierda, derecha, etc.)."

#: ../../tutorials/intermediate/arranging_axes.rst:77
msgid "`~matplotlib.gridspec.SubplotSpec`"
msgstr "`~matplotlib.gridspec.SubplotSpec`"

#: ../../tutorials/intermediate/arranging_axes.rst:77
msgid "Specifies the location of the subplot in the given `.GridSpec`."
msgstr "Especifica la ubicación del subplot en el `.GridSpec` dado."

#: ../../tutorials/intermediate/arranging_axes.rst:80
msgid "Adding single Axes at a time"
msgstr "Añadiendo ejes individuales a la vez"

#: ../../tutorials/intermediate/arranging_axes.rst:82
msgid "The above functions create all Axes in a single function call.  It is also possible to add Axes one at a time, and this was originally how Matplotlib used to work.  Doing so is generally less elegant and flexible, though sometimes useful for interactive work or to place an Axes in a custom location:"
msgstr "Las funciones anteriores crean todos los Ejes en un solo llamado a la función. También es posible añadir ejes de uno en uno, y así era como solía funcionar Matplotlib originalmente. Hacerlo así es generalmente menos elegante y flexible, aunque a veces es útil para el trabajo interactivo o para colocar un Eje en una ubicación personalizada:"

#: ../../tutorials/intermediate/arranging_axes.rst:90
msgid "`~matplotlib.figure.Figure.add_axes`"
msgstr "`~matplotlib.figure.Figure.add_axes`"

#: ../../tutorials/intermediate/arranging_axes.rst:89
msgid "Adds a single axes at a location specified by ``[left, bottom, width, height]`` in fractions of figure width or height."
msgstr "Añade un solo eje en una ubicación especificada por ``[left, bottom, width, height]`` en fracciones del ancho o alto de la figura."

#: ../../tutorials/intermediate/arranging_axes.rst:95
msgid "`~matplotlib.pyplot.subplot` or `.Figure.add_subplot`"
msgstr "`~matplotlib.pyplot.subplot` o `.Figure.add_subplot`"

#: ../../tutorials/intermediate/arranging_axes.rst:93
msgid "Adds a single subplot on a figure, with 1-based indexing (inherited from Matlab).  Columns and rows can be spanned by specifying a range of grid cells."
msgstr "Añade una única subparcela en una figura, con una indexación basada en 1 (heredada de Matlab).  Las columnas y las filas pueden abarcarse especificando un rango de celdas de la cuadrícula."

#: ../../tutorials/intermediate/arranging_axes.rst:99
msgid "`~matplotlib.pyplot.subplot2grid`"
msgstr "`~matplotlib.pyplot.subplot2grid`"

#: ../../tutorials/intermediate/arranging_axes.rst:98
msgid "Similar to `.pyplot.subplot`, but uses 0-based indexing and two-d python slicing to choose cells."
msgstr "Similar a `.pyplot.subplot`, pero utiliza la indexación basada en 0 y el corte en dos dimensiones de Python para elegir las celdas."

#: ../../tutorials/intermediate/arranging_axes.rst:106
msgid "High-level methods for making grids"
msgstr "Métodos de alto nivel para hacer cuadrículas"

#: ../../tutorials/intermediate/arranging_axes.rst:109
#: ../../tutorials/intermediate/arranging_axes.rst:408
msgid "Basic 2x2 grid"
msgstr "Cuadrícula básica de 2x2"

#: ../../tutorials/intermediate/arranging_axes.rst:111
msgid "We can create a basic 2-by-2 grid of Axes using `~matplotlib.pyplot.subplots`.  It returns a `~matplotlib.figure.Figure` instance and an array of `~matplotlib.axes.Axes` objects.  The Axes objects can be used to access methods to place artists on the Axes; here we use `~.Axes.annotate`, but other examples could be `~.Axes.plot`, `~.Axes.pcolormesh`, etc."
msgstr "Podemos crear una cuadrícula básica de 2 por 2 ejes utilizando `~matplotlib.pyplot.subplots`.  Devuelve una instancia de `~matplotlib.figure.Figure` y un arreglo de objetos `~matplotlib.axes.Axes`.  Los objetos Axes se pueden utilizar para acceder a métodos para colocar artistas en los Axes; aquí utilizamos `~.Axes.annotate`, pero otros ejemplos podrían ser `~.Axes.plot`, `~.Axes.pcolormesh`, etc."

#: ../../tutorials/intermediate/arranging_axes.rst:148
#: ../../tutorials/intermediate/arranging_axes.rst:211
#: ../../tutorials/intermediate/arranging_axes.rst:253
#: ../../tutorials/intermediate/arranging_axes.rst:302
#: ../../tutorials/intermediate/arranging_axes.rst:350
#: ../../tutorials/intermediate/arranging_axes.rst:446
#: ../../tutorials/intermediate/arranging_axes.rst:495
#: ../../tutorials/intermediate/arranging_axes.rst:546
#: ../../tutorials/intermediate/arranging_axes.rst:603
msgid "Out:"
msgstr "Fuera:"

#: ../../tutorials/intermediate/arranging_axes.rst:159
msgid "We will annotate a lot of Axes, so lets encapsulate the annotation, rather than having that large piece of annotation code every time we need it:"
msgstr "Anotaremos muchos Ejes, así que vamos a condensar la anotación, en lugar de tener esa gran pieza de código de anotación cada vez que la necesitemos:"

#: ../../tutorials/intermediate/arranging_axes.rst:182
msgid "The same effect can be achieved with `~.pyplot.subplot_mosaic`, but the return type is a dictionary instead of an array, where the user can give the keys useful meanings.  Here we provide two lists, each list representing a row, and each element in the list a key representing the column."
msgstr "El mismo efecto se puede conseguir con `~.pyplot.subplot_mosaic`, pero el tipo de salida es un diccionario en lugar de un arreglo, donde el usuario puede dar a las claves significados útiles.  Aquí proporcionamos dos listas, cada lista representa una fila, y cada elemento de la lista una clave que representa la columna."

#: ../../tutorials/intermediate/arranging_axes.rst:223
msgid "Axes spanning rows or columns in a grid"
msgstr "Ejes que abarcan filas o columnas en una cuadrícula"

#: ../../tutorials/intermediate/arranging_axes.rst:225
msgid "Sometimes we want Axes to span rows or columns of the grid. There are actually multiple ways to accomplish this, but the most convenient is probably to use `~.pyplot.subplot_mosaic` by repeating one of the keys:"
msgstr "A veces queremos que los Ejes abarquen filas o columnas de la cuadrícula. En realidad hay múltiples formas de conseguirlo, pero lo más conveniente es probablemente utilizar `~.pyplot.subplot_mosaic` repitiendo una de las claves:"

#: ../../tutorials/intermediate/arranging_axes.rst:264
msgid "See below for the description of how to do the same thing using `~matplotlib.gridspec.GridSpec` or `~matplotlib.pyplot.subplot2grid`."
msgstr "Vea a continuación la descripción de cómo hacer lo mismo usando `~matplotlib.gridspec.GridSpec` o `~matplotlib.pyplot.subplot2grid`."

#: ../../tutorials/intermediate/arranging_axes.rst:268
msgid "Variable widths or heights in a grid"
msgstr "Anchos o alturas variables en una Cuadrícula"

#: ../../tutorials/intermediate/arranging_axes.rst:270
msgid "Both `~.pyplot.subplots` and `~.pyplot.subplot_mosaic` allow the rows in the grid to be different heights, and the columns to be different widths using the *gridspec_kw* keyword argument. Spacing parameters accepted by `~matplotlib.gridspec.GridSpec` can be passed to `~matplotlib.pyplot.subplots` and `~matplotlib.pyplot.subplot_mosaic`:"
msgstr "Tanto `~.pyplot.subplots` como `~.pyplot.subplot_mosaic` permiten que las filas de la cuadrícula tengan diferentes alturas, y que las columnas tengan diferentes anchos utilizando el argumento de la palabra clave *gridspec_kw*. Los parámetros de espaciado aceptados por `~matplotlib.gridspec.GridSpec` se pueden pasar a `~matplotlib.pyplot.subplots` y `~matplotlib.pyplot.subplot_mosaic`:"

#: ../../tutorials/intermediate/arranging_axes.rst:314
msgid "Nested Axes layouts"
msgstr "Disposición de ejes anidados"

#: ../../tutorials/intermediate/arranging_axes.rst:316
msgid "Sometimes it is helpful to have two or more grids of Axes that may not need to be related to one another.  The most simple way toin accomplish this is to use `.Figure.subfigures`.  Note that the subfigure layouts are independent, so the Axes spines in each subfigure are not necessarily aligned.  See below for a more verbose way to achieve the same effect with `~.gridspec.GridSpecFromSubplotSpec`."
msgstr "A veces es útil tener dos o más cuadrículas de Ejes que no necesitan estar relacionadas entre sí.  La forma más sencilla de conseguirlo es utilizar `.Figure.subfigures`.  Ten en cuenta que los diseños de las subfiguras son independientes, por lo que los ejes de cada subfigura no están necesariamente alineados.  Observa a continuación una manera más detallada de lograr el mismo efecto con `~.gridspec.GridSpecFromSubplotSpec`."

#: ../../tutorials/intermediate/arranging_axes.rst:361
msgid "It is also possible to nest Axes using `~.pyplot.subplot_mosaic` using nested lists.  This method does not use subfigures, like above, so lacks the ability to add per-subfigure ``suptitle`` and ``supxlabel``, etc. Rather it is a convenience wrapper around the `~.SubplotSpec.subgridspec` method described below."
msgstr "También es posible anidar ejes usando `~.pyplot.subplot_mosaic` utilizando listas anidadas.  Este método no utiliza subfiguras, como el anterior, por lo que carece de la capacidad de añadir ``suptitle`` y ``supxlabel`` por subfigura, etc. Más bien es una envoltura de conveniencia alrededor del método `~.SubplotSpec.subgridspec` descrito a continuación."

#: ../../tutorials/intermediate/arranging_axes.rst:396
msgid "Low-level and advanced grid methods"
msgstr "Métodos de cuadrícula de bajo nivel y avanzados"

#: ../../tutorials/intermediate/arranging_axes.rst:398
msgid "Internally, the arrangement of a grid of Axes is controlled by creating instances of `~.GridSpec` and `~.SubplotSpec`. *GridSpec* defines a (possibly non-uniform) grid of cells. Indexing into the *GridSpec* returns a SubplotSpec that covers one or more grid cells, and can be used to specify the location of an Axes."
msgstr "Internamente, la disposición de una cuadrícula de Ejes se controla creando instancias de `~.GridSpec` y `~.SubplotSpec`. *GridSpec* define una cuadrícula (posiblemente no uniforme) de celdas. La indexación en el *GridSpec* devuelve un SubplotSpec que cubre una o más celdas de la cuadrícula, y puede utilizarse para especificar la ubicación de un Eje."

#: ../../tutorials/intermediate/arranging_axes.rst:404
msgid "The following examples show how to use low-level methods to arrange Axes using *GridSpec* objects."
msgstr "Los siguientes ejemplos muestran cómo utilizar métodos de bajo nivel para ordenar los Ejes utilizando objetos *GridSpec*."

#: ../../tutorials/intermediate/arranging_axes.rst:410
msgid "We can accopmplish a 2x2 grid in the same manner as ``plt.subplots(2, 2)``:"
msgstr "Podemos acceder a una Cuadrícula de 2x2 de la misma manera que ``plt.subplots(2, 2)``:"

#: ../../tutorials/intermediate/arranging_axes.rst:458
msgid "Axes spanning rows or grids in a grid"
msgstr "Ejes que abarcan filas o cuadrículas en una cuadrícula"

#: ../../tutorials/intermediate/arranging_axes.rst:460
msgid "We can index the *spec* array using `NumPy slice syntax <https://numpy.org/doc/stable/reference/arrays.indexing.html>`_ and the new Axes will span the slice.  This would be the same as ``fig, axd = plt.subplot_mosaic([['ax0', 'ax0'], ['ax1', 'ax2']], ...)``:"
msgstr "Podemos indexar el arreglo *spec* usando `NumPy slice syntax <https://numpy.org/doc/stable/reference/arrays.indexing.html>`_ y los nuevos Axes abarcarán el slice.  Esto sería lo mismo que ``fig, axd = plt.subplot_mosaic(['ax0', 'ax0'], ['ax1', 'ax2'], ...)``:"

#: ../../tutorials/intermediate/arranging_axes.rst:507
msgid "Manual adjustments to a *GridSpec* layout"
msgstr "Ajustes manuales a un diseño *GridSpec*"

#: ../../tutorials/intermediate/arranging_axes.rst:509
msgid "When a  *GridSpec* is explicitly used, you can adjust the layout parameters of subplots that are created from the  *GridSpec*.  Note this option is not compatible with ``constrained_layout`` or `.Figure.tight_layout` which both ignore *left* and *right* and adjust subplot sizes to fill the figure.  Usually such manual placement requires iterations to make the Axes tick labels not overlap the Axes."
msgstr "Cuando se utiliza explícitamente un *GridSpec*, puede ajustar los parámetros de disposición de los subplots que se crean a partir del *GridSpec*.  Ten en cuenta que esta opción no es compatible con ``constrained_layout`` o `.Figure.tight_layout` que ignoran *left* y *right* y ajustan el tamaño de las subtramas para llenar la figura.  Normalmente esta colocación manual requiere iteraciones para que las etiquetas de los ejes no se superpongan a los ejes."

#: ../../tutorials/intermediate/arranging_axes.rst:516
msgid "These spacing parameters can also be passed to `~.pyplot.subplots` and `~.pyplot.subplot_mosaic` as the *gridspec_kw* argument."
msgstr "Estos parámetros de espaciado también pueden pasarse a `~.pyplot.subplots` y `~.pyplot.subplot_mosaic` como argumento *gridspec_kw*."

#: ../../tutorials/intermediate/arranging_axes.rst:558
msgid "Nested layouts with SubplotSpec"
msgstr "Diseños anidados con SubplotSpec"

#: ../../tutorials/intermediate/arranging_axes.rst:560
msgid "You can create nested layout similar to `~.Figure.subfigures` using `~.gridspec.SubplotSpec.subgridspec`.  Here the Axes spines *are* aligned."
msgstr "Puedes crear un diseño anidado similar a `~.Figure.subfigures` usando `~.gridspec.SubplotSpec.subgridspec`.  Aquí las espinas de los ejes *están* alineadas."

#: ../../tutorials/intermediate/arranging_axes.rst:564
msgid "Note this is also available from the more verbose `.gridspec.GridSpecFromSubplotSpec`."
msgstr "Ten en cuenta que esto también está disponible en forma más detallada desde el `.gridspec.GridSpecFromSubplotSpec`."

#: ../../tutorials/intermediate/arranging_axes.rst:614
msgid "Here's a more sophisticated example of nested *GridSpec*: We create an outer 4x4 grid with each cell containing an inner 3x3 grid of Axes. We outline the outer 4x4 grid by hiding appropriate spines in each of the inner 3x3 grids."
msgstr "Aquí tenemos un ejemplo más sofisticado de *GridSpec* anidado: Creamos una Cuadrícula exterior de 4x4 con cada celda que contiene una cuadrícula interior de 3x3 de Ejes. Contorneamos la Cuadrícula 4x4 exterior ocultando las espinas apropiadas en cada una de las cuadrículas 3x3 interiores."

#: ../../tutorials/intermediate/arranging_axes.rst:665
msgid "More reading"
msgstr "Más lectura"

#: ../../tutorials/intermediate/arranging_axes.rst:667
msgid "More details about :doc:`subplot mosaic </tutorials/provisional/mosaic>`."
msgstr "Más detalles sobre :doc:`subplot mosaico </tutorials/provisional/mosaic>`."

#: ../../tutorials/intermediate/arranging_axes.rst:668
msgid "More details about :doc:`constrained layout </tutorials/intermediate/constrainedlayout_guide>`, used to align spacing in most of these examples."
msgstr "Más detalles sobre :doc:`disposición restringida </tutorials/intermediate/constrainedlayout_guide>`, utilizada para alinear el espaciado en la mayoría de estos ejemplos."

#: ../../tutorials/intermediate/arranging_axes.rst:672
msgid "References"
msgstr "Referencias"

#: ../../tutorials/intermediate/arranging_axes.rst:674
msgid "The use of the following functions, methods, classes and modules is shown in this example:"
msgstr "En este ejemplo se muestra el uso de las siguientes funciones, métodos, clases y módulos:"

#: ../../tutorials/intermediate/arranging_axes.rst:677
msgid "`matplotlib.pyplot.subplots`"
msgstr "`matplotlib.pyplot.subplots`"

#: ../../tutorials/intermediate/arranging_axes.rst:678
msgid "`matplotlib.pyplot.subplot_mosaic`"
msgstr "`matplotlib.pyplot.subplot_mosaic`"

#: ../../tutorials/intermediate/arranging_axes.rst:679
msgid "`matplotlib.figure.Figure.add_gridspec`"
msgstr "`matplotlib.figure.Figure.add_gridspec`"

#: ../../tutorials/intermediate/arranging_axes.rst:680
msgid "`matplotlib.figure.Figure.add_subplot`"
msgstr "`matplotlib.figure.Figure.add_subplot`"

#: ../../tutorials/intermediate/arranging_axes.rst:681
msgid "`matplotlib.gridspec.GridSpec`"
msgstr "`matplotlib.gridspec.GridSpec`"

#: ../../tutorials/intermediate/arranging_axes.rst:682
msgid "`matplotlib.gridspec.SubplotSpec.subgridspec`"
msgstr "`matplotlib.gridspec.SubplotSpec.subgridspec`"

#: ../../tutorials/intermediate/arranging_axes.rst:683
msgid "`matplotlib.gridspec.GridSpecFromSubplotSpec`"
msgstr "`matplotlib.gridspec.GridSpecFromSubplotSpec`"

#: ../../tutorials/intermediate/arranging_axes.rst:688
msgid "**Total running time of the script:** ( 0 minutes  9.936 seconds)"
msgstr "**Tiempo total de ejecución del script:** ( 0 minutos 9.936 segundos)"

#: ../../tutorials/intermediate/arranging_axes.rst:703
msgid ":download:`Download Python source code: arranging_axes.py <arranging_axes.py>`"
msgstr ":download:`Descargar código fuente de Python: arranging_axes.py <arranging_axes.py>`"

#: ../../tutorials/intermediate/arranging_axes.rst:709
msgid ":download:`Download Jupyter notebook: arranging_axes.ipynb <arranging_axes.ipynb>`"
msgstr ":download:`Descargar Jupyter notebook: arranging_axes.ipynb <arranging_axes.ipynb>`"

#: ../../tutorials/intermediate/arranging_axes.rst:716
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr "Palabras clave: ejemplo de código matplotlib, codex, python plot, pyplot `Galería generada por Sphinx-Gallery"

