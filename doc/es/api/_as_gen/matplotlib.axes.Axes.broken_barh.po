msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:49\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.broken_barh.po\n"
"X-Crowdin-File-ID: 366\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.broken_barh.rst:2
msgid "matplotlib.axes.Axes.broken\\_barh"
msgstr "matplotlib.axes.Ejes.broken\\_barh"

#: matplotlib.axes._axes.Axes.broken_barh:2 of
msgid "Plot a horizontal sequence of rectangles."
msgstr "Trazar una secuencia horizontal de rectángulos."

#: matplotlib.axes._axes.Axes.broken_barh:4 of
msgid "A rectangle is drawn for each element of *xranges*. All rectangles have the same vertical position and size defined by *yrange*."
msgstr "Se dibuja un rectángulo para cada elemento de *xranges*. Todos los rectángulos tienen la misma posición y tamaño vertical definidos por *yrange*."

#: matplotlib.axes._axes.Axes.broken_barh:7 of
msgid "This is a convenience function for instantiating a `.BrokenBarHCollection`, adding it to the Axes and autoscaling the view."
msgstr "Esta es una función de conveniencia para instanciar un `.BrokenBarHCollection`, añadiéndola a los ejes y autoescalando la vista."

#: matplotlib.axes._axes.Axes.broken_barh of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.axes._axes.Axes.broken_barh:16 of
msgid "**xranges** : sequence of tuples (*xmin*, *xwidth*)"
msgstr "**xranges** : secuencia de tubos (*xmin*, *xwidth*)"

#: of
msgid "sequence of tuples ("
msgstr "secuencia de tubos ("

#: matplotlib.axes._axes.Axes.broken_barh:14 of
msgid "The x-positions and extends of the rectangles. For each tuple (*xmin*, *xwidth*) a rectangle is drawn from *xmin* to *xmin* + *xwidth*."
msgstr "Las posiciones x y extensiones de los rectángulos. Para cada tupla (*xmin*, *xwidth*) un rectángulo se dibuja de *xmin* a *xmin* + *xwidth*."

#: matplotlib.axes._axes.Axes.broken_barh:19 of
msgid "**yrange** : (*ymin*, *yheight*)"
msgstr "**yrange** : (*ymin*, *yheight*)"

#: of
msgid "("
msgstr "("

#: matplotlib.axes._axes.Axes.broken_barh:19 of
msgid "The y-position and extend for all the rectangles."
msgstr "La posición y se extiende para todos los rectángulos."

#: matplotlib.axes._axes.Axes.broken_barh of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.axes._axes.Axes.broken_barh:26 of
msgid "`~.collections.BrokenBarHCollection`"
msgstr "`~.collections.BrokenBarHCollection`"

#: matplotlib.axes._axes.Axes.broken_barh of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.axes._axes.Axes.broken_barh:32 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.axes._axes.Axes.broken_barh:31 of
msgid "If given, all parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception)."
msgstr "Si se dan, todos los parámetros también aceptan una cadena ``s``, que se interpreta como ``data[s]`` (a menos que se produzca una excepción)."

#: matplotlib.axes._axes.Axes.broken_barh:103 of
msgid "**\\*\\*kwargs** : `.BrokenBarHCollection` properties"
msgstr "**\\*\\*kwargs** : propiedades `.BrokenBarHCollection`"

#: matplotlib.axes._axes.Axes.broken_barh:102 of
msgid "BrokenBarHCollection properties"
msgstr "Propiedades de BrokenBarHCollection"

#: matplotlib.axes._axes.Axes.broken_barh:35 of
msgid "Each *kwarg* can be either a single argument applying to all rectangles, e.g.::"
msgstr "Cada *kwarg* puede ser un único argumento que se aplique a todos los rectángulos, por ejemplo:"

#: matplotlib.axes._axes.Axes.broken_barh:40 of
msgid "or a sequence of arguments over which is cycled, e.g.::"
msgstr "o una secuencia de argumentos sobre los cuales es cíclica, p. ej.::"

#: matplotlib.axes._axes.Axes.broken_barh:44 of
msgid "would create interleaving black and blue rectangles."
msgstr "crearía rectángulos negros y azules interactivos."

#: matplotlib.axes._axes.Axes.broken_barh:46 of
msgid "Supported keywords:"
msgstr "Palabras clave soportadas:"

#: matplotlib.axes._axes.Axes.broken_barh:52 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.axes._axes.Axes.broken_barh:52 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.axes._axes.Axes.broken_barh:54 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.axes._axes.Axes.broken_barh:54 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.axes._axes.Axes.broken_barh:55 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"

#: matplotlib.axes._axes.Axes.broken_barh:55 of
msgid "array-like or scalar or None"
msgstr "como matriz o escalar o ninguno"

#: matplotlib.axes._axes.Axes.broken_barh:56 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.axes._axes.Axes.broken_barh:56
#: matplotlib.axes._axes.Axes.broken_barh:62
#: matplotlib.axes._axes.Axes.broken_barh:71
#: matplotlib.axes._axes.Axes.broken_barh:83
#: matplotlib.axes._axes.Axes.broken_barh:92 of
msgid "bool"
msgstr "bool"

#: matplotlib.axes._axes.Axes.broken_barh:57 of
msgid ":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` or aa or antialiaseds"
msgstr ":meth:`antialias <matplotlib.collections.Collection.set_antialiased>` o aa o antialiaseds"

#: matplotlib.axes._axes.Axes.broken_barh:57 of
msgid "bool or list of bools"
msgstr "libro o lista de bools"

#: matplotlib.axes._axes.Axes.broken_barh:58 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"

#: matplotlib.axes._axes.Axes.broken_barh:58 of
msgid "array-like or None"
msgstr "tipo array o ninguno"

#: matplotlib.axes._axes.Axes.broken_barh:59 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"

#: matplotlib.axes._axes.Axes.broken_barh:59 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.axes._axes.Axes.broken_barh:60 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"

#: matplotlib.axes._axes.Axes.broken_barh:60 of
msgid "(vmin: float, vmax: float)"
msgstr "(vmin: flotante, vmax: flotante)"

#: matplotlib.axes._axes.Axes.broken_barh:61 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.axes._axes.Axes.broken_barh:61 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.axes._axes.Axes.broken_barh:62 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.axes._axes.Axes.broken_barh:63 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.axes._axes.Axes.broken_barh:63 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.axes._axes.Axes.broken_barh:64 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"

#: matplotlib.axes._axes.Axes.broken_barh:64 of
msgid "`.Colormap` or str or None"
msgstr "`.Colormap` o str o ninguno"

#: matplotlib.axes._axes.Axes.broken_barh:65 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ":meth:`color <matplotlib.collections.Collection.set_color>`"

#: matplotlib.axes._axes.Axes.broken_barh:65 of
msgid "color or list of rgba tuples"
msgstr "color o lista de tubos rgba"

#: matplotlib.axes._axes.Axes.broken_barh:66 of
msgid ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec or edgecolors"
msgstr ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` o ec o aristas colores"

#: matplotlib.axes._axes.Axes.broken_barh:66 of
msgid "color or list of colors or 'face'"
msgstr "color o lista de colores o 'cara'"

#: matplotlib.axes._axes.Axes.broken_barh:67 of
msgid ":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or facecolors or fc"
msgstr ":meth:`carecolor <matplotlib.collections.Collection.set_facecolor>` o colores de caras o fc"

#: matplotlib.axes._axes.Axes.broken_barh:67 of
msgid "color or list of colors"
msgstr "color o lista de colores"

#: matplotlib.axes._axes.Axes.broken_barh:68 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.axes._axes.Axes.broken_barh:68 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.axes._axes.Axes.broken_barh:69 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.axes._axes.Axes.broken_barh:69
#: matplotlib.axes._axes.Axes.broken_barh:88 of
msgid "str"
msgstr "str"

#: matplotlib.axes._axes.Axes.broken_barh:70 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ":meth:`colgante <matplotlib.collections.Collection.set_hatch>`"

#: matplotlib.axes._axes.Axes.broken_barh:70 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"

#: matplotlib.axes._axes.Axes.broken_barh:71 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.axes._axes.Axes.broken_barh:72 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"

#: matplotlib.axes._axes.Axes.broken_barh:72 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.axes._axes.Axes.broken_barh:73 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.axes._axes.Axes.broken_barh:73 of
msgid "object"
msgstr "object"

#: matplotlib.axes._axes.Axes.broken_barh:74 of
msgid ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or dashes or linestyles or ls"
msgstr ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` o guiones o estilos de línea o ls"

#: matplotlib.axes._axes.Axes.broken_barh:74 of
msgid "str or tuple or list thereof"
msgstr "str o tuple o lista de ellos"

#: matplotlib.axes._axes.Axes.broken_barh:75 of
msgid ":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or linewidths or lw"
msgstr ":meth:`ancho de línea <matplotlib.collections.Collection.set_linewidth>o ancho de línea o lw"

#: matplotlib.axes._axes.Axes.broken_barh:75 of
msgid "float or list of floats"
msgstr "flotante o lista de flotantes"

#: matplotlib.axes._axes.Axes.broken_barh:76 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"

#: matplotlib.axes._axes.Axes.broken_barh:76 of
msgid "`.Normalize` or None"
msgstr "`.normalize` o Ninguno"

#: matplotlib.axes._axes.Axes.broken_barh:77 of
msgid ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"
msgstr ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"

#: matplotlib.axes._axes.Axes.broken_barh:77
#: matplotlib.axes._axes.Axes.broken_barh:87 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.axes._axes.Axes.broken_barh:78 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"

#: matplotlib.axes._axes.Axes.broken_barh:78 of
msgid "(N, 2) or (2,) array-like"
msgstr "((N, 2) o (2,) array-like"

#: matplotlib.axes._axes.Axes.broken_barh:79 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.axes._axes.Axes.broken_barh:79 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.axes._axes.Axes.broken_barh:80 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`rutas <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.axes._axes.Axes.broken_barh:80
#: matplotlib.axes._axes.Axes.broken_barh:90 of
msgid "list of array-like"
msgstr "lista de matriz"

#: matplotlib.axes._axes.Axes.broken_barh:81 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.axes._axes.Axes.broken_barh:81 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.axes._axes.Axes.broken_barh:82 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"

#: matplotlib.axes._axes.Axes.broken_barh:82
#: matplotlib.axes._axes.Axes.broken_barh:93 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.axes._axes.Axes.broken_barh:83 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.axes._axes.Axes.broken_barh:84 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ":meth:`tamaños <matplotlib.collections._CollectionWithSizes.set_sizes>`"

#: matplotlib.axes._axes.Axes.broken_barh:84 of
msgid "ndarray or None"
msgstr "ndarray o ninguno"

#: matplotlib.axes._axes.Axes.broken_barh:85 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.axes._axes.Axes.broken_barh:85 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.axes._axes.Axes.broken_barh:86 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.axes._axes.Axes.broken_barh:86 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.axes._axes.Axes.broken_barh:87 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.axes._axes.Axes.broken_barh:88 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.axes._axes.Axes.broken_barh:89 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ":meth:`urls <matplotlib.collections.Collection.set_urls>`"

#: matplotlib.axes._axes.Axes.broken_barh:89 of
msgid "list of str or None"
msgstr "lista de str o ninguno"

#: matplotlib.axes._axes.Axes.broken_barh:90 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"

#: matplotlib.axes._axes.Axes.broken_barh:91 of
msgid ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"

#: matplotlib.axes._axes.Axes.broken_barh:91 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.axes._axes.Axes.broken_barh:92 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.axes._axes.Axes.broken_barh:93 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.broken_barh.examples:2
msgid "Examples using ``matplotlib.axes.Axes.broken_barh``"
msgstr "Ejemplos usando ``matplotlib.axes.Axes.broken_barh``"

#: ../../api/_as_gen/matplotlib.axes.Axes.broken_barh.examples:10
msgid "Broken Barh"
msgstr "Barra discontinua"

#: ../../api/_as_gen/matplotlib.axes.Axes.broken_barh.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.broken_barh.examples:18
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_broken_barh.py`"
msgstr ":ref:`sphx_glr_gallery_lines_bars_and_markers_broken_barh.py`"

