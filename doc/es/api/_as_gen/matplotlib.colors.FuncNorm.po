msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 13:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.colors.FuncNorm.po\n"
"X-Crowdin-File-ID: 944\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.colors.FuncNorm.rst:2
msgid "matplotlib.colors.FuncNorm"
msgstr "matplotlib.colors.FuncNorm"

#: matplotlib.colors.FuncNorm:1 of
msgid "Bases: :py:class:`matplotlib.colors.FuncNorm`"
msgstr "Bases: :py:class:`matplotlib.colors.FuncNorm`"

#: matplotlib.colors.FuncNorm:2 of
msgid "Arbitrary normalization using functions for the forward and inverse."
msgstr "Normalización arbitraria utilizando funciones para el futuro y la inversión."

#: matplotlib.colors.FuncNorm
#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__ of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.colors.FuncNorm:13 of
msgid "**functions**"
msgstr "**funciones**"

#: of
msgid "(callable, callable)"
msgstr "(llamable, llamable)"

#: matplotlib.colors.FuncNorm:8 of
msgid "two-tuple of the forward and inverse functions for the normalization. The forward function must be monotonic."
msgstr "Dos tubos de las funciones hacia adelante e inversa para la normalización, la función hacia delante debe ser monotónica."

#: matplotlib.colors.FuncNorm:11 of
msgid "Both functions must have the signature ::"
msgstr "Ambas funciones deben tener la firma ::"

#: matplotlib.colors.FuncNorm:18 matplotlib.colors.FuncNorm:54 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: of
msgid "float or None"
msgstr "float o None"

#: matplotlib.colors.FuncNorm:16 matplotlib.colors.FuncNorm:52 of
msgid "If *vmin* and/or *vmax* is not given, they are initialized from the minimum and maximum value, respectively, of the first input processed; i.e., ``__call__(A)`` calls ``autoscale_None(A)``."
msgstr "Si no se da *vmin* y/o *vmax*, se inicializan a partir del valor mínimo y máximo, respectivamente, del primer proceso de entrada; i. ., ``__call__(A)`` llama a ``autoscale_deleta(A)``."

#: matplotlib.colors.FuncNorm:40 matplotlib.colors.FuncNorm:71
#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:21 of
msgid "**clip**"
msgstr "**clip**"

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.colors.FuncNorm:21 matplotlib.colors.FuncNorm:57 of
msgid "If ``True`` values falling outside the range ``[vmin, vmax]``, are mapped to 0 or 1, whichever is closer, and masked values are set to 1.  If ``False`` masked values remain masked."
msgstr "Si los valores ``True`` que caen fuera del rango ``[vmin, vmax]``, son asignados a 0 o 1, cualquiera que esté más cerca, y los valores enmascarados se establecen a 1. Si los valores enmascarados ``False`` permanecen enmascarados."

#: matplotlib.colors.FuncNorm:25 matplotlib.colors.FuncNorm:61 of
msgid "Clipping silently defeats the purpose of setting the over, under, and masked colors in a colormap, so it is likely to lead to surprises; therefore the default is ``clip=False``."
msgstr "Recortar silenciosamente derrota el propósito de poner los colores alto, bajo y enmascarados en un mapa de color, por lo que es probable que conduzca a sorpresas; por lo tanto, el valor por defecto es ``clip=False``."

#: matplotlib.colors.FuncNorm:74
#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:24 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.colors.FuncNorm:75 of
msgid "Returns 0 if ``vmin == vmax``."
msgstr "Devuelve 0 si ``vmin == vmax``."

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:2 of
msgid "Normalize *value* data in the ``[vmin, vmax]`` interval into the ``[0.0, 1.0]`` interval and return it."
msgstr "Normaliza los datos de *valor* en el intervalo ``[vmin, vmax]`` en el intervalo ``[0.0, 1.0]`` y devuelve."

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:9 of
msgid "**value**"
msgstr "**valor**"

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:9 of
msgid "Data to normalize."
msgstr "Datos a normalizar."

#: of
msgid "bool"
msgstr "bool"

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:12 of
msgid "If ``None``, defaults to ``self.clip`` (which defaults to ``False``)."
msgstr "Si ``ninguno``, el valor predeterminado es ``self.clip`` (que por defecto es ``False``)."

#: matplotlib.colors.make_norm_from_scale.<locals>.Norm.__call__:25 of
msgid "If not already initialized, ``self.vmin`` and ``self.vmax`` are initialized using ``self.autoscale_None(value)``."
msgstr "Si no se ha inicializado, ``self.vmin`` y ``self.vmax`` son inicializados usando ``self.autoscale_ichard (value)``."

#: ../../../../../../../../api/_as_gen/matplotlib.colors.FuncNorm.examples:2
msgid "Examples using ``matplotlib.colors.FuncNorm``"
msgstr "Ejemplos usando ``matplotlib.colors.FuncNorm``"

#: ../../api/_as_gen/matplotlib.colors.FuncNorm.examples:10
msgid "Colormap Normalization"
msgstr "Normalización del mapa de colores"

#: ../../api/_as_gen/matplotlib.colors.FuncNorm.examples:10
#: ../../api/_as_gen/matplotlib.colors.FuncNorm.examples:18
msgid ":ref:`sphx_glr_tutorials_colors_colormapnorms.py`"
msgstr ":ref:`sphx_glr_tutorials_colors_colormapnorms.py`"

