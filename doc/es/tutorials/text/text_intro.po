msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-05-30 00:49\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/tutorials/text/text_intro.po\n"
"X-Crowdin-File-ID: 3344\n"
"Language: es_ES\n"

#: ../../tutorials/text/text_intro.rst:13
msgid "Click :ref:`here <sphx_glr_download_tutorials_text_text_intro.py>` to download the full example code"
msgstr "Haz clic en :ref:`aquí <sphx_glr_download_tutorials_text_intro.py>` para descargar el código de ejemplo completo"

#: ../../tutorials/text/text_intro.rst:23
msgid "Text in Matplotlib Plots"
msgstr "Texto en los gráficos de Matplotlib"

#: ../../tutorials/text/text_intro.rst:25
msgid "Introduction to plotting and working with text in Matplotlib."
msgstr "Introducción al trazado y trabajo con texto en Matplotlib."

#: ../../tutorials/text/text_intro.rst:27
msgid "Matplotlib has extensive text support, including support for mathematical expressions, truetype support for raster and vector outputs, newline separated text with arbitrary rotations, and unicode support."
msgstr "Matplotlib tiene un amplio soporte de texto, incluyendo soporte para expresiones matemáticas, soporte truetype para salidas raster y vectoriales, texto separado por nueva línea con rotaciones arbitrarias y soporte unicode."

#: ../../tutorials/text/text_intro.rst:32
msgid "Because it embeds fonts directly in output documents, e.g., for postscript or PDF, what you see on the screen is what you get in the hardcopy. `FreeType <https://www.freetype.org/>`_ support produces very nice, antialiased fonts, that look good even at small raster sizes.  Matplotlib includes its own :mod:`matplotlib.font_manager` (thanks to Paul Barrett), which implements a cross platform, `W3C <https://www.w3.org/>`_ compliant font finding algorithm."
msgstr "Como incrusta las fuentes directamente en los documentos de salida, por ejemplo, para postscript o PDF, lo que se ve en la pantalla es lo que se obtiene en la copia impresa. El soporte de `FreeType <https://www.freetype.org/>`_ genera fuentes muy bonitas, con antialiasing, que se ven bien incluso en tamaños de trama pequeños. Matplotlib incluye su propio :mod:`matplotlib.font_manager` (gracias a Paul Barrett), que implementa un algoritmo de búsqueda de fuentes compatible con el W3C <https://www.w3.org/>`_."

#: ../../tutorials/text/text_intro.rst:41
msgid "The user has a great deal of control over text properties (font size, font weight, text location and color, etc.) with sensible defaults set in the :doc:`rc file </tutorials/introductory/customizing>`. And significantly, for those interested in mathematical or scientific figures, Matplotlib implements a large number of TeX math symbols and commands, supporting :doc:`mathematical expressions </tutorials/text/mathtext>` anywhere in your figure."
msgstr "El usuario tiene un gran control sobre las propiedades del texto (tamaño de la fuente, peso de la fuente, ubicación y color del texto, etc.) con valores predeterminados sensibles establecidos en el archivo :doc:`rc </tutorials/introductory/customizing>`. Y significativamente, para aquellos interesados en figuras matemáticas o científicas, Matplotlib implementa un gran número de símbolos y comandos matemáticos de TeX, soportando :doc:`expresiones matemáticas </tutorials/text/mathtext>` en cualquier parte de su figura."

#: ../../tutorials/text/text_intro.rst:51
msgid "Basic text commands"
msgstr "Comandos básicos de texto"

#: ../../tutorials/text/text_intro.rst:53
msgid "The following commands are used to create text in the pyplot interface and the object-oriented API:"
msgstr "Los siguientes comandos se utilizan para crear texto en la interfaz de pyplot y la API orientada a objetos:"

#: ../../tutorials/text/text_intro.rst:57
msgid "`.pyplot` API"
msgstr "API `.pyplot`"

#: ../../tutorials/text/text_intro.rst:57
msgid "OO API"
msgstr "API OO"

#: ../../tutorials/text/text_intro.rst:57
msgid "description"
msgstr "descripción"

#: ../../tutorials/text/text_intro.rst:59
msgid "`~.pyplot.text`"
msgstr "`~.pyplot.text`"

#: ../../tutorials/text/text_intro.rst:59
msgid "`~.Axes.text`"
msgstr "`~.Axes.text`"

#: ../../tutorials/text/text_intro.rst:59
msgid "Add text at an arbitrary location of the `~matplotlib.axes.Axes`."
msgstr "Añade el texto en una ubicación arbitraria del `~matplotlib.axes.Axes`."

#: ../../tutorials/text/text_intro.rst:62
msgid "`~.pyplot.annotate`"
msgstr "`~.pyplot.annotate`"

#: ../../tutorials/text/text_intro.rst:62
msgid "`~.Axes.annotate`"
msgstr "`~.pyplot.annotate`"

#: ../../tutorials/text/text_intro.rst:62
msgid "Add an annotation, with an optional arrow, at an arbitrary location of the `~matplotlib.axes.Axes`."
msgstr "Añade una anotación, con una flecha opcional, en una ubicación arbitraria del `~matplotlib.axes.Axes`."

#: ../../tutorials/text/text_intro.rst:66
msgid "`~.pyplot.xlabel`"
msgstr "`~.pyplot.xlabel`"

#: ../../tutorials/text/text_intro.rst:66
msgid "`~.Axes.set_xlabel`"
msgstr "`~.Axes.set_xlabel`"

#: ../../tutorials/text/text_intro.rst:66
msgid "Add a label to the `~matplotlib.axes.Axes`\\'s x-axis."
msgstr "Añade una etiqueta al eje x de `~matplotlib.axes.Axes`\\'s."

#: ../../tutorials/text/text_intro.rst:69
msgid "`~.pyplot.ylabel`"
msgstr "`~.pyplot.ylabel`"

#: ../../tutorials/text/text_intro.rst:69
msgid "`~.Axes.set_ylabel`"
msgstr "`~.Axes.set_ylabel`"

#: ../../tutorials/text/text_intro.rst:69
msgid "Add a label to the `~matplotlib.axes.Axes`\\'s y-axis."
msgstr "Añade una etiqueta al eje Y de `~matplotlib.axes.Axes`."

#: ../../tutorials/text/text_intro.rst:72
msgid "`~.pyplot.title`"
msgstr "`~.pyplot.title`"

#: ../../tutorials/text/text_intro.rst:72
msgid "`~.Axes.set_title`"
msgstr "`~.Axes.set_title`"

#: ../../tutorials/text/text_intro.rst:72
msgid "Add a title to the `~matplotlib.axes.Axes`."
msgstr "Añadir un título a la `~matplotlib.axes.Axes`."

#: ../../tutorials/text/text_intro.rst:75
msgid "`~.pyplot.figtext`"
msgstr "`~.pyplot.figtext`"

#: ../../tutorials/text/text_intro.rst:75
msgid "`~.Figure.text`"
msgstr "`~.Figure.text`"

#: ../../tutorials/text/text_intro.rst:75
msgid "Add text at an arbitrary location of the `.Figure`."
msgstr "Añadir texto en una ubicación arbitraria de la `.Figure`."

#: ../../tutorials/text/text_intro.rst:78
msgid "`~.pyplot.suptitle`"
msgstr "`~.pyplot.suptitle`"

#: ../../tutorials/text/text_intro.rst:78
msgid "`~.Figure.suptitle`"
msgstr "`~.Figure.suptitle`"

#: ../../tutorials/text/text_intro.rst:78
msgid "Add a title to the `.Figure`."
msgstr "Añade un título a la `.Figura`."

#: ../../tutorials/text/text_intro.rst:81
msgid "All of these functions create and return a `.Text` instance, which can be configured with a variety of font and other properties.  The example below shows all of these commands in action, and more detail is provided in the sections that follow."
msgstr "Todas estas funciones crean y devuelven una instancia `.Text`, que puede ser configurada con una variedad de fuentes y otras propiedades.  El siguiente ejemplo muestra todos estos comandos en acción, y se proporcionan más detalles en las secciones que siguen."

#: ../../tutorials/text/text_intro.rst:141
msgid "Labels for x- and y-axis"
msgstr "Etiquetas para los ejes x e y"

#: ../../tutorials/text/text_intro.rst:143
msgid "Specifying the labels for the x- and y-axis is straightforward, via the `~matplotlib.axes.Axes.set_xlabel` and `~matplotlib.axes.Axes.set_ylabel` methods."
msgstr "La especificación de las etiquetas para los ejes X e Y es sencilla, mediante los métodos `~matplotlib.axes.Axes.set_xlabel` y `~matplotlib.axes.Axes.set_ylabel`."

#: ../../tutorials/text/text_intro.rst:180
msgid "The x- and y-labels are automatically placed so that they clear the x- and y-ticklabels.  Compare the plot below with that above, and note the y-label is to the left of the one above."
msgstr "Las etiquetas x e y se colocan automáticamente de forma que se despejen las etiquetas x e y.  Compara el gráfico de abajo con el de arriba, y observa que la etiqueta y está a la izquierda de la de arriba."

#: ../../tutorials/text/text_intro.rst:211
msgid "If you want to move the labels, you can specify the *labelpad* keyword argument, where the value is points (1/72\", the same unit used to specify fontsizes)."
msgstr "Si quieres mover las etiquetas, puedes especificar el argumento de la palabra clave *labelpad*, donde el valor es puntos (1/72\", la misma unidad que se utiliza para especificar los tamaños de las fuentes)."

#: ../../tutorials/text/text_intro.rst:242
msgid "Or, the labels accept all the `.Text` keyword arguments, including *position*, via which we can manually specify the label positions.  Here we put the xlabel to the far left of the axis.  Note, that the y-coordinate of this position has no effect - to adjust the y-position we need to use the *labelpad* keyword argument."
msgstr "O bien, las etiquetas aceptan todos los argumentos de la palabra clave `.Text`, incluyendo *posición*, a través de la cual podemos especificar manualmente las posiciones de las etiquetas.  Aquí ponemos la etiqueta x en el extremo izquierdo del eje.  Ten en cuenta que la coordenada y de esta posición no tiene ningún efecto - para ajustar la posición y necesitamos utilizar el argumento de la palabra clave *labelpad*."

#: ../../tutorials/text/text_intro.rst:275
msgid "All the labelling in this tutorial can be changed by manipulating the `matplotlib.font_manager.FontProperties` method, or by named keyword arguments to `~matplotlib.axes.Axes.set_xlabel`"
msgstr "Todo el etiquetado de este tutorial se puede cambiar manipulando el método `matplotlib.font_manager.FontProperties`, o mediante argumentos de palabras clave con nombre a `~matplotlib.axes.Axes.set_xlabel`"

#: ../../tutorials/text/text_intro.rst:313
msgid "Finally, we can use native TeX rendering in all text objects and have multiple lines:"
msgstr "Por último, podemos utilizar el renderizado nativo de TeX en todos los objetos de texto y tener varias líneas:"

#: ../../tutorials/text/text_intro.rst:344
msgid "Titles"
msgstr "Titulos"

#: ../../tutorials/text/text_intro.rst:346
msgid "Subplot titles are set in much the same way as labels, but there is the *loc* keyword arguments that can change the position and justification from the default value of ``loc=center``."
msgstr "Los títulos de las subtramas se establecen de forma muy similar a las etiquetas, pero existe la palabra clave *loc* como argumento que puede cambiar la posición y la justificación del valor por defecto de ``loc=center``."

#: ../../tutorials/text/text_intro.rst:376
msgid "Vertical spacing for titles is controlled via :rc:`axes.titlepad`, which defaults to 5 points.  Setting to a different value moves the title."
msgstr "El espaciado vertical de los títulos se controla mediante :rc:`axes.titlepad`, que por defecto es de 5 puntos.  Si se ajusta a un valor diferente, el título se desplaza."

#: ../../tutorials/text/text_intro.rst:406
msgid "Ticks and ticklabels"
msgstr "Marcadores y etiquetas"

#: ../../tutorials/text/text_intro.rst:408
msgid "Placing ticks and ticklabels is a very tricky aspect of making a figure. Matplotlib does its best to accomplish the task automatically, but it also offers a very flexible framework for determining the choices for tick locations, and how they are labelled."
msgstr "La colocación de los marcadores y las etiquetas es un aspecto muy complicado de hacer una figura. Matplotlib hace todo lo posible para llevar a cabo la tarea de forma automática, pero también ofrece un framework muy flexible para determinar las opciones de ubicación de los marcadores, y cómo se etiquetan."

#: ../../tutorials/text/text_intro.rst:414
msgid "Terminology"
msgstr "Terminologia"

#: ../../tutorials/text/text_intro.rst:416
msgid "*Axes* have an `matplotlib.axis.Axis` object for the ``ax.xaxis`` and ``ax.yaxis`` that contain the information about how the labels in the axis are laid out."
msgstr "*Los ejes* tienen un objeto `matplotlib.axis.Axis` para el ``ax.xaxis`` y ``ax.yaxis`` que contienen la información sobre cómo se colocan las etiquetas en el eje."

#: ../../tutorials/text/text_intro.rst:420
msgid "The axis API is explained in detail in the documentation to `~matplotlib.axis`."
msgstr "La API de ejes se explica en detalle en la documentación de `~matplotlib.axis`."

#: ../../tutorials/text/text_intro.rst:423
msgid "An Axis object has major and minor ticks.  The Axis has `.Axis.set_major_locator` and `.Axis.set_minor_locator` methods that use the data being plotted to determine the location of major and minor ticks.  There are also `.Axis.set_major_formatter` and `.Axis.set_minor_formatter` methods that format the tick labels."
msgstr "Un objeto Eje tiene marcadores mayores y menores.  El Eje tiene los métodos `.Axis.set_major_locator` y `.Axis.set_minor_locator` que utilizan los datos que se trazan para determinar la ubicación de los marcadores mayores y menores.  También hay métodos `.Axis.set_major_formatter` y `.Axis.set_minor_formatter` que formatean las etiquetas de los marcadores."

#: ../../tutorials/text/text_intro.rst:430
msgid "Simple ticks"
msgstr "Marcadores simples"

#: ../../tutorials/text/text_intro.rst:432
msgid "It often is convenient to simply define the tick values, and sometimes the tick labels, overriding the default locators and formatters.  This is discouraged because it breaks interactive navigation of the plot.  It also can reset the axis limits: note that the second plot has the ticks we asked for, including ones that are well outside the automatic view limits."
msgstr "A menudo es conveniente definir simplemente los valores de los marcadores, y a veces las etiquetas de los mismos, anulando los localizadores y formateadores por defecto.  Esto se desaconseja porque rompe la navegación interactiva del gráfico.  También puede restablecer los límites de los ejes: observe que el segundo gráfico tiene los marcadores que pedimos, incluidos los que están fuera de los límites de la vista automática."

#: ../../tutorials/text/text_intro.rst:464
msgid "We can of course fix this after the fact, but it does highlight a weakness of hard-coding the ticks.  This example also changes the format of the ticks:"
msgstr "Por supuesto, podemos arreglar esto a posteriori, pero pone de manifiesto un punto débil de la codificación de los marcadores.  Este ejemplo también cambia el formato de los marcadores:"

#: ../../tutorials/text/text_intro.rst:499
msgid "Tick Locators and Formatters"
msgstr "Localizadores de Marcadores y formateadores"

#: ../../tutorials/text/text_intro.rst:501
msgid "Instead of making a list of all the tickalbels, we could have used `matplotlib.ticker.StrMethodFormatter` (new-style ``str.format()`` format string) or `matplotlib.ticker.FormatStrFormatter` (old-style '%' format string) and passed it to the ``ax.xaxis``.  A `matplotlib.ticker.StrMethodFormatter` can also be created by passing a ``str`` without having to explicitly create the formatter."
msgstr "En lugar de hacer una lista de todos los tickalbels, podríamos haber utilizado `matplotlib.ticker.StrMethodFormatter` (cadena de formato ``str.format()`` del nuevo estilo) o `matplotlib.ticker.FormatStrFormatter` (cadena de formato ``%`` del viejo estilo) y pasarla al ``ax.xaxis``.  También se puede crear un `matplotlib.ticker.StrMethodFormatter` pasando una ``str`` sin tener que crear explícitamente el formateador."

#: ../../tutorials/text/text_intro.rst:536
msgid "And of course we could have used a non-default locator to set the tick locations.  Note we still pass in the tick values, but the x-limit fix used above is *not* needed."
msgstr "Y, por supuesto, podríamos haber utilizado un localizador no predeterminado para establecer las ubicaciones de los marcadores. Ten en cuenta que todavía pasamos los valores de los marcadores, pero el arreglo del límite x utilizado anteriormente es *no* necesario."

#: ../../tutorials/text/text_intro.rst:567
msgid "The default formatter is the `matplotlib.ticker.MaxNLocator` called as ``ticker.MaxNLocator(self, nbins='auto', steps=[1, 2, 2.5, 5, 10])`` The *steps* keyword contains a list of multiples that can be used for tick values.  i.e. in this case, 2, 4, 6 would be acceptable ticks, as would 20, 40, 60 or 0.2, 0.4, 0.6. However, 3, 6, 9 would not be acceptable because 3 doesn't appear in the list of steps."
msgstr "El formateador por defecto es el `matplotlib.ticker.MaxNLocator` llamado como ``ticker.MaxNLocator(self, nbins='auto', steps=[1, 2, 2.5, 5, 10])`` La palabra clave *steps* contiene una lista de múltiplos que se pueden utilizar para los valores de los marcadores. es decir, en este caso, 2, 4, 6 serían marcadores aceptables, al igual que 20, 40, 60 o 0.2, 0.4, 0.6. Sin embargo, 3, 6, 9 no serían aceptables porque el 3 no aparece en la lista de pasos."

#: ../../tutorials/text/text_intro.rst:574
msgid "``nbins=auto`` uses an algorithm to determine how many ticks will be acceptable based on how long the axis is.  The fontsize of the ticklabel is taken into account, but the length of the tick string is not (because its not yet known.)  In the bottom row, the ticklabels are quite large, so we set ``nbins=4`` to make the labels fit in the right-hand plot."
msgstr "``nbins=auto`` utiliza un algoritmo para determinar cuántos marcadores serán aceptables en función de la longitud del eje.  En la fila inferior, las etiquetas son bastante grandes, por lo que establecemos ``nbins=4`` para que las etiquetas encajen en el gráfico de la derecha."

#: ../../tutorials/text/text_intro.rst:621
msgid "Finally, we can specify functions for the formatter using `matplotlib.ticker.FuncFormatter`.  Further, like `matplotlib.ticker.StrMethodFormatter`, passing a function will automatically create a `matplotlib.ticker.FuncFormatter`."
msgstr "Por último, podemos especificar funciones para el formateador utilizando `matplotlib.ticker.FuncFormatter`.  Además, al igual que `matplotlib.ticker.StrMethodFormatter`, al pasar una función se creará automáticamente un `matplotlib.ticker.FuncFormatter`."

#: ../../tutorials/text/text_intro.rst:664
msgid "Dateticks"
msgstr "Dateticks"

#: ../../tutorials/text/text_intro.rst:666
msgid "Matplotlib can accept `datetime.datetime` and `numpy.datetime64` objects as plotting arguments.  Dates and times require special formatting, which can often benefit from manual intervention. In order to help, dates have special Locators and Formatters, defined in the `matplotlib.dates` module."
msgstr "Matplotlib puede aceptar los objetos `datetime.datetime` y `numpy.datetime64` como argumentos de trazado.  Las fechas y las horas requieren un formato especial, que a menudo puede beneficiarse de la intervención manual. Para ayudar, las fechas tienen localizadores y formateadores especiales, definidos en el módulo `matplotlib.dates`."

#: ../../tutorials/text/text_intro.rst:672
msgid "A simple example is as follows.  Note how we have to rotate the tick labels so that they don't over-run each other."
msgstr "Un ejemplo sencillo es el siguiente. Observa cómo tenemos que rotar las etiquetas de los marcadores para que no se sobrepasen."

#: ../../tutorials/text/text_intro.rst:704
msgid "We can pass a format to `matplotlib.dates.DateFormatter`.  Also note that the 29th and the next month are very close together.  We can fix this by using the `.dates.DayLocator` class, which allows us to specify a list of days of the month to use. Similar formatters are listed in the `matplotlib.dates` module."
msgstr "Podemos pasar un formato a `matplotlib.dates.DateFormatter`.  También hay que tener en cuenta que el día 29 y el mes siguiente están muy juntos.  Podemos arreglar esto utilizando la clase `.dates.DayLocator`, que nos permite especificar una lista de días del mes a utilizar. Hay formateadores similares en el módulo `matplotlib.dates`."

#: ../../tutorials/text/text_intro.rst:742
msgid "Legends and Annotations"
msgstr "Leyendas y anotaciones"

#: ../../tutorials/text/text_intro.rst:744
msgid "Legends: :doc:`/tutorials/intermediate/legend_guide`"
msgstr "Leyendas: :doc:`/tutorials/intermediate/legend_guide`"

#: ../../tutorials/text/text_intro.rst:745
msgid "Annotations: :doc:`/tutorials/text/annotations`"
msgstr "Anotaciones: :doc:`/tutorials/text/annotations`"

#: ../../tutorials/text/text_intro.rst:751
msgid "**Total running time of the script:** ( 0 minutes  4.454 seconds)"
msgstr "**Tiempo total de ejecución del script:** ( 0 minutos 4.454 segundos)"

#: ../../tutorials/text/text_intro.rst:766
msgid ":download:`Download Python source code: text_intro.py <text_intro.py>`"
msgstr ":download:`Descargar código fuente de Python: text_intro.py <text_intro.py>`"

#: ../../tutorials/text/text_intro.rst:772
msgid ":download:`Download Jupyter notebook: text_intro.ipynb <text_intro.ipynb>`"
msgstr ":download:`Descargar Jupyter notebook: text_intro.ipynb <text_intro.ipynb>`"

#: ../../tutorials/text/text_intro.rst:779
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr "Palabras clave: ejemplo de código Matplotlib, codex, python plot, pyplot `Galería generada por Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"

