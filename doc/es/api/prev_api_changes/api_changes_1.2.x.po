msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:11\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/prev_api_changes/api_changes_1.2.x.po\n"
"X-Crowdin-File-ID: 1894\n"
"Language: es_ES\n"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:2
msgid "API Changes in 1.2.x"
msgstr "Cambios de API en 1.2.x"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:4
msgid "The ``classic`` option of the rc parameter ``toolbar`` is deprecated and will be removed in the next release."
msgstr "La opción ``classic`` del parámetro rc ``toolbar`` está obsoleta y se eliminará en la próxima versión."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:7
msgid "The ``matplotlib.cbook.isvector`` method has been removed since it is no longer functional."
msgstr "El método ``matplotlib.cbook.isvector`` ha sido eliminado ya que ya no es funcional."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:10
msgid "The ``rasterization_zorder`` property on `~matplotlib.axes.Axes` sets a zorder below which artists are rasterized.  This has defaulted to -30000.0, but it now defaults to *None*, meaning no artists will be rasterized.  In order to rasterize artists below a given zorder value, `.set_rasterization_zorder` must be explicitly called."
msgstr "La propiedad ``rasterization_zorder`` en `~matplotlib.axes.Axes` establece un zorder debajo del cual los artistas son rasterizados. Esto ha sido predeterminado a -30000. , pero ahora es por defecto *Ninguno*, lo que significa que ningún artista será rasterizado. Para rasterizar artistas por debajo de un valor zorder determinado, `.set_rasterization_zorder` debe ser llamado explícitamente."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:16
msgid "In :meth:`~matplotlib.axes.Axes.scatter`, and `~.pyplot.scatter`, when specifying a marker using a tuple, the angle is now specified in degrees, not radians."
msgstr "En :meth:`~matplotlib.axes.Axes.scatter`, y `~.pyplot.scatter`, al especificar un marcador usando una tupla, el ángulo ahora se especifica en grados, no en radianes."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:20
msgid "Using :meth:`~matplotlib.axes.Axes.twinx` or :meth:`~matplotlib.axes.Axes.twiny` no longer overrides the current locaters and formatters on the axes."
msgstr "Utilizando :meth:`~matplotlib.axes.Axes.twinx` o :meth:`~matplotlib.axes.Axes.twiny` ya no anula los localizadores y formatos actuales en los ejes."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:24
msgid "In :meth:`~matplotlib.axes.Axes.contourf`, the handling of the *extend* kwarg has changed.  Formerly, the extended ranges were mapped after to 0, 1 after being normed, so that they always corresponded to the extreme values of the colormap.  Now they are mapped outside this range so that they correspond to the special colormap values determined by the :meth:`~matplotlib.colors.Colormap.set_under` and :meth:`~matplotlib.colors.Colormap.set_over` methods, which default to the colormap end points."
msgstr "En :meth:`~matplotlib.axes.Axes.contourf`, el manejo del kwarg *extend* ha cambiado. Anteriormente, los rangos extendidos fueron mapeados después de 0, 1 después de ser normados, para que siempre se correspondan con los valores extremos del mapa de color. Ahora se mapean fuera de este rango para que correspondan a los valores especiales del mapa de colores determinados por el :meth:`~matplotlib. olors.Colormap.set_under` y :meth:métodos `~matplotlib.colors.Colormap.set_over`, que predeterminados para los puntos finales del mapa de colores."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:34
msgid "The new rc parameter ``savefig.format`` replaces ``cairo.format`` and ``savefig.extension``, and sets the default file format used by :meth:`matplotlib.figure.Figure.savefig`."
msgstr "El nuevo parámetro de rc ``savefig.format`` reemplaza ``cairo.format`` y ``savefig.extension``, y establece el formato de archivo por defecto utilizado por :meth:`matplotlib.figure.Figure.savefig`."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:38
msgid "In :func:`.pyplot.pie` and :meth:`.axes.Axes.pie`, one can now set the radius of the pie; setting the *radius* to 'None' (the default value), will result in a pie with a radius of 1 as before."
msgstr "En :func:`.pyplot.pie` y :meth:`.axes.Axes. ie`, ahora se puede establecer el radio del pastel; configurando el *radio* a 'Ningo' (el valor por defecto), resultará en un pastel con un radio de 1 como antes."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:42
msgid "Use of ``matplotlib.projections.projection_factory`` is now deprecated in favour of axes class identification using ``matplotlib.projections.process_projection_requirements`` followed by direct axes class invocation (at the time of writing, functions which do this are: :meth:`~matplotlib.figure.Figure.add_axes`, :meth:`~matplotlib.figure.Figure.add_subplot` and :meth:`~matplotlib.figure.Figure.gca`). Therefore::"
msgstr "El uso de ``matplotlib.projections.projection_factory`` ahora está obsoleto a favor de la identificación de la clase de ejes usando ``matplotlib.prosections. rocess_projection_requirements`` seguido de una invocación de clase de ejes directos (en el momento de escribir las funciones que hacen esto son: :meth:`~matplotlib. igure.Figure.add_axes`, :meth:`~matplotlib.figure.Figure.add_subplot` y :meth:`~matplotlib.figure.Figure.gca`). Por lo tanto::"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:67
msgid "This change means that third party objects can expose themselves as Matplotlib axes by providing a ``_as_mpl_axes`` method. See :mod:`matplotlib.projections` for more detail."
msgstr "Este cambio significa que los objetos de terceros pueden exponerse como ejes Matplotlib proporcionando un método ``_as_mpl_axes``. Vea :mod:`matplotlib.projections` para más detalles."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:71
msgid "A new keyword *extendfrac* in :meth:`~matplotlib.pyplot.colorbar` and :class:`~matplotlib.colorbar.ColorbarBase` allows one to control the size of the triangular minimum and maximum extensions on colorbars."
msgstr "Una nueva palabra clave *extendfrac* en :meth:`~matplotlib.pyplot.colorbar` y :class:`~matplotlib.colorbar.ColorbarBase` permite controlar el tamaño de las extensiones mínimas y máximas triangulares en las barras de colores."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:75
msgid "A new keyword *capthick* in :meth:`~matplotlib.pyplot.errorbar` has been added as an intuitive alias to the *markeredgewidth* and *mew* keyword arguments, which indirectly controlled the thickness of the caps on the errorbars.  For backwards compatibility, specifying either of the original keyword arguments will override any value provided by *capthick*."
msgstr "Una nueva palabra clave *capthick* en :meth:`~matplotlib.pyplot. rrorbar` ha sido añadido como un alias intuitivo al *markeredgewidth* y *mew* argumentos de palabras clave, que indirectamente controlaba el espesor de las gorras en las barras de error. Para compatibilidad hacia atrás, especificar cualquiera de los argumentos de palabra clave original anulará cualquier valor proporcionado por *capthick*."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:82
msgid "Transform subclassing behaviour is now subtly changed. If your transform implements a non-affine transformation, then it should override the ``transform_non_affine`` method, rather than the generic ``transform`` method. Previously transforms would define ``transform`` and then copy the method into ``transform_non_affine``::"
msgstr "El comportamiento de subclasificación de transformaciones ahora se cambia sutilmente. Si su transformación implementa una transformación no afectada, entonces debe anular el método ``transform_non_affine``, en lugar del método genérico ``transform``. Anteriormente las transformaciones definirían ``transform`` y luego copiarían el método en ``transform_non_affine``::"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:94
msgid "This approach will no longer function correctly and should be changed to::"
msgstr "Este enfoque ya no funcionará correctamente y debe cambiarse a::"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:101
msgid "Artists no longer have ``x_isdata`` or ``y_isdata`` attributes; instead any artist's transform can be interrogated with ``artist_instance.get_transform().contains_branch(ax.transData)``"
msgstr "Los artistas ya no tienen los atributos ``x_isdata`` o ``y_isdata``; en su lugar, la transformación de cualquier artista puede ser interrogada con ``artist_instance.get_transform().contains_branch(ax.transData)``"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:105
msgid "Lines added to an axes now take into account their transform when updating the data and view limits. This means transforms can now be used as a pre-transform. For instance::"
msgstr "Las líneas añadidas a un eje ahora tienen en cuenta su transformación al actualizar los datos y los límites de la vista. Esto significa que las transformas ahora pueden utilizarse como pretransformación. Por ejemplo::"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:116
msgid "One can now easily get a transform which goes from one transform's coordinate system to another, in an optimized way, using the new subtract method on a transform. For instance, to go from data coordinates to axes coordinates::"
msgstr "Ahora uno puede conseguir fácilmente una transformación que va de un sistema de coordenadas de una transforma a otra de una manera optimizada, utilizando el nuevo método de restar en una transforma. Por ejemplo, para pasar de coordenadas de datos a coordenadas de ejes::"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:128
msgid "for versions before 1.2 this could only be achieved in a sub-optimal way, using ``ax.transData + ax.transAxes.inverted()`` (depth is a new concept, but had it existed it would return 4 for this example)."
msgstr "para versiones anteriores a la 1.2 esto sólo se pudo lograr de forma subóptima, usando ``ax.transData + ax. ransAxes.inverted()`` (la profundidad es un nuevo concepto, pero si existiera, devolvería 4 para este ejemplo)."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:132
msgid "``twinx`` and ``twiny`` now returns an instance of SubplotBase if parent axes is an instance of SubplotBase."
msgstr "``twinx`` y ``twiny`` ahora devuelven una instancia de SubplotBase si los ejes principales son una instancia de SubplotBase."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:135
msgid "All Qt3-based backends are now deprecated due to the lack of py3k bindings. Qt and QtAgg backends will continue to work in v1.2.x for py2.6 and py2.7. It is anticipated that the Qt3 support will be completely removed for the next release."
msgstr "Todos los backends basados en Qt3 ahora están obsoletos debido a la falta de enlaces py3k. Los backends Qt y QtAgg continuarán trabajando en v1. .x para py2.6 y py2.7. Se anticipa que el soporte Qt3 se eliminará completamente para la próxima versión."

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:140
msgid "``matplotlib.colors.ColorConverter``, :class:`~matplotlib.colors.Colormap` and :class:`~matplotlib.colors.Normalize` now subclasses ``object``"
msgstr "``matplotlib.colors.ColorConverter``, :class:`~matplotlib.colors.Colormap` y :class:`~matplotlib.colors.Normalize` ahora subclases ``object``"

#: ../../api/prev_api_changes/api_changes_1.2.x.rst:144
msgid "ContourSet instances no longer have a ``transform`` attribute. Instead, access the transform with the ``get_transform`` method."
msgstr "Las instancias de ContourSet ya no tienen un atributo ``transform``. En su lugar, accede a la transformación con el método ``get_transform``."

