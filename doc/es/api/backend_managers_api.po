msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/backend_managers_api.po\n"
"X-Crowdin-File-ID: 1730\n"
"Language: es_ES\n"

#: ../../api/backend_managers_api.rst:3
msgid ":mod:`matplotlib.backend_managers`"
msgstr ":mod:`matplotlib.backend_managers`"

#: matplotlib.backend_managers.ToolEvent:1
#: matplotlib.backend_managers.ToolManager:1
#: matplotlib.backend_managers.ToolManagerMessageEvent:1 of
msgid "Bases: :py:class:`object`"
msgstr "Bases: :py:class:`object`"

#: matplotlib.backend_managers.ToolEvent:2 of
msgid "Event for tool manipulation (add/remove)."
msgstr "Evento de manipulación de herramienta (añadir/eliminar)."

#: matplotlib.backend_managers.ToolManager:2 of
msgid "Manager for actions triggered by user interactions (key press, toolbar clicks, ...) on a Figure."
msgstr "Gestor para acciones activadas por interacciones del usuario (pulsación de teclas, clic en la barra de herramientas, ...) en una figura."

#: matplotlib.backend_managers.ToolManager of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.backend_managers.ToolManager:21 of
msgid ":obj:`figure <figure>` : `.Figure`"
msgstr ":obj:`figura <figure>` : `.Figure`"

#: matplotlib.backend_managers.ToolManager:20
#: matplotlib.backend_managers.ToolManager.set_figure:7 of
msgid "Figure"
msgstr "Figura"

#: matplotlib.backend_managers.ToolManager:21
#: matplotlib.backend_managers.ToolManager.figure:2 of
msgid "Figure that holds the canvas."
msgstr "Figura que sostiene el lienzo."

#: matplotlib.backend_managers.ToolManager:24 of
msgid "**keypresslock** : `~matplotlib.widgets.LockDraw`"
msgstr "**keypresslock** : `~matplotlib.widgets.LockDraw`"

#: matplotlib.backend_managers.ToolManager:23
#: matplotlib.backend_managers.ToolManager:27 of
msgid "LockDraw"
msgstr "Bloquear Dibujo"

#: matplotlib.backend_managers.ToolManager:24 of
msgid "`.LockDraw` object to know if the `canvas` key_press_event is locked."
msgstr "Objeto `.LockDraw` para saber si el key_press_event `canvas` está bloqueado."

#: matplotlib.backend_managers.ToolManager:28 of
msgid "**messagelock** : `~matplotlib.widgets.LockDraw`"
msgstr "**messagelock** : `~matplotlib.widgets.LockDraw`"

#: matplotlib.backend_managers.ToolManager:27 of
msgid "`.LockDraw` object to know if the message is available to write."
msgstr "Objeto `.LockDraw` para saber si el mensaje está disponible para escribir."

#: matplotlib.backend_managers.ToolManager.active_toggle:2 of
msgid "Currently toggled tools."
msgstr "Herramientas cambiadas actualmente."

#: matplotlib.backend_managers.ToolManager.add_tool:2 of
msgid "Add *tool* to `ToolManager`."
msgstr "Añade *tool* a `ToolManager`."

#: matplotlib.backend_managers.ToolManager.add_tool:4 of
msgid "If successful, adds a new event ``tool_trigger_{name}`` where ``{name}`` is the *name* of the tool; the event is fired every time the tool is triggered."
msgstr "Si tiene éxito, agrega un nuevo evento ``tool_trigger_{name}`` donde ``{name}`` es el *nombre* de la herramienta; el evento se activa cada vez que se activa la herramienta."

#: matplotlib.backend_managers.ToolManager.add_tool
#: matplotlib.backend_managers.ToolManager.get_tool
#: matplotlib.backend_managers.ToolManager.get_tool_keymap
#: matplotlib.backend_managers.ToolManager.remove_tool
#: matplotlib.backend_managers.ToolManager.set_figure
#: matplotlib.backend_managers.ToolManager.toolmanager_connect
#: matplotlib.backend_managers.ToolManager.trigger_tool
#: matplotlib.backend_managers.ToolManager.update_keymap of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.backend_managers.ToolManager.add_tool:11
#: matplotlib.backend_managers.ToolManager.get_tool_keymap:8
#: matplotlib.backend_managers.ToolManager.remove_tool:21
#: matplotlib.backend_managers.ToolManager.trigger_tool:8
#: matplotlib.backend_managers.ToolManager.update_keymap:8 of
msgid "**name**"
msgstr "**name**"

#: of
msgid "str"
msgstr "str"

#: matplotlib.backend_managers.ToolManager.add_tool:11 of
msgid "Name of the tool, treated as the ID, has to be unique."
msgstr "El nombre de la herramienta, tratado como el ID, tiene que ser único."

#: matplotlib.backend_managers.ToolManager.add_tool:21 of
msgid "**tool**"
msgstr "**herramienta**"

#: of
msgid "class_like, i.e. str or type"
msgstr "gusta_clase, ej. str o tipo"

#: matplotlib.backend_managers.ToolManager.add_tool:14 of
msgid "Reference to find the class of the Tool to added."
msgstr "Referencia para encontrar la clase de la herramienta a añadir."

#: matplotlib.backend_managers.ToolManager.add_tool:26 of
msgid ":obj:`matplotlib.backend_tools.ToolBase`"
msgstr ":obj:`matplotlib.backend_tools.ToolBase`"

#: matplotlib.backend_managers.ToolManager.add_tool:27 of
msgid "The base class for tools."
msgstr "La clase base para las herramientas."

#: matplotlib.backend_managers.ToolManager.add_tool:31 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.backend_managers.ToolManager.add_tool:32 of
msgid "args and kwargs get passed directly to the tools constructor."
msgstr "args y kwargs se pasan directamente al constructor de herramientas."

#: matplotlib.backend_managers.ToolManager.canvas:2 of
msgid "Canvas managed by FigureManager."
msgstr "Canvas administradas por FigureManager."

#: matplotlib.backend_managers.ToolManager.get_tool:2 of
msgid "Return the tool object with the given name."
msgstr "Devuelve el objeto de herramienta con el nombre dado."

#: matplotlib.backend_managers.ToolManager.get_tool:4 of
msgid "For convenience, this passes tool objects through."
msgstr "Para mayor comodidad, esto pasa objetos de herramienta."

#: matplotlib.backend_managers.ToolManager.get_tool:9 of
msgid "**name** : str or `.ToolBase`"
msgstr "**nombre** : str o `.ToolBase`"

#: of
msgid "str or"
msgstr "str o"

#: matplotlib.backend_managers.ToolManager.get_tool:9 of
msgid "Name of the tool, or the tool itself."
msgstr "Nombre de la herramienta, o de la propia herramienta."

#: matplotlib.backend_managers.ToolManager.get_tool:13 of
msgid "**warn**"
msgstr "**advertir**"

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.backend_managers.ToolManager.get_tool:12 of
msgid "Whether a warning should be emitted it no tool with the given name exists."
msgstr "Si una advertencia debe ser emitida no existe ninguna herramienta con el nombre dado."

#: matplotlib.backend_managers.ToolManager.get_tool
#: matplotlib.backend_managers.ToolManager.get_tool_keymap
#: matplotlib.backend_managers.ToolManager.toolmanager_connect of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.backend_managers.ToolManager.get_tool:30 of
msgid "`.ToolBase` or None"
msgstr "`.ToolBase` o ninguno"

#: matplotlib.backend_managers.ToolManager.get_tool:18 of
msgid "The tool or None if no tool with the given name exists."
msgstr "La herramienta o Ninguno si no existe una herramienta con el nombre dado."

#: matplotlib.backend_managers.ToolManager.get_tool_keymap:2 of
msgid "Return the keymap associated with the specified tool."
msgstr "Devuelve el mapa de teclado asociado con la herramienta especificada."

#: matplotlib.backend_managers.ToolManager.get_tool_keymap:8
#: matplotlib.backend_managers.ToolManager.update_keymap:8 of
msgid "Name of the Tool."
msgstr "Nombre de la herramienta."

#: matplotlib.backend_managers.ToolManager.get_tool_keymap:25 of
msgid "list of str"
msgstr "lista de str"

#: matplotlib.backend_managers.ToolManager.get_tool_keymap:13 of
msgid "List of keys associated with the tool."
msgstr "Lista de claves asociadas con la herramienta."

#: matplotlib.backend_managers.ToolManager.message_event:2 of
msgid "Emit a `ToolManagerMessageEvent`."
msgstr "Emite un `ToolManagerMessageEvent`."

#: matplotlib.backend_managers.ToolManager.remove_tool:2 of
msgid "Remove tool named *name*."
msgstr "Eliminar herramienta llamada *nombre*."

#: matplotlib.backend_managers.ToolManager.remove_tool:8
#: matplotlib.backend_managers.ToolManager.trigger_tool:8 of
msgid "Name of the tool."
msgstr "Nombre de la herramienta."

#: matplotlib.backend_managers.ToolManager.set_figure:2 of
msgid "Bind the given figure to the tools."
msgstr "Vincula la figura dada a las herramientas."

#: matplotlib.backend_managers.ToolManager.set_figure:8 of
msgid "**figure** : `.Figure`"
msgstr "**figura** : `.Figure`"

#: matplotlib.backend_managers.ToolManager.set_figure:24 of
msgid "**update_tools**"
msgstr "**actualizar_herramientas**"

#: matplotlib.backend_managers.ToolManager.set_figure:11 of
msgid "Force tools to update figure."
msgstr "Forzar las herramientas para actualizar la figura."

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:2 of
msgid "Connect event with string *s* to *func*."
msgstr "Conecta el evento con la cadena *s* a *func*."

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:16 of
msgid "**s**"
msgstr "**s**"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:8 of
msgid "The name of the event. The following events are recognized:"
msgstr "El nombre del evento. Se reconocen los siguientes eventos:"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:10 of
msgid "'tool_message_event'"
msgstr "'tool_message_event'"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:11 of
msgid "'tool_removed_event'"
msgstr "'herramienta_eliminado_evento'"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:12 of
msgid "'tool_added_event'"
msgstr "'herramienta_añadido_evento'"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:14 of
msgid "For every tool added a new event is created"
msgstr "Para cada herramienta añadida se crea un nuevo evento"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:16 of
msgid "'tool_trigger_TOOLNAME', where TOOLNAME is the id of the tool."
msgstr "'tool_trigger_TOOLNAME', donde TOOLNAME es el id de la herramienta."

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:21 of
msgid "**func**"
msgstr "**func**"

#: of
msgid "callable"
msgstr "llamable"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:19 of
msgid "Callback function for the toolmanager event with signature::"
msgstr "Función de devolución de llamada para el evento toolmanager con firma::"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:39 of
msgid "cid"
msgstr "cid"

#: matplotlib.backend_managers.ToolManager.toolmanager_connect:26 of
msgid "The callback id for the connection. This can be used in `.toolmanager_disconnect`."
msgstr "El id de devolución de llamada para la conexión. Esto puede ser usado en `.toolmanager_disconnect`."

#: matplotlib.backend_managers.ToolManager.toolmanager_disconnect:2 of
msgid "Disconnect callback id *cid*."
msgstr "Desconectar id de devolución de llamada *cid*."

#: matplotlib.backend_managers.ToolManager.toolmanager_disconnect:4 of
msgid "Example usage::"
msgstr "Ejemplo de uso::"

#: matplotlib.backend_managers.ToolManager.tools:2 of
msgid "A dict mapping tool name -> controlled tool."
msgstr "Una herramienta de mapeo de diccionarios -> herramienta controlada."

#: matplotlib.backend_managers.ToolManager.trigger_tool:2 of
msgid "Trigger a tool and emit the ``tool_trigger_{name}`` event."
msgstr "Activa una herramienta y emite el evento ``tool_trigger_{name}``."

#: matplotlib.backend_managers.ToolManager.trigger_tool:11 of
msgid "**sender**"
msgstr "**emisor**"

#: of
msgid "object"
msgstr "object"

#: matplotlib.backend_managers.ToolManager.trigger_tool:11 of
msgid "Object that wishes to trigger the tool."
msgstr "Objeto que desea activar la herramienta."

#: matplotlib.backend_managers.ToolManager.trigger_tool:14 of
msgid "**canvasevent**"
msgstr "**lienzo evento**"

#: of
msgid "Event"
msgstr "Evento"

#: matplotlib.backend_managers.ToolManager.trigger_tool:14 of
msgid "Original Canvas event or None."
msgstr "Evento original de lienzo o ninguno."

#: matplotlib.backend_managers.ToolManager.trigger_tool:30 of
msgid "**data**"
msgstr "**data**"

#: matplotlib.backend_managers.ToolManager.trigger_tool:17 of
msgid "Extra data to pass to the tool when triggering."
msgstr "Datos adicionales para pasar a la herramienta al activar."

#: matplotlib.backend_managers.ToolManager.update_keymap:2 of
msgid "Set the keymap to associate with the specified tool."
msgstr "Establece el mapa de teclado para asociar con la herramienta especificada."

#: matplotlib.backend_managers.ToolManager.update_keymap:24 of
msgid "**key**"
msgstr "**key**"

#: of
msgid "str or list of str"
msgstr "str o lista de str"

#: matplotlib.backend_managers.ToolManager.update_keymap:11 of
msgid "Keys to associate with the tool."
msgstr "Claves para asociar con la herramienta."

#: matplotlib.backend_managers.ToolManagerMessageEvent:2 of
msgid "Event carrying messages from toolmanager."
msgstr "Evento llevando mensajes de toolmanager."

#: matplotlib.backend_managers.ToolManagerMessageEvent:4 of
msgid "Messages usually get displayed to the user by the toolbar."
msgstr "Los mensajes generalmente se muestran al usuario por la barra de herramientas."

#: matplotlib.backend_managers.ToolTriggerEvent:1 of
msgid "Bases: :py:class:`matplotlib.backend_managers.ToolEvent`"
msgstr "Bases: :py:class:`matplotlib.backend_managers.ToolEvent`"

#: matplotlib.backend_managers.ToolTriggerEvent:2 of
msgid "Event to inform that a tool has been triggered."
msgstr "Evento para informar de que una herramienta ha sido activada."

