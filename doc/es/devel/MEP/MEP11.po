msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-13 13:03\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/devel/MEP/MEP11.po\n"
"X-Crowdin-File-ID: 2000\n"
"Language: es_ES\n"

#: ../../devel/MEP/MEP11.rst:3
msgid "MEP11: Third-party dependencies"
msgstr "MEP11: Dependencias de terceros"

#: ../../devel/MEP/MEP11.rst:8
msgid "This MEP attempts to improve the way in which third-party dependencies in matplotlib are handled."
msgstr "Este MEP intenta mejorar la forma en que se manejan las dependencias de terceros en matplotlib."

#: ../../devel/MEP/MEP11.rst:12
msgid "Status"
msgstr "Estado"

#: ../../devel/MEP/MEP11.rst:14
msgid "**Completed** -- needs to be merged"
msgstr "**Completado** -- necesita ser fusionado"

#: ../../devel/MEP/MEP11.rst:17
msgid "Branches and Pull requests"
msgstr "Ramas y Pull requests"

#: ../../devel/MEP/MEP11.rst:19
msgid "#1157: Use automatic dependency resolution"
msgstr "#1157: Utilizar la resolución automática de dependencias"

#: ../../devel/MEP/MEP11.rst:21
msgid "#1290: Debundle pyparsing"
msgstr "#1290: Debundle pyparsing"

#: ../../devel/MEP/MEP11.rst:23
msgid "#1261: Update six to 1.2"
msgstr "#1261: Actualizar seis a 1.2"

#: ../../devel/MEP/MEP11.rst:26
msgid "Abstract"
msgstr "Resumen"

#: ../../devel/MEP/MEP11.rst:28
msgid "One of the goals of matplotlib has been to keep it as easy to install as possible.  To that end, some third-party dependencies are included in the source tree and, under certain circumstances, installed alongside matplotlib.  This MEP aims to resolve some problems with that approach, bring some consistency, while continuing to make installation convenient."
msgstr "Uno de los objetivos de matplotlib ha sido mantenerlo tan fácil de instalar como sea posible.  Para ello, algunas dependencias de terceros se incluyen en el árbol de fuentes y, en determinadas circunstancias, se instalan junto a matplotlib.  Este MEP tiene como objetivo resolver algunos problemas con ese enfoque, traer un poco de consistencia, mientras que continúa haciendo la instalación conveniente."

#: ../../devel/MEP/MEP11.rst:35
msgid "At the time that was initially done, setuptools_, easy_install_ and PyPI_ were not mature enough to be relied on.  However, at present, we should be able to safely leverage the \"modern\" versions of those tools, distribute_ and pip_."
msgstr "En el momento en que se hizo inicialmente, setuptools_, easy_install_ y PyPI_ no estaban lo suficientemente maduros como para confiar en ellos.  Sin embargo, en la actualidad, deberíamos poder aprovechar con seguridad las versiones \"modernas\" de esas herramientas, distribute_ y pip_."

#: ../../devel/MEP/MEP11.rst:40
msgid "While matplotlib has dependencies on both Python libraries and C/C++ libraries, this MEP addresses only the Python libraries so as to not confuse the issue.  C libraries represent a larger and mostly orthogonal set of problems."
msgstr "Aunque matplotlib tiene dependencias tanto de las bibliotecas Python como de las bibliotecas C/C++, este MEP aborda sólo las bibliotecas Python para no confundir el tema.  Las bibliotecas C representan un conjunto de problemas más amplio y mayormente ortogonal."

#: ../../devel/MEP/MEP11.rst:46
msgid "Detailed description"
msgstr "Descripción detallada"

#: ../../devel/MEP/MEP11.rst:48
msgid "matplotlib depends on the following third-party Python libraries:"
msgstr "matplotlib depende de las siguientes bibliotecas de Python de terceros:"

#: ../../devel/MEP/MEP11.rst:50
msgid "Numpy"
msgstr "Numpy"

#: ../../devel/MEP/MEP11.rst:51
msgid "dateutil (pure Python)"
msgstr "dateutil (Python puro)"

#: ../../devel/MEP/MEP11.rst:52
msgid "pytz (pure Python)"
msgstr "pytz (Python puro)"

#: ../../devel/MEP/MEP11.rst:53
msgid "six -- required by dateutil (pure Python)"
msgstr "seis -- requerido por dateutil (Python puro)"

#: ../../devel/MEP/MEP11.rst:54
msgid "pyparsing (pure Python)"
msgstr "pyparsing (Python puro)"

#: ../../devel/MEP/MEP11.rst:55
msgid "PIL (optional)"
msgstr "PIL (opcional)"

#: ../../devel/MEP/MEP11.rst:56
msgid "GUI frameworks: pygtk, gobject, tkinter, PySide, PyQt4, wx (all optional, but one is required for an interactive GUI)"
msgstr "Frameworks de IGU: pygtk, gobject, tkinter, PySide, PyQt4, wx (todos opcionales, pero uno es necesario para una IGU interactiva)"

#: ../../devel/MEP/MEP11.rst:60
msgid "Current behavior"
msgstr "Comportamiento actual"

#: ../../devel/MEP/MEP11.rst:62
msgid "When installing from source, a :program:`git` checkout or pip_:"
msgstr "Cuando se instala desde el código fuente, se requiere un checkout :program:`git` o pip_:"

#: ../../devel/MEP/MEP11.rst:64
msgid ":file:`setup.py` attempts to ``import numpy``.  If this fails, the installation fails."
msgstr ":file:`setup.py` intenta ``importar numpy``.  Si esto falla, la instalación falla."

#: ../../devel/MEP/MEP11.rst:67
msgid "For each of dateutil_, pytz_ and six_, :file:`setup.py` attempts to import them (from the top-level namespace).  If that fails, matplotlib installs its local copy of the library into the top-level namespace."
msgstr "Para cada uno de dateutil_, pytz_ y six_, :file:`setup.py` intenta importarlos (desde el espacio de nombres de nivel superior).  Si esto falla, matplotlib instala su copia local de la biblioteca en el espacio de nombres de nivel superior."

#: ../../devel/MEP/MEP11.rst:72
msgid "pyparsing_ is always installed inside of the matplotlib namespace."
msgstr "pyparsing_ se instala siempre dentro del espacio de nombres de matplotlib."

#: ../../devel/MEP/MEP11.rst:75
msgid "This behavior is most surprising when used with pip_, because no pip_ dependency resolution is performed, even though it is likely to work for all of these packages."
msgstr "Este comportamiento es más sorprendente cuando se utiliza con pip_, porque no se realiza ninguna resolución de dependencia de pip_, aunque es probable que funcione para todos estos paquetes."

#: ../../devel/MEP/MEP11.rst:79
msgid "The fact that pyparsing_ is installed in the matplotlib namespace has reportedly (#1290) confused some users into thinking it is a matplotlib-related module and import it from there rather than the top-level."
msgstr "El hecho de que pyparsing_ esté instalado en el espacio de nombres de matplotlib ha confundido, según se informa (#1290), a algunos usuarios para que piensen que se trata de un módulo relacionado con matplotlib y lo importen desde allí en lugar de hacerlo desde el nivel superior."

#: ../../devel/MEP/MEP11.rst:84
msgid "When installing using the Windows installer, dateutil_, pytz_ and six_ are installed at the top-level *always*, potentially overwriting already installed copies of those libraries."
msgstr "Cuando se instala con el instalador de Windows, dateutil_, pytz_ y six_ se instalan en el nivel superior *siempre*, sobrescribiendo potencialmente las copias ya instaladas de esas bibliotecas."

#: ../../devel/MEP/MEP11.rst:88
msgid "TODO: Describe behavior with the OS-X installer."
msgstr "TODO: Describe el comportamiento con el instalador de OS-X."

#: ../../devel/MEP/MEP11.rst:90
msgid "When installing using a package manager (Debian, RedHat, MacPorts etc.), this behavior actually does the right thing, and there are no special patches in the matplotlib packages to deal with the fact that we handle dateutil_, pytz_ and six_ in this way.  However, care should be taken that whatever approach we move to continues to work in that context."
msgstr "Cuando se instala usando un gestor de paquetes (Debian, RedHat, MacPorts, etc.), este comportamiento realmente hace lo correcto, y no hay parches especiales en los paquetes de matplotlib para tratar el hecho de que manejemos dateutil_, pytz_ y six_ de esta manera.  Sin embargo, hay que tener cuidado de que cualquier enfoque que cambiemos siga funcionando en ese contexto."

#: ../../devel/MEP/MEP11.rst:97
msgid "Maintaining these packages in the matplotlib tree and making sure they are up-to-date is a maintenance burden.  Advanced new features that may require a third-party pure Python library have a higher barrier to inclusion because of this burden."
msgstr "Mantener estos paquetes en el árbol de matplotlib y asegurarse de que están actualizados es una carga de mantenimiento.  Las nuevas características avanzadas que pueden requerir una biblioteca de Python pura de terceros tienen una mayor barrera de inclusión debido a esta carga."

#: ../../devel/MEP/MEP11.rst:104
msgid "Desired behavior"
msgstr "Comportamiento deseado"

#: ../../devel/MEP/MEP11.rst:106
msgid "Third-party dependencies are downloaded and installed from their canonical locations by leveraging pip_, distribute_ and PyPI_."
msgstr "Las dependencias de terceros se descargan e instalan desde sus ubicaciones canónicas aprovechando pip_, distribute_ y PyPI_."

#: ../../devel/MEP/MEP11.rst:109
msgid "dateutil_, pytz_, and pyparsing_ should be made into optional dependencies -- though obviously some features would fail if they aren't installed.  This will allow the user to decide whether they want to bother installing a particular feature."
msgstr "dateutil_, pytz_ y pyparsing_ deberían convertirse en dependencias opcionales, aunque obviamente algunas funciones fallarían si no se instalan.  Esto permitirá al usuario decidir si quiere molestarse en instalar una característica en particular."

#: ../../devel/MEP/MEP11.rst:115
msgid "Implementation"
msgstr "Implementación"

#: ../../devel/MEP/MEP11.rst:117
msgid "For installing from source, and assuming the user has all of the C-level compilers and dependencies, this can be accomplished fairly easily using distribute_ and following the instructions `here <https://pypi.org/project/distribute/>`_.  The only anticipated change to the matplotlib library code will be to import pyparsing_ from the top-level namespace rather than from within matplotlib.  Note that distribute_ will also allow us to remove the direct dependency on six_, since it is, strictly speaking, only a direct dependency of dateutil_."
msgstr "Para instalar desde el código fuente, y asumiendo que el usuario tiene todos los compiladores y dependencias a nivel de C, esto se puede lograr con bastante facilidad usando distribute_ y siguiendo las instrucciones `aquí <https://pypi.org/project/distribute/>`_.  El único cambio previsto en el código de la biblioteca matplotlib será importar pyparsing_ desde el espacio de nombres de nivel superior en lugar de hacerlo desde matplotlib.  Tenga en cuenta que distribute_ también nos permitirá eliminar la dependencia directa de six_, ya que, estrictamente hablando, sólo es una dependencia directa de dateutil_."

#: ../../devel/MEP/MEP11.rst:127
msgid "For binary installations, there are a number of alternatives (here ordered from best/hardest to worst/easiest):"
msgstr "Para las instalaciones binarias, hay varias alternativas (aquí ordenadas de la mejor/más difícil a la peor/más fácil):"

#: ../../devel/MEP/MEP11.rst:130
msgid "The distutils wininst installer allows a post-install script to run.  It might be possible to get this script to run pip_ to install the other dependencies.  (See `this thread <http://grokbase.com/t/python/distutils-sig/109bdnfhp4/distutils-ann-setuptools-post-install-script-for-bdist-wininst>`_ for someone who has trod that ground before)."
msgstr "El instalador wininst de distutils permite ejecutar un script post-instalación.  Podría ser posible hacer que este script ejecute pip_ para instalar las otras dependencias.  (Ver `este hilo <http://grokbase.com/t/python/distutils-sig/109bdnfhp4/distutils-ann-setuptools-post-install-script-for-bdist-wininst>`_ para alguien que ha pisado ese terreno antes)."

#: ../../devel/MEP/MEP11.rst:136
msgid "Continue to ship dateutil_, pytz_, six_ and pyparsing_ in our installer, but use the post-install-script to install them *only* if they can not already be found."
msgstr "Continúa enviando dateutil_, pytz_, six_ y pyparsing_ en nuestro instalador, pero utiliza el script post-instalación para instalarlos *sólo* si no se encuentran ya."

#: ../../devel/MEP/MEP11.rst:140
msgid "Move all of these packages inside a (new) ``matplotlib.extern`` namespace so it is clear for outside users that these are external packages.  Add some conditional imports in the core matplotlib codebase so dateutil_ (at the top-level) is tried first, and failing that ``matplotlib.extern.dateutil`` is used."
msgstr "Mover todos estos paquetes dentro de un (nuevo) espacio de nombres ``matplotlib.extern`` para que quede claro para los usuarios externos que se trata de paquetes externos.  Añadir algunas importaciones condicionales en el código base de matplotlib para que dateutil_ (en el nivel superior) se intente primero, y en su defecto se utilice ``matplotlib.extern.dateutil``."

#: ../../devel/MEP/MEP11.rst:146
msgid "2 and 3 are undesirable as they still require maintaining copies of these packages in our tree -- and this is exacerbated by the fact that they are used less -- only in the binary installers.  None of these 3 approaches address Numpy, which will still have to be manually installed using an installer."
msgstr "2 y 3 son indeseables ya que todavía requieren mantener copias de estos paquetes en nuestro árbol -- y esto se agrava por el hecho de que se utilizan menos -- sólo en los instaladores binarios.  Ninguno de estos 3 enfoques aborda Numpy, que todavía tendrá que ser instalado manualmente usando un instalador."

#: ../../devel/MEP/MEP11.rst:152
msgid "TODO: How does this relate to the Mac OS-X installer?"
msgstr "TODO: ¿Cómo se relaciona esto con el instalador de Mac OS-X?"

#: ../../devel/MEP/MEP11.rst:155
msgid "Backward compatibility"
msgstr "Compatibilidad con versiones anteriores"

#: ../../devel/MEP/MEP11.rst:157
msgid "At present, matplotlib can be installed from source on a machine without the third party dependencies and without an internet connection.  After this change, an internet connection (and a working PyPI) will be required to install matplotlib for the first time. (Subsequent matplotlib updates or development work will run without accessing the network)."
msgstr "Actualmente, matplotlib puede instalarse desde el código fuente en una máquina sin las dependencias de terceros y sin conexión a Internet.  Después de este cambio, se requerirá una conexión a Internet (y una PyPI en funcionamiento) para instalar matplotlib por primera vez. (Las actualizaciones posteriores de matplotlib o el trabajo de desarrollo se ejecutarán sin acceder a la red)."

#: ../../devel/MEP/MEP11.rst:165
msgid "Alternatives"
msgstr "Alternativas"

#: ../../devel/MEP/MEP11.rst:167
msgid "Distributing binary eggs doesn't feel like a usable solution.  That requires getting easy_install_ installed first, and Windows users generally prefer the well known ``.exe`` or ``.msi`` installer that works out of the box."
msgstr "Distribuir eggs binarios no parece una solución utilizable.  Eso requiere tener easy_install_ instalado primero, y los usuarios de Windows generalmente prefieren el conocido instalador ``.exe`` o ``.msi`` que funciona fuera de la caja."

