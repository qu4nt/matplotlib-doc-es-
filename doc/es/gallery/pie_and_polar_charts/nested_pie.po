msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-17 22:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/gallery/pie_and_polar_charts/nested_pie.po\n"
"X-Crowdin-File-ID: 2626\n"
"Language: es_ES\n"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:13
msgid "Click :ref:`here <sphx_glr_download_gallery_pie_and_polar_charts_nested_pie.py>` to download the full example code"
msgstr "Haz clic en :ref:`aquí <sphx_glr_download_gallery_pie_and_polar_charts_nested_pie.py>` para descargar el código de ejemplo completo"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:23
msgid "Nested pie charts"
msgstr "Gráficos circulares anidados"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:25
msgid "The following examples show two ways to build a nested pie chart in Matplotlib. Such charts are often referred to as donut charts."
msgstr "Los siguientes ejemplos muestran dos formas de construir un gráfico circular anidado en Matplotlib. Este tipo de gráficos suelen denominarse gráficos de donuts."

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:45
msgid "The most straightforward way to build a pie chart is to use the `~matplotlib.axes.Axes.pie` method."
msgstr "La forma más sencilla de construir un gráfico de tarta es utilizar el método `~matplotlib.axes.Axes.pie`."

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:48
msgid "In this case, pie takes values corresponding to counts in a group. We'll first generate some fake data, corresponding to three groups. In the inner circle, we'll treat each number as belonging to its own group. In the outer circle, we'll plot them as members of their original 3 groups."
msgstr "En este caso, pie toma los valores correspondientes a los recuentos en un grupo. Primero generaremos unos datos falsos, correspondientes a tres grupos. En el círculo interior, trataremos cada número como perteneciente a su propio grupo. En el círculo exterior, los representaremos como miembros de sus 3 grupos originales."

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:54
msgid "The effect of the donut shape is achieved by setting a ``width`` to the pie's wedges through the *wedgeprops* argument."
msgstr "El efecto de la forma de donut se consigue estableciendo un ``ancho`` a las cuñas del pastel a través del argumento *wedgeprops*."

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:95
msgid "However, you can accomplish the same output by using a bar plot on axes with a polar coordinate system. This may give more flexibility on the exact design of the plot."
msgstr "Sin embargo, puede conseguir el mismo resultado utilizando un gráfico de barras en los ejes con un sistema de coordenadas polares. Esto puede dar más flexibilidad en el diseño exacto de la trama."

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:99
msgid "In this case, we need to map x-values of the bar chart onto radians of a circle. The cumulative sum of the values are used as the edges of the bars."
msgstr "En este caso, necesitamos mapear los valores x del gráfico de barras en radianes de un círculo. La suma acumulada de los valores se utiliza como los bordes de las barras."

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:147
msgid "References"
msgstr "Referencias"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:149
msgid "The use of the following functions, methods, classes and modules is shown in this example:"
msgstr "En este ejemplo se muestra el uso de las siguientes funciones, métodos, clases y módulos:"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:152
msgid "`matplotlib.axes.Axes.pie` / `matplotlib.pyplot.pie`"
msgstr "`matplotlib.axes.Axes.pie` / `matplotlib.pyplot.pie`"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:153
msgid "`matplotlib.axes.Axes.bar` / `matplotlib.pyplot.bar`"
msgstr "`matplotlib.axes.Axes.bar` / `matplotlib.pyplot.bar`"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:154
msgid "`matplotlib.projections.polar`"
msgstr "`matplotlib.projections.polar`"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:155
msgid "``Axes.set`` (`matplotlib.artist.Artist.set`)"
msgstr "``Axes.set`` (`matplotlib.artist.Artist.set`)"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:156
msgid "`matplotlib.axes.Axes.set_axis_off`"
msgstr "`matplotlib.axes.Axes.set_axis_off`"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:171
msgid ":download:`Download Python source code: nested_pie.py <nested_pie.py>`"
msgstr ":download:`Descarga el código fuente de Python: nested_pie.py <nested_pie.py>`"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:177
msgid ":download:`Download Jupyter notebook: nested_pie.ipynb <nested_pie.ipynb>`"
msgstr ":download:`Descarga el cuaderno Jupyter: nested_pie.ipynb <nested_pie.ipynb>`"

#: ../../gallery/pie_and_polar_charts/nested_pie.rst:184
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"

