msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:12\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/table_api.po\n"
"X-Crowdin-File-ID: 1958\n"
"Language: es_ES\n"

#: ../../api/table_api.rst:3
msgid "``matplotlib.table``"
msgstr "``matplotlib.table``"

#: matplotlib.table:1 of
msgid "Tables drawing."
msgstr "Tablas de dibujo."

#: matplotlib.table:4 of
msgid "The table implementation in Matplotlib is lightly maintained. For a more featureful table implementation, you may wish to try `blume <https://github.com/swfiua/blume>`_."
msgstr "La implementación de la tabla en Matplotlib se mantiene ligeramente. Para una implementación de tabla más funcional, puede intentar `blume <https://github.com/swfiua/blume>`_."

#: matplotlib.table:8 of
msgid "Use the factory function `~matplotlib.table.table` to create a ready-made table from texts. If you need more control, use the `.Table` class and its methods."
msgstr "Usa la función de fábrica `~matplotlib.table.table` para crear una tabla preparada a partir de textos. Si necesitas más control, usa la clase `.Table` y sus métodos."

#: matplotlib.table:12 of
msgid "The table consists of a grid of cells, which are indexed by (row, column). The cell (0, 0) is positioned at the top left."
msgstr "La tabla consiste en una cuadrícula de células, que son indexadas por (fila, columna) La célula (0, 0) está situada en la parte superior izquierda."

#: matplotlib.table:15 of
msgid "Thanks to John Gill for providing the class and table."
msgstr "Gracias a John Gill por proporcionar la clase y la mesa."

#: matplotlib.table.Cell:1 of
msgid "Bases: :py:class:`matplotlib.patches.Rectangle`"
msgstr "Bases: :py:class:`matplotlib.patches.Rectangle`"

#: matplotlib.table.Cell:2 of
msgid "A cell is a `.Rectangle` with some associated `.Text`."
msgstr "Una célula es un `.Rectangle` con algunos `.Text` asociados."

#: matplotlib.table.Cell:4 of
msgid "As a user, you'll most likely not creates cells yourself. Instead, you should use either the `~matplotlib.table.table` factory function or `.Table.add_cell`."
msgstr "Como usuario, probablemente no crearás las celdas tú mismo. En su lugar, deberías usar la función de fábrica `~matplotlib.table.table` o `.Table.add_cell`."

#: matplotlib.table.Cell matplotlib.table.Cell.draw
#: matplotlib.table.Cell.set_figure matplotlib.table.Cell.set_transform
#: matplotlib.table.Table matplotlib.table.Table.add_cell
#: matplotlib.table.Table.auto_set_column_width matplotlib.table.Table.contains
#: matplotlib.table.Table.draw matplotlib.table.Table.set_fontsize
#: matplotlib.table.table of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.table.Cell:32 of
msgid "**xy**"
msgstr "**xy**"

#: of
msgid "2-tuple"
msgstr "2 tuplas"

#: matplotlib.table.Cell:32 of
msgid "The position of the bottom left corner of the cell."
msgstr "La posición de la esquina inferior izquierda de la celda."

#: matplotlib.table.Cell:35 of
msgid "**width**"
msgstr "**width**"

#: matplotlib.artist.Cell.set:49 matplotlib.artist.Table.set:19
#: matplotlib.artist.Table.set:31 matplotlib.table.Cell.set_text_props:53
#: matplotlib.table.Cell.set_text_props:54
#: matplotlib.table.Cell.set_text_props:55 matplotlib.table.table:89
#: matplotlib.table.table:101 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.table.Cell:35 of
msgid "The cell width."
msgstr "Ancho de la celda."

#: matplotlib.table.Cell:38 of
msgid "**height**"
msgstr "**height**"

#: matplotlib.table.Cell:38 of
msgid "The cell height."
msgstr "Altura de la celda."

#: matplotlib.table.Cell:41 of
msgid "**edgecolor**"
msgstr "**edgecolor**"

#: matplotlib.artist.Cell.set:22 matplotlib.table.Cell.set_text_props:15
#: matplotlib.table.Cell.set_text_props:20 of
msgid "color"
msgstr "color"

#: matplotlib.table.Cell:41 of
msgid "The color of the cell border."
msgstr "El color de la frontera celular."

#: matplotlib.table.Cell:44 of
msgid "**facecolor**"
msgstr "**facecolor**"

#: matplotlib.table.Cell:44 of
msgid "The cell facecolor."
msgstr "El color facial de la célula."

#: matplotlib.table.Cell:47 of
msgid "**fill**"
msgstr "**rellenar**"

#: matplotlib.artist.Cell.set:15 matplotlib.artist.Cell.set:20
#: matplotlib.artist.Cell.set:26 matplotlib.artist.Cell.set:31
#: matplotlib.artist.Cell.set:38 matplotlib.artist.Cell.set:44
#: matplotlib.artist.Table.set:14 matplotlib.artist.Table.set:16
#: matplotlib.artist.Table.set:21 matplotlib.artist.Table.set:25
#: matplotlib.artist.Table.set:30 matplotlib.table.Cell.set_text_props:14
#: matplotlib.table.Cell.set_text_props:31
#: matplotlib.table.Cell.set_text_props:36
#: matplotlib.table.Cell.set_text_props:40
#: matplotlib.table.Cell.set_text_props:47
#: matplotlib.table.Cell.set_text_props:51
#: matplotlib.table.Cell.set_text_props:52 matplotlib.table.table:84
#: matplotlib.table.table:86 matplotlib.table.table:91
#: matplotlib.table.table:95 matplotlib.table.table:100 of
msgid "bool"
msgstr "bool"

#: matplotlib.table.Cell:47 of
msgid "Whether the cell background is filled."
msgstr "Si el fondo de la célula está lleno."

#: matplotlib.table.Cell:50 of
msgid "**text**"
msgstr "**texto**"

#: matplotlib.artist.Cell.set:28 matplotlib.artist.Cell.set:43
#: matplotlib.artist.Table.set:20 matplotlib.artist.Table.set:29
#: matplotlib.table.Cell.set_text_props:29
#: matplotlib.table.Cell.set_text_props:34
#: matplotlib.table.Cell.set_text_props:48 matplotlib.table.table:90
#: matplotlib.table.table:99 of
msgid "str"
msgstr "str"

#: matplotlib.table.Cell:50 of
msgid "The cell text."
msgstr "El texto de la celda."

#: matplotlib.table.Cell:53 matplotlib.table.Table:43 matplotlib.table.table:54
#: of
msgid "**loc**"
msgstr "**loc**"

#: of
msgid "{'left', 'center', 'right'}, default: 'right'"
msgstr "{'left', 'center', 'right'}, predeterminado: 'derecha'"

#: matplotlib.table.Cell:53 of
msgid "The alignment of the text within the cell."
msgstr "La alineación del texto dentro de la celda."

#: matplotlib.table.Cell:57 of
msgid "**fontproperties**"
msgstr "**fontproperties**"

#: of
msgid "dict"
msgstr "dict"

#: matplotlib.table.Cell:56 of
msgid "A dict defining the font properties of the text. Supported keys and values are the keyword arguments accepted by `.FontProperties`."
msgstr "Un dictado que define las propiedades de la fuente del texto. Las claves y valores soportados son los argumentos de palabra clave aceptados por `.FontProperties`."

#: matplotlib.table.Cell:76 of
msgid "**visible_edges**"
msgstr "**visible_bordes**"

#: of
msgid "str, default: 'closed'"
msgstr "str, por defecto: 'cerrado'"

#: matplotlib.table.Cell:60 of
msgid "The cell edges to be drawn with a line: a substring of 'BRTL' (bottom, right, top, left), or one of 'open' (no edges drawn), 'closed' (all edges drawn), 'horizontal' (bottom and top), 'vertical' (right and left)."
msgstr "Los bordes de la celda a ser dibujados con una línea: una subcadena de 'BRTL' (abajo, derecha, arriba, izquierda), o uno de 'abierto' (sin bordes dibujados), 'cerrado' (dibujado en todos los bordes), 'horizontal' (abajo y arriba), 'vertical' (derecha e izquierda)."

#: ../../docstring matplotlib.table.Cell.PAD:2 of
msgid "Padding between text and rectangle."
msgstr "Rellenar entre texto y rectángulo."

#: matplotlib.table.Cell.auto_set_font_size:2 of
msgid "Shrink font size until the text fits into the cell width."
msgstr "Reducir el tamaño de la fuente hasta que el texto encaje en la anchura de la celda."

#: matplotlib.table.Cell.draw:2 matplotlib.table.Table.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr "Dibuja el Artist (y sus hijos) usando el renderizador dado."

#: matplotlib.table.Cell.draw:4 matplotlib.table.Table.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr "Esto no tiene efecto si el artist no es visible (`.Artist.get_visible` devuelve False)."

#: matplotlib.table.Cell.draw:18 matplotlib.table.Table.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr "**renderer** : `.RendererBase` subclase."

#: matplotlib.table.Cell.draw:17 matplotlib.table.Table.draw:17 of
msgid "RendererBase subclass."
msgstr "Subclase RendererBase."

#: matplotlib.table.Cell.draw:21 matplotlib.table.Table.draw:21
#: matplotlib.table.Table.edges:16 matplotlib.table.Table.get_celld:16
#: matplotlib.table.Table.set_fontsize:19 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.table.Cell.draw:22 matplotlib.table.Table.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr "Este método se sobrescribe en las subclases de Artist."

#: matplotlib.table.Cell.get_fontsize:2 of
msgid "Return the cell fontsize."
msgstr "Devuelve el tamaño de fuente de la celda."

#: matplotlib.table.Cell.get_path:2 of
msgid "Return a `.Path` for the `.visible_edges`."
msgstr "Devuelve un `.Path` para el `.visible_edges`."

#: matplotlib.table.Cell.get_required_width:2 of
msgid "Return the minimal required width for the cell."
msgstr "Devuelve el ancho mínimo requerido para la celda."

#: matplotlib.table.Cell.get_text:2 of
msgid "Return the cell `.Text` instance."
msgstr "Devuelve la instancia `.Text` de la celda."

#: matplotlib.table.Cell.get_text_bounds:2 of
msgid "Return the text bounds as *(x, y, width, height)* in table coordinates."
msgstr "Devuelve los límites de texto como *(x, y, anchura, altura)* en las coordenadas de la tabla."

#: matplotlib.artist.Cell.set:2 matplotlib.artist.Table.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.Cell.set:4 matplotlib.artist.Table.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.Cell.set:10 matplotlib.artist.Table.set:10
#: matplotlib.table.Cell.set_text_props:10 matplotlib.table.table:80 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.Cell.set:10 matplotlib.artist.Table.set:10
#: matplotlib.table.Cell.set_text_props:10 matplotlib.table.table:80 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.Cell.set:12 matplotlib.artist.Table.set:12
#: matplotlib.table.Cell.set_text_props:12 matplotlib.table.table:82 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.Cell.set:12 matplotlib.artist.Table.set:12
#: matplotlib.table.Cell.set_text_props:12 matplotlib.table.table:82 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.Cell.set:13 matplotlib.artist.Table.set:13
#: matplotlib.table.Cell.set_text_props:13 matplotlib.table.table:83 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"

#: matplotlib.artist.Cell.set:13 matplotlib.artist.Table.set:13
#: matplotlib.table.Cell.set_text_props:13 matplotlib.table.table:83 of
msgid "scalar or None"
msgstr "escalar o None"

#: matplotlib.artist.Cell.set:14 of
msgid ":meth:`angle <matplotlib.patches.Rectangle.set_angle>`"
msgstr ":meth:`ángulo <matplotlib.patches.Rectangle.set_angle>`"

#: matplotlib.artist.Cell.set:14 matplotlib.artist.Cell.set:25
#: matplotlib.artist.Cell.set:27 matplotlib.artist.Cell.set:30
#: matplotlib.artist.Cell.set:41 matplotlib.artist.Cell.set:42
#: matplotlib.artist.Cell.set:45 matplotlib.artist.Cell.set:46
#: matplotlib.artist.Cell.set:48 matplotlib.table.Cell.set_text_props:17
#: matplotlib.table.Cell.set_text_props:18
#: matplotlib.table.Cell.set_text_props:19 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.artist.Cell.set:15 matplotlib.artist.Table.set:14
#: matplotlib.table.Cell.set_text_props:14 matplotlib.table.table:84 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.Cell.set:16 of
msgid ":meth:`antialiased <matplotlib.patches.Patch.set_antialiased>` or aa"
msgstr ":meth:`antialias <matplotlib.patches.Patch.set_antialiased>` o aa"

#: matplotlib.artist.Cell.set:16 matplotlib.artist.Cell.set:40
#: matplotlib.artist.Table.set:27 matplotlib.table.Cell.set_text_props:44
#: matplotlib.table.Cell.set_text_props:49 matplotlib.table.table:97 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.Cell.set:17 of
msgid ":meth:`bounds <matplotlib.patches.Rectangle.set_bounds>`"
msgstr ":meth:`Límites <matplotlib.patches.Rectangle.set_bounds>`"

#: matplotlib.artist.Cell.set:17 of
msgid "(left, bottom, width, height)"
msgstr "(izquierda, inferior, anchura, altura)"

#: matplotlib.artist.Cell.set:18 of
msgid ":meth:`capstyle <matplotlib.patches.Patch.set_capstyle>`"
msgstr ":meth:`capstyle <matplotlib.patches.Patch.set_capstyle>`"

#: matplotlib.artist.Cell.set:18 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr "`.CapStyle` o {'butt', 'projecting', 'round'}"

#: matplotlib.artist.Cell.set:19 matplotlib.artist.Table.set:15
#: matplotlib.table.Cell.set_text_props:17 matplotlib.table.table:85 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.Cell.set:19 matplotlib.artist.Table.set:15
#: matplotlib.table.table:85 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.artist.Cell.set:20 matplotlib.artist.Table.set:16
#: matplotlib.table.Cell.set_text_props:18 matplotlib.table.table:86 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.Cell.set:21 matplotlib.artist.Table.set:17
#: matplotlib.table.Cell.set_text_props:19 matplotlib.table.table:87 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.Cell.set:21 matplotlib.artist.Table.set:17
#: matplotlib.table.table:87 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.artist.Cell.set:22 of
msgid ":meth:`color <matplotlib.patches.Patch.set_color>`"
msgstr ":meth:`color <matplotlib.patches.Patch.set_color>`"

#: matplotlib.artist.Cell.set:23 of
msgid ":meth:`edgecolor <matplotlib.patches.Patch.set_edgecolor>` or ec"
msgstr ":meth:`edgecolor <matplotlib.patches.Patch.set_edgecolor>` o ec"

#: matplotlib.artist.Cell.set:23 matplotlib.artist.Cell.set:24 of
msgid "color or None"
msgstr "color o ninguno"

#: matplotlib.artist.Cell.set:24 of
msgid ":meth:`facecolor <matplotlib.patches.Patch.set_facecolor>` or fc"
msgstr ":meth:`facecolor <matplotlib.patches.Patch.set_facecolor>` o fc"

#: matplotlib.artist.Cell.set:25 matplotlib.artist.Table.set:18
#: matplotlib.table.Cell.set_text_props:21 matplotlib.table.table:88 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.Cell.set:26 of
msgid ":meth:`fill <matplotlib.patches.Patch.set_fill>`"
msgstr ":meth:`rellenar <matplotlib.patches.Patch.set_fill>`"

#: matplotlib.artist.Cell.set:27 of
msgid ":meth:`fontsize <matplotlib.table.Cell.set_fontsize>`"
msgstr ":meth:`fontsize <matplotlib.table.Cell.set_fontsize>`"

#: matplotlib.artist.Cell.set:28 matplotlib.artist.Table.set:20
#: matplotlib.table.Cell.set_text_props:29 matplotlib.table.table:90 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.Cell.set:29 of
msgid ":meth:`hatch <matplotlib.patches.Patch.set_hatch>`"
msgstr ":meth:`colgante <matplotlib.patches.Patch.set_hatch>`"

#: matplotlib.artist.Cell.set:29 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"

#: matplotlib.artist.Cell.set:30 of
msgid ":meth:`height <matplotlib.patches.Rectangle.set_height>`"
msgstr ":meth:`height <matplotlib.patches.Rectangle.set_height>`"

#: matplotlib.artist.Cell.set:31 matplotlib.artist.Table.set:21
#: matplotlib.table.Cell.set_text_props:31 matplotlib.table.table:91 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.Cell.set:32 of
msgid ":meth:`joinstyle <matplotlib.patches.Patch.set_joinstyle>`"
msgstr ":meth:`joinstyle <matplotlib.patches.Patch.set_joinstyle>`"

#: matplotlib.artist.Cell.set:32 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr "`.JoinStyle` o {'miter', 'round', 'bevel'}"

#: matplotlib.artist.Cell.set:33 matplotlib.artist.Table.set:22
#: matplotlib.table.Cell.set_text_props:32 matplotlib.table.table:92 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.Cell.set:33 matplotlib.artist.Table.set:22
#: matplotlib.table.Cell.set_text_props:32
#: matplotlib.table.Cell.set_text_props:45 matplotlib.table.table:92 of
msgid "object"
msgstr "object"

#: matplotlib.artist.Cell.set:34 of
msgid ":meth:`linestyle <matplotlib.patches.Patch.set_linestyle>` or ls"
msgstr ":meth:`linestyle <matplotlib.patches.Patch.set_linestyle>` o ls"

#: matplotlib.artist.Cell.set:34 of
msgid "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"
msgstr "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"

#: matplotlib.artist.Cell.set:35 of
msgid ":meth:`linewidth <matplotlib.patches.Patch.set_linewidth>` or lw"
msgstr ":meth:`linewidth <matplotlib.patches.Patch.set_linewidth>` or lw"

#: matplotlib.artist.Cell.set:35 of
msgid "float or None"
msgstr "float o None"

#: matplotlib.artist.Cell.set:36 matplotlib.artist.Table.set:23
#: matplotlib.table.Cell.set_text_props:37 matplotlib.table.table:93 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.Cell.set:36 matplotlib.artist.Table.set:23
#: matplotlib.table.Cell.set_text_props:37 matplotlib.table.table:93 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.Cell.set:37 matplotlib.artist.Table.set:24
#: matplotlib.table.Cell.set_text_props:38 matplotlib.table.table:94 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.Cell.set:37 matplotlib.artist.Table.set:24
#: matplotlib.table.Cell.set_text_props:38 matplotlib.table.table:94 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.Cell.set:38 matplotlib.artist.Table.set:25
#: matplotlib.table.Cell.set_text_props:40 matplotlib.table.table:95 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.Cell.set:39 matplotlib.artist.Table.set:26
#: matplotlib.table.Cell.set_text_props:43 matplotlib.table.table:96 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.Cell.set:39 matplotlib.artist.Table.set:26
#: matplotlib.table.Cell.set_text_props:43 matplotlib.table.table:96 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.Cell.set:40 matplotlib.artist.Table.set:27
#: matplotlib.table.Cell.set_text_props:44 matplotlib.table.table:97 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.Cell.set:41 of
msgid ":meth:`text_props <matplotlib.table.Cell.set_text_props>`"
msgstr ":meth:`text_props <matplotlib.table.Cell.set_text_props>`"

#: matplotlib.artist.Cell.set:42 matplotlib.artist.Table.set:28
#: matplotlib.table.Cell.set_text_props:46 matplotlib.table.table:98 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.Cell.set:43 matplotlib.artist.Table.set:29
#: matplotlib.table.Cell.set_text_props:48 matplotlib.table.table:99 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.Cell.set:44 matplotlib.artist.Table.set:30
#: matplotlib.table.Cell.set_text_props:51 matplotlib.table.table:100 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.Cell.set:45 of
msgid ":meth:`width <matplotlib.patches.Rectangle.set_width>`"
msgstr ":meth:`width <matplotlib.patches.Rectangle.set_width>`"

#: matplotlib.artist.Cell.set:46 of
msgid ":meth:`x <matplotlib.patches.Rectangle.set_x>`"
msgstr ":meth:`x <matplotlib.patches.Rectangle.set_x>`"

#: matplotlib.artist.Cell.set:47 of
msgid ":meth:`xy <matplotlib.patches.Rectangle.set_xy>`"
msgstr ":meth:`xy <matplotlib.patches.Rectangle.set_xy>`"

#: matplotlib.artist.Cell.set:47 matplotlib.table.Cell.set_text_props:39 of
msgid "(float, float)"
msgstr "(float, float)"

#: matplotlib.artist.Cell.set:48 of
msgid ":meth:`y <matplotlib.patches.Rectangle.set_y>`"
msgstr ":meth:`y <matplotlib.patches.Rectangle.set_y>`"

#: matplotlib.artist.Cell.set:49 matplotlib.artist.Table.set:31
#: matplotlib.table.Cell.set_text_props:55 matplotlib.table.table:101 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.table.Cell.set_figure:2 of
msgid "Set the `.Figure` instance the artist belongs to."
msgstr "Establece la instancia `.Figure` a la que pertenece el artist."

#: matplotlib.table.Cell.set_figure:21 of
msgid "**fig** : `.Figure`"
msgstr "**fig** : `.Figure`"

#: matplotlib.table.Cell.set_figure:20 of
msgid "Figure"
msgstr "Figura"

#: matplotlib.table.Cell.set_fontsize:2 of
msgid "Set the text fontsize."
msgstr "Ajuste el tamaño de fuente del texto."

#: matplotlib.table.Cell.set_text_props:2 of
msgid "Update the text properties."
msgstr "Actualizar las propiedades del texto."

#: matplotlib.table.Cell.set_text_props:4 of
msgid "Valid keyword arguments are:"
msgstr "Los argumentos válidos de la palabra clave son:"

#: matplotlib.table.Cell.set_text_props:15 of
msgid ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"
msgstr ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"

#: matplotlib.table.Cell.set_text_props:16 of
msgid ":meth:`bbox <matplotlib.text.Text.set_bbox>`"
msgstr ":meth:`bbox <matplotlib.text.Text.set_bbox>`"

#: matplotlib.table.Cell.set_text_props:16 of
msgid "dict with properties for `.patches.FancyBboxPatch`"
msgstr "dict con propiedades para `.patches.FancyBboxPatch`"

#: matplotlib.table.Cell.set_text_props:20 of
msgid ":meth:`color <matplotlib.text.Text.set_color>` or c"
msgstr ":meth:`color <matplotlib.text.Text.set_color>` or c"

#: matplotlib.artist.Table.set:18 matplotlib.table.Cell.set_text_props:21
#: matplotlib.table.table:88 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.table.Cell.set_text_props:22 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` or family"
msgstr ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` o familia"

#: matplotlib.table.Cell.set_text_props:22 of
msgid "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"
msgstr "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"

#: matplotlib.table.Cell.set_text_props:23 of
msgid ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` or font or font_properties"
msgstr ":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` o font o font_properties"

#: matplotlib.table.Cell.set_text_props:23 of
msgid "`.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr "`.font_manager.FontProperties` o `str` o `pathlib.Path`"

#: matplotlib.table.Cell.set_text_props:24 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` or size"
msgstr ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` o size"

#: matplotlib.table.Cell.set_text_props:24 of
msgid "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
msgstr "float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"

#: matplotlib.table.Cell.set_text_props:25 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"
msgstr ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"

#: matplotlib.table.Cell.set_text_props:25 of
msgid "{a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}"

#: matplotlib.table.Cell.set_text_props:26 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` or style"
msgstr ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` o style"

#: matplotlib.table.Cell.set_text_props:26 of
msgid "{'normal', 'italic', 'oblique'}"
msgstr "{'normal', 'italic', 'oblique'}"

#: matplotlib.table.Cell.set_text_props:27 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` or variant"
msgstr ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` o variant"

#: matplotlib.table.Cell.set_text_props:27 of
msgid "{'normal', 'small-caps'}"
msgstr "{'normal', 'small-caps'}"

#: matplotlib.table.Cell.set_text_props:28 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"
msgstr ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"

#: matplotlib.table.Cell.set_text_props:28 of
msgid "{a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"
msgstr "{un valor numérico en el rango 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}"

#: matplotlib.table.Cell.set_text_props:30 of
msgid ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"
msgstr ":meth:`horizontalalignment <matplotlib.text.Text.set_horizontalalignment>` or ha"

#: matplotlib.table.Cell.set_text_props:30 of
msgid "{'center', 'right', 'left'}"
msgstr "{'center', 'right', 'left'}"

#: matplotlib.table.Cell.set_text_props:33 of
msgid ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"
msgstr ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"

#: matplotlib.table.Cell.set_text_props:33 of
msgid "float (multiple of font size)"
msgstr "float (múltiplo del tamaño de la fuente)"

#: matplotlib.table.Cell.set_text_props:34 of
msgid ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"
msgstr ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"

#: matplotlib.table.Cell.set_text_props:35 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` or ma"
msgstr ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` o ma"

#: matplotlib.table.Cell.set_text_props:35 of
msgid "{'left', 'right', 'center'}"
msgstr "{'left', 'right', 'center'}"

#: matplotlib.table.Cell.set_text_props:36 of
msgid ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"
msgstr ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"

#: matplotlib.table.Cell.set_text_props:39 of
msgid ":meth:`position <matplotlib.text.Text.set_position>`"
msgstr ":meth:`position <matplotlib.text.Text.set_position>`"

#: matplotlib.table.Cell.set_text_props:41 of
msgid ":meth:`rotation <matplotlib.text.Text.set_rotation>`"
msgstr ":meth:`rotation <matplotlib.text.Text.set_rotation>`"

#: matplotlib.table.Cell.set_text_props:41 of
msgid "float or {'vertical', 'horizontal'}"
msgstr "float o {'vertical', 'horizontal'}"

#: matplotlib.table.Cell.set_text_props:42 of
msgid ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"
msgstr ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"

#: matplotlib.table.Cell.set_text_props:42 of
msgid "{None, 'default', 'anchor'}"
msgstr "{None, 'default', 'anchor'}"

#: matplotlib.table.Cell.set_text_props:45 of
msgid ":meth:`text <matplotlib.text.Text.set_text>`"
msgstr ":meth:`text <matplotlib.text.Text.set_text>`"

#: matplotlib.artist.Table.set:28 matplotlib.table.Cell.set_text_props:46
#: matplotlib.table.table:98 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.table.Cell.set_text_props:47 of
msgid ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"
msgstr ":meth:`transform_rotates_text <matplotlib.text.Text.set_transform_rotates_text>`"

#: matplotlib.table.Cell.set_text_props:49 of
msgid ":meth:`usetex <matplotlib.text.Text.set_usetex>`"
msgstr ":meth:`usetex <matplotlib.text.Text.set_usetex>`"

#: matplotlib.table.Cell.set_text_props:50 of
msgid ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"
msgstr ":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or va"

#: matplotlib.table.Cell.set_text_props:50 of
msgid "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
msgstr "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"

#: matplotlib.table.Cell.set_text_props:52 of
msgid ":meth:`wrap <matplotlib.text.Text.set_wrap>`"
msgstr ":meth:`wrap <matplotlib.text.Text.set_wrap>`"

#: matplotlib.table.Cell.set_text_props:53 of
msgid ":meth:`x <matplotlib.text.Text.set_x>`"
msgstr ":meth:`x <matplotlib.text.Text.set_x>`"

#: matplotlib.table.Cell.set_text_props:54 of
msgid ":meth:`y <matplotlib.text.Text.set_y>`"
msgstr ":meth:`y <matplotlib.text.Text.set_y>`"

#: matplotlib.table.Cell.set_transform:2 of
msgid "Set the artist transform."
msgstr "Establece la transformación del artista."

#: matplotlib.table.Cell.set_transform:21 of
msgid "**t** : `.Transform`"
msgstr "**t** : `.Transform`"

#: matplotlib.table.Cell.set_transform:20 of
msgid "Transform"
msgstr "Transformar"

#: matplotlib.table.Cell.visible_edges:2 of
msgid "The cell edges to be drawn with a line."
msgstr "Los bordes de la célula a dibujar con una línea."

#: matplotlib.table.Cell.visible_edges:4 of
msgid "Reading this property returns a substring of 'BRTL' (bottom, right, top, left')."
msgstr "La lectura de esta propiedad devuelve una subcadena de 'BRTL' (abajo, derecha, arriba, izquierda')."

#: matplotlib.table.Cell.visible_edges:7 of
msgid "When setting this property, you can use a substring of 'BRTL' or one of {'open', 'closed', 'horizontal', 'vertical'}."
msgstr "Al configurar esta propiedad, puede utilizar una subcadena de 'BRTL' o una de {'open', 'closed', 'horizontal', 'vertical'}."

#: matplotlib.table.Table:1 of
msgid "Bases: :py:class:`matplotlib.artist.Artist`"
msgstr "Bases: :py:class:`matplotlib.artist.Artist`"

#: matplotlib.table.Table:2 of
msgid "A table of cells."
msgstr "Una tabla de células."

#: matplotlib.table.Table:4 of
msgid "The table consists of a grid of cells, which are indexed by (row, column)."
msgstr "La tabla consiste en una cuadrícula de celdas, que son indexadas por (fila, columna)."

#: matplotlib.table.Table:6 of
msgid "For a simple table, you'll have a full grid of cells with indices from (0, 0) to (num_rows-1, num_cols-1), in which the cell (0, 0) is positioned at the top left. However, you can also add cells with negative indices. You don't have to add a cell to every grid position, so you can create tables that have holes."
msgstr "Para una tabla simple, tendrás una cuadrícula completa de células con índices de (0, 0) a (num_rows-1, num_cols-1), en la que la celda (0, 0) está posicionada en la parte superior izquierda. Sin embargo, también puede agregar células con índices negativos. No tienes que añadir una celda a cada posición de la cuadrícula para que puedas crear mesas con agujeros."

#: matplotlib.table.Table:12 of
msgid "*Note*: You'll usually not create an empty table from scratch. Instead use `~matplotlib.table.table` to create a table from data."
msgstr "*Nota*: Generalmente no crearás una tabla vacía desde cero. En su lugar, usa `~matplotlib.table.table` para crear una tabla a partir de datos."

#: matplotlib.table.Table:39 of
msgid "**ax** : `matplotlib.axes.Axes`"
msgstr "**ax** : `matplotlib.axes.Axes`"

#: matplotlib.table.Table:38 of
msgid "matplotlib.axes.Axes"
msgstr "matplotlib.axes.Axes"

#: matplotlib.table.Table:39 of
msgid "The `~.axes.Axes` to plot the table into."
msgstr "El `~.axes.Axes` en el que graficar la tabla."

#: matplotlib.table.Table:42 matplotlib.table.table:53 of
msgid "The position of the cell with respect to *ax*. This must be one of the `~.Table.codes`."
msgstr "La posición de la celda con respecto a *ax*. Debe ser una de las `~.Table.codes`."

#: matplotlib.table.Table:50 of
msgid "**bbox** : `.Bbox` or None"
msgstr "**bbox** : `.Bbox` o ninguno"

#: matplotlib.table.Table:49 of
msgid "Bbox or None"
msgstr "Caja o ninguno"

#: matplotlib.table.Table:46 matplotlib.table.table:57 of
msgid "A bounding box to draw the table into. If this is not *None*, this overrides *loc*."
msgstr "Una caja de límites en la que dibujar la tabla. Si esto no es *nunca*, esto anula *loc*."

#: matplotlib.table.Table matplotlib.table.table of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.table.Table:64 matplotlib.table.table:111 of
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: matplotlib.table.Table:55 of
msgid "`.Artist` properties."
msgstr "Propiedades `.Artist`."

#: ../../docstring matplotlib.table.Table.AXESPAD:2 of
msgid "The border between the Axes and the table edge in Axes units."
msgstr "El borde entre los ejes y el borde de la mesa en unidades de ejes."

#: matplotlib.table.Table.add_cell:2 of
msgid "Create a cell and add it to the table."
msgstr "Crear una celda y añadirla a la tabla."

#: matplotlib.table.Table.add_cell:8 of
msgid "**row**"
msgstr "**fila**"

#: of
msgid "int"
msgstr "int"

#: matplotlib.table.Table.add_cell:8 of
msgid "Row index."
msgstr "Índice de fila."

#: matplotlib.table.Table.add_cell:11
#: matplotlib.table.Table.auto_set_column_width:21 of
msgid "**col**"
msgstr "**col**"

#: matplotlib.table.Table.add_cell:11 of
msgid "Column index."
msgstr "Índice de columna."

#: matplotlib.table.Table.add_cell:14 of
msgid "**\\*args, **kwargs**"
msgstr "**\\*args, **kwargs**"

#: matplotlib.table.Table.add_cell:14 of
msgid "All other parameters are passed on to `Cell`."
msgstr "Todos los demás parámetros se pasan a `Cell`."

#: matplotlib.table.Table.add_cell matplotlib.table.Table.contains
#: matplotlib.table.table of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.table.Table.add_cell:31 of
msgid "`.Cell`"
msgstr "`.Cell`"

#: matplotlib.table.Table.add_cell:19 of
msgid "The created cell."
msgstr "La célula creada."

#: matplotlib.table.Table.auto_set_column_width:2 of
msgid "Automatically set the widths of given columns to optimal sizes."
msgstr "Establecer automáticamente los anchos de las columnas a tamaños óptimos."

#: of
msgid "int or sequence of ints"
msgstr "int o secuencia de pistas"

#: matplotlib.table.Table.auto_set_column_width:8 of
msgid "The indices of the columns to auto-scale."
msgstr "Los índices de las columnas a escala automática."

#: matplotlib.table.Table.auto_set_font_size:2 of
msgid "Automatically set font size."
msgstr "Establecer automáticamente el tamaño de la fuente."

#: ../../docstring matplotlib.table.Table.codes:2 of
msgid "Possible values where to place the table relative to the Axes."
msgstr "Posibles valores donde colocar la tabla relativa a los ejes."

#: matplotlib.table.Table.contains:2 of
msgid "Test whether the artist contains the mouse event."
msgstr "Prueba si el artist contiene el evento del ratón."

#: matplotlib.table.Table.contains:8 of
msgid "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"
msgstr "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"

#: matplotlib.table.Table.contains:7 of
msgid "matplotlib.backend_bases.MouseEvent"
msgstr "matplotlib.backend_bases.MouseEvent"

#: matplotlib.table.Table.contains:13 of
msgid "**contains**"
msgstr "**contains**"

#: matplotlib.table.Table.contains:13 of
msgid "Whether any values are within the radius."
msgstr "Si cualquier valor está dentro del radio."

#: matplotlib.table.Table.contains:30 of
msgid "**details**"
msgstr "**details**"

#: matplotlib.table.Table.contains:16 of
msgid "An artist-specific dictionary of details of the event context, such as which points are contained in the pick radius. See the individual Artist subclasses for details."
msgstr "Un diccionario específico del artist con detalles del contexto del evento, como por ejemplo qué puntos están contenidos en el radio de selección. Consulta las subclases individuales de Artist para obtener más detalles."

#: matplotlib.table.Table.edges:2 of
msgid "The default value of `~.Cell.visible_edges` for newly added cells using `.add_cell`."
msgstr "El valor predeterminado de `~.Cell.visible_edges` para celdas añadidas recientemente usando `.add_cell`."

#: matplotlib.table.Table.edges:17 of
msgid "This setting does currently only affect newly created cells using `.add_cell`."
msgstr "Esta configuración actualmente sólo afecta a las celdas recién creadas usando `.add_cell`."

#: matplotlib.table.Table.edges:20 of
msgid "To change existing cells, you have to set their edges explicitly::"
msgstr "Para cambiar las células existentes, tienes que establecer sus bordes explícitamente::"

#: matplotlib.table.Table.get_celld:2 of
msgid "Return a dict of cells in the table mapping *(row, column)* to `.Cell`\\s."
msgstr "Devuelve un dictado de celdas en el mapeo de la tabla *(fila, columna)* a `.Cell`\\s."

#: matplotlib.table.Table.get_celld:17 of
msgid "You can also directly index into the Table object to access individual cells::"
msgstr "También puedes indexar directamente en el objeto Tabla para acceder a celdas individuales::"

#: matplotlib.table.Table.get_children:2 of
msgid "Return the Artists contained by the table."
msgstr "Devuelve los Artistas contenidos en la mesa."

#: matplotlib.table.Table.get_window_extent:2 of
msgid "Get the artist's bounding box in display space."
msgstr "Obtenga la caja delimitadora del artist en el espacio de visualización."

#: matplotlib.table.Table.get_window_extent:4 of
msgid "The bounding box' width and height are nonnegative."
msgstr "La anchura y la altura de la caja delimitadora son no negativas."

#: matplotlib.table.Table.get_window_extent:6 of
msgid "Subclasses should override for inclusion in the bounding box \"tight\" calculation. Default is to return an empty bounding box at 0, 0."
msgstr "Las subclases deben anularlo para incluirlo en el cálculo de la caja delimitadora \"ajustada\". Por defecto devuelve una caja delimitadora vacía en 0, 0."

#: matplotlib.table.Table.get_window_extent:10 of
msgid "Be careful when using this function, the results will not update if the artist window extent of the artist changes.  The extent can change due to any changes in the transform stack, such as changing the axes limits, the figure size, or the canvas used (as is done when saving a figure).  This can lead to unexpected behavior where interactive figures will look fine on the screen, but will save incorrectly."
msgstr "Ten cuidado cuando uses esta función, los resultados no se actualizarán si la extensión de la ventana del artist cambia.  La extensión puede cambiar debido a cualquier cambio en la pila de transformaciones, como cambiar los límites de los ejes, el tamaño de la figura o el lienzo utilizado (como se hace al guardar una figura).  Esto puede llevar a un comportamiento inesperado donde las figuras interactivas se verán bien en la pantalla, pero se guardarán incorrectamente."

#: matplotlib.table.Table.scale:2 of
msgid "Scale column widths by *xscale* and row heights by *yscale*."
msgstr "Escala los anchos de las columnas por *xscale* y las alturas de las filas por *yscale*."

#: matplotlib.artist.Table.set:19 matplotlib.table.table:89 of
msgid ":meth:`fontsize <matplotlib.table.Table.set_fontsize>`"
msgstr ":meth:`fontsize <matplotlib.table.Table.set_fontsize>`"

#: matplotlib.table.Table.set_fontsize:2 of
msgid "Set the font size, in points, of the cell text."
msgstr "Ajuste el tamaño de la fuente, en puntos, del texto de la celda."

#: matplotlib.table.Table.set_fontsize:16 of
msgid "**size**"
msgstr "**size**"

#: matplotlib.table.Table.set_fontsize:20 of
msgid "As long as auto font size has not been disabled, the value will be clipped such that the text fits horizontally into the cell."
msgstr "Mientras no se desactive el tamaño de fuente automático, el valor será recortado de tal manera que el texto encaje horizontalmente en la clula."

#: matplotlib.table.Table.set_fontsize:23 of
msgid "You can disable this behavior using `.auto_set_font_size`."
msgstr "Puede desactivar este comportamiento usando `.auto_set_font_size`."

#: matplotlib.table.Table.set_fontsize:28 of
msgid "However, there is no automatic scaling of the row height so that the text may exceed the cell boundary."
msgstr "Sin embargo, no hay una escala automática de la altura de la fila para que el texto pueda exceder el límite de la celda."

#: matplotlib.table.table:2 of
msgid "Add a table to an `~.axes.Axes`."
msgstr "Añade una tabla a un `~.axes.Axes`."

#: matplotlib.table.table:4 of
msgid "At least one of *cellText* or *cellColours* must be specified. These parameters must be 2D lists, in which the outer lists define the rows and the inner list define the column values per row. Each row must have the same number of elements."
msgstr "Debe especificar al menos uno de *cellText* o *cellColours*. Estos parámetros deben ser listas 2D, en las cuales las listas externas definen las filas y la lista interna definen los valores de columna por fila. Cada registro debe tener el mismo número de elementos."

#: matplotlib.table.table:9 of
msgid "The table can optionally have row and column headers, which are configured using *rowLabels*, *rowColours*, *rowLoc* and *colLabels*, *colColours*, *colLoc* respectively."
msgstr "La tabla puede opcionalmente tener cabeceras de columnas y registros, que están configuradas usando *rowLabels*, *rowColours*, *rowLoc* y *colLabels*, *colours*, *colLoc* respectivamente."

#: matplotlib.table.table:13 of
msgid "For finer grained control over tables, use the `.Table` class and add it to the axes with `.Axes.add_table`."
msgstr "Para un control más fino de las tablas, usa la clase `.Table` y agrégala a los ejes con `.Axes.add_table`."

#: matplotlib.table.table:22 of
msgid "**cellText**"
msgstr "**cellText**"

#: of
msgid "2D list of str, optional"
msgstr "Lista 2D de str, opcional"

#: matplotlib.table.table:19 of
msgid "The texts to place into the table cells."
msgstr "Los textos a colocar en las celdas de mesa."

#: matplotlib.table.table:21 of
msgid "*Note*: Line breaks in the strings are currently not accounted for and will result in the text exceeding the cell boundaries."
msgstr "*Nota*: Los saltos de línea en las cadenas no se contabilizan actualmente y resultarán en que el texto excede los límites de la celda."

#: matplotlib.table.table:25 of
msgid "**cellColours**"
msgstr "**cellColours**"

#: of
msgid "2D list of colors, optional"
msgstr "Lista 2D de colores, opcional"

#: matplotlib.table.table:25 of
msgid "The background colors of the cells."
msgstr "Los colores de fondo de las células."

#: matplotlib.table.table:28 of
msgid "**cellLoc**"
msgstr "**celda**"

#: matplotlib.table.table:28 of
msgid "The alignment of the text within the cells."
msgstr "La alineación del texto dentro de las células."

#: matplotlib.table.table:32 of
msgid "**colWidths**"
msgstr "**colWidths**"

#: of
msgid "list of float, optional"
msgstr "lista de flotante, opcional"

#: matplotlib.table.table:31 of
msgid "The column widths in units of the axes. If not given, all columns will have a width of *1 / ncols*."
msgstr "El ancho de la columna en unidades de los ejes. Si no se proporciona, todas las columnas tendrán un ancho de *1 / ncols*."

#: matplotlib.table.table:35 of
msgid "**rowLabels**"
msgstr "**etiquetas**"

#: of
msgid "list of str, optional"
msgstr "lista de str, opcional"

#: matplotlib.table.table:35 of
msgid "The text of the row header cells."
msgstr "El texto de las celdas de cabecera de fila."

#: matplotlib.table.table:38 of
msgid "**rowColours**"
msgstr "**rowColours**"

#: of
msgid "list of colors, optional"
msgstr "lista de colores, opcional"

#: matplotlib.table.table:38 of
msgid "The colors of the row header cells."
msgstr "Los colores de las celdas de cabecera de fila."

#: matplotlib.table.table:41 of
msgid "**rowLoc**"
msgstr "**rowLoc**"

#: of
msgid "{'left', 'center', 'right'}, default: 'left'"
msgstr "{'left', 'center', 'right'}, por defecto: 'izquierda'"

#: matplotlib.table.table:41 of
msgid "The text alignment of the row header cells."
msgstr "El texto de la alineación de las celdas de cabecera de fila."

#: matplotlib.table.table:44 of
msgid "**colLabels**"
msgstr "**colEtiquetas**"

#: matplotlib.table.table:44 of
msgid "The text of the column header cells."
msgstr "El texto de las celdas de cabecera de columna."

#: matplotlib.table.table:47 of
msgid "**colColours**"
msgstr "**colColours**"

#: matplotlib.table.table:47 of
msgid "The colors of the column header cells."
msgstr "Los colores de las celdas de cabecera de columna."

#: matplotlib.table.table:50 of
msgid "**colLoc**"
msgstr "**colLoc**"

#: matplotlib.table.table:50 of
msgid "The text alignment of the column header cells."
msgstr "El texto alineación de las celdas de cabecera de columna."

#: of
msgid "str, optional"
msgstr "str, opcional"

#: matplotlib.table.table:58 of
msgid "**bbox** : `.Bbox`, optional"
msgstr "**bbox** : `.Bbox`, opcional"

#: matplotlib.table.table:57 of
msgid "Bbox, optional"
msgstr "Bbox, opcional"

#: matplotlib.table.table:62 of
msgid "**edges**"
msgstr "**bordes**"

#: of
msgid "substring of 'BRTL' or {'open', 'closed', 'horizontal', 'vertical'}"
msgstr "subcadena de 'BRTL' o {'open', 'closed', 'horizontal', 'vertical'}"

#: matplotlib.table.table:61 of
msgid "The cell edges to be drawn with a line. See also `~.Cell.visible_edges`."
msgstr "Los bordes de las celdas a dibujar con una línea. Ver también `~.Cell.visible_edges`."

#: matplotlib.table.table:69 of
msgid "`~matplotlib.table.Table`"
msgstr "`~matplotlib.table.Table`"

#: matplotlib.table.table:67 of
msgid "The created table."
msgstr "La tabla creada."

#: matplotlib.table.table:74 of
msgid "`.Table` properties."
msgstr "Propiedades `.Table`."

