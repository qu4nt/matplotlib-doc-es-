msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-02 14:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/container_api.po\n"
"X-Crowdin-File-ID: 1772\n"
"Language: es_ES\n"

#: ../../api/container_api.rst:3
msgid "``matplotlib.container``"
msgstr "``matplotlib.container``"

#: matplotlib.container.BarContainer:1 matplotlib.container.ErrorbarContainer:1
#: matplotlib.container.StemContainer:1 of
msgid "Bases: :py:class:`matplotlib.container.Container`"
msgstr "Bases: :py:class:`matplotlib.container.Container`"

#: matplotlib.container.BarContainer:2 of
msgid "Container for the artists of bar plots (e.g. created by `.Axes.bar`)."
msgstr "Contenedor para los artistas de las parcelas de barras (por ejemplo, creado por `.Axes.bar`)."

#: matplotlib.container.BarContainer:4 of
msgid "The container can be treated as a tuple of the *patches* themselves. Additionally, you can access these and further parameters by the attributes."
msgstr "El contenedor puede ser tratado como una tupla de los *parches*. Además, puede acceder a estos y otros parámetros mediante los atributos."

#: matplotlib.container.BarContainer matplotlib.container.ErrorbarContainer
#: matplotlib.container.StemContainer of
msgid "Attributes"
msgstr "Atributos"

#: matplotlib.container.BarContainer:23 of
msgid "**patches** : list of :class:`~matplotlib.patches.Rectangle`"
msgstr "**parches** : lista de :class:`~matplotlib.patches.Rectangle`"

#: of
msgid "list of"
msgstr "lista de"

#: matplotlib.container.BarContainer:23 of
msgid "The artists of the bars."
msgstr "Los artistas de los bares."

#: matplotlib.container.BarContainer:27 of
msgid "**errorbar** : None or :class:`~matplotlib.container.ErrorbarContainer`"
msgstr "**errorbar** : Ninguno o :class:`~matplotlib.container.ErrorbarContainer`"

#: of
msgid "None or"
msgstr "None o"

#: matplotlib.container.BarContainer:26 of
msgid "A container for the error bar artists if error bars are present. *None* otherwise."
msgstr "Un contenedor para los artistas de la barra de error si las barras de error están presentes."

#: matplotlib.container.BarContainer:30 of
msgid "**datavalues**"
msgstr "**datavalues**"

#: of
msgid "None or array-like"
msgstr "Ninguno o matriz"

#: matplotlib.container.BarContainer:30 of
msgid "The underlying data values corresponding to the bars."
msgstr "Los valores de datos subyacentes correspondientes a las barras."

#: matplotlib.container.BarContainer:35 of
msgid "**orientation**"
msgstr "**orientación**"

#: of
msgid "{'vertical', 'horizontal'}, default: None"
msgstr "{'vertical', 'horizontal'}, por defecto: ninguno"

#: matplotlib.container.BarContainer:33 of
msgid "If 'vertical', the bars are assumed to be vertical. If 'horizontal', the bars are assumed to be horizontal."
msgstr "Si es 'vertical', se asume que las barras son verticales. Si 'horizontal', las barras son asumidas como horizontales."

#: matplotlib.container.Container:1 of
msgid "Bases: :py:class:`tuple`"
msgstr "Bases: :py:class:`tuple`"

#: matplotlib.container.Container:2 of
msgid "Base class for containers."
msgstr "Clase base para contenedores."

#: matplotlib.container.Container:4 of
msgid "Containers are classes that collect semantically related Artists such as the bars of a bar plot."
msgstr "Los contenedores son clases que recogen artistas semánticamente relacionados como las barras de una parcela de barras."

#: matplotlib.artist.Artist.add_callback:2 of
msgid "Add a callback function that will be called whenever one of the `.Artist`'s properties changes."
msgstr "Añade una función callback que será llamada cada vez que cambie una de las propiedades de `.Artist`."

#: matplotlib.artist.Artist.add_callback matplotlib.artist.Artist.set_label
#: matplotlib.container.StemContainer of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.artist.Artist.add_callback:14 of
msgid "**func**"
msgstr "**func**"

#: of
msgid "callable"
msgstr "llamable"

#: matplotlib.artist.Artist.add_callback:9 of
msgid "The callback function. It must have the signature::"
msgstr "La función callback. Debe tener la firma::"

#: matplotlib.artist.Artist.add_callback:13 of
msgid "where *artist* is the calling `.Artist`. Return values may exist but are ignored."
msgstr "donde *artist* es la llamada `.Artist`. Los valores de retorno pueden existir pero son ignorados."

#: matplotlib.artist.Artist.add_callback of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.artist.Artist.add_callback:26 of
msgid "int"
msgstr "int"

#: matplotlib.artist.Artist.add_callback:19 of
msgid "The observer id associated with the callback. This id can be used for removing the callback with `.remove_callback` later."
msgstr "El id del observador asociado con el callback. Este id puede utilizarse para eliminar el callback con `.remove_callback` más adelante."

#: matplotlib.artist.Artist.add_callback:31
#: matplotlib.artist.Artist.pchanged:19 of
msgid ":obj:`remove_callback`"
msgstr ":obj:`remove_callback`"

#: matplotlib.artist.Artist.get_label:2 of
msgid "Return the label used for this artist in the legend."
msgstr "Devuelve la etiqueta usada para este artista en la leyenda."

#: matplotlib.artist.Artist.pchanged:2 of
msgid "Call all of the registered callbacks."
msgstr "Llama a todos los callbacks registrados."

#: matplotlib.artist.Artist.pchanged:4 of
msgid "This function is triggered internally when a property is changed."
msgstr "Esta función se activa internamente cuando se cambia una propiedad."

#: matplotlib.artist.Artist.pchanged:17
#: matplotlib.artist.Artist.remove_callback:16 of
msgid ":obj:`add_callback`"
msgstr ":obj:`add_callback`"

#: matplotlib.artist.Artist.remove_callback:2 of
msgid "Remove a callback based on its observer id."
msgstr "Eliminar una devolución de llamada basada en su id de observador."

#: matplotlib.artist.Artist.set_label:2 of
msgid "Set a label that will be displayed in the legend."
msgstr "Establece una etiqueta que se mostrará en la leyenda."

#: matplotlib.artist.Artist.set_label:21 of
msgid "**s**"
msgstr "**s**"

#: of
msgid "object"
msgstr "object"

#: matplotlib.artist.Artist.set_label:8 of
msgid "*s* will be converted to a string by calling `str`."
msgstr "*s* se convertirá en una cadena llamando a `str`."

#: matplotlib.container.ErrorbarContainer:2 of
msgid "Container for the artists of error bars (e.g. created by `.Axes.errorbar`)."
msgstr "Contenedor para los artistas de las barras de error (por ejemplo, creado por `.Axes.errorbar`)."

#: matplotlib.container.ErrorbarContainer:4 of
msgid "The container can be treated as the *lines* tuple itself. Additionally, you can access these and further parameters by the attributes."
msgstr "El contenedor puede ser tratado como la tupla de *líneas*. Además, puede acceder a estos y otros parámetros mediante los atributos."

#: matplotlib.container.ErrorbarContainer:30 of
msgid "**lines**"
msgstr "**líneas**"

#: of
msgid "tuple"
msgstr "tupla"

#: matplotlib.container.ErrorbarContainer:23 of
msgid "Tuple of ``(data_line, caplines, barlinecols)``."
msgstr "Tuple de ``(data_line, caplinas, barlinecols)``."

#: matplotlib.container.ErrorbarContainer:25 of
msgid "data_line : :class:`~matplotlib.lines.Line2D` instance of x, y plot markers and/or line."
msgstr "data_line : :class:instancia `~matplotlib.lines.Line2D` de x, y plot markers y/o línea."

#: matplotlib.container.ErrorbarContainer:27 of
msgid "caplines : tuple of :class:`~matplotlib.lines.Line2D` instances of the error bar caps."
msgstr "caplinas : tupla de :class:instancias `~matplotlib.lines.Line2D` de las capas de la barra de error."

#: matplotlib.container.ErrorbarContainer:29 of
msgid "barlinecols : list of :class:`~matplotlib.collections.LineCollection` with the horizontal and vertical error ranges."
msgstr "barlinecols : lista de :class:`~matplotlib.collections.LineCollection` con los rangos de errores horizontales y verticales."

#: matplotlib.container.ErrorbarContainer:34 of
msgid "**has_xerr, has_yerr**"
msgstr "**has_xerr, has_yerr**"

#: of
msgid "bool"
msgstr "bool"

#: matplotlib.container.ErrorbarContainer:33 of
msgid "``True`` if the errorbar has x/y errors."
msgstr "``Verdadero`` si la barra de error tiene errores x/y."

#: matplotlib.container.StemContainer:2 of
msgid "Container for the artists created in a :meth:`.Axes.stem` plot."
msgstr "Contenedor para los artistas creados en una gráfica :meth:`.Axes.stem`."

#: matplotlib.container.StemContainer:4 of
msgid "The container can be treated like a namedtuple ``(markerline, stemlines, baseline)``."
msgstr "El contenedor puede ser tratado como un nombre ``(markerline, stemlines, baseline)``."

#: matplotlib.container.StemContainer:22 of
msgid "**markerline** : :class:`~matplotlib.lines.Line2D`"
msgstr "**markerline** : :class:`~matplotlib.lines.Line2D`"

#: matplotlib.container.StemContainer:21 matplotlib.container.StemContainer:28
#: of
msgid "Line2D"
msgstr "Line2D"

#: matplotlib.container.StemContainer:22 of
msgid "The artist of the markers at the stem heads."
msgstr "El artista de los marcadores en la cabeza del tallo."

#: matplotlib.container.StemContainer:25 of
msgid "**stemlines** : list of :class:`~matplotlib.lines.Line2D`"
msgstr "**líneas** : lista de :class:`~matplotlib.lines.Line2D`"

#: matplotlib.container.StemContainer:25 of
msgid "The artists of the vertical lines for all stems."
msgstr "Los artistas de las líneas verticales para todos los tallos."

#: matplotlib.container.StemContainer:29 of
msgid "**baseline** : :class:`~matplotlib.lines.Line2D`"
msgstr "**baseline** : :class:`~matplotlib.lines.Line2D`"

#: matplotlib.container.StemContainer:28 of
msgid "The artist of the horizontal baseline."
msgstr "El artista de la línea de base horizontal."

#: matplotlib.container.StemContainer:57 of
msgid "**markerline_stemlines_baseline**"
msgstr "**markerline_stemlines_baseline**"

#: matplotlib.container.StemContainer:41 of
msgid "Tuple of ``(markerline, stemlines, baseline)``. ``markerline`` contains the `.LineCollection` of the markers, ``stemlines`` is a `.LineCollection` of the main lines, ``baseline`` is the `.Line2D` of the baseline."
msgstr "Tuple de ``(markerline, stemlines, baseline)``. ``markerline`` contiene el `.LineCollection` de los marcadores, ``stemlines`` es un `. ineCollection` de las líneas principales, ``baseline`` es el `.Line2D` de la línea base."

